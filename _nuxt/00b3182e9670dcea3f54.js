(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{361:function(n,t){n.exports='<h1 id="pagination-navigation">Pagination Navigation</h1>\n<blockquote>\n<p>Quick first, previous, next, last, and page buttons for navigation based pagination, supporting\nregular links or router links.</p>\n</blockquote>\n<p><code>&lt;b-pagination-nav&gt;</code> is used for navigating to new page URLs. For controlling in page component\npagination (such as table or list pagination), use the\n<a href="/docs/components/pagination"><code>&lt;b-pagination&gt;</code></a> component instead.</p>\n<pre class="hljs html text-monospace p-2"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"overflow-auto"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>Default<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">base-url</span>=<span class="hljs-string">"#"</span> <span class="hljs-attr">:number-of-pages</span>=<span class="hljs-string">"10"</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"currentPage"</span> /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mt-3"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mt-4"</span>&gt;</span>With link generator function<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">:link-gen</span>=<span class="hljs-string">"linkGen"</span> <span class="hljs-attr">:number-of-pages</span>=<span class="hljs-string">"10"</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"currentPage"</span> /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mt-3"</span>&gt;</span>Current Page: {{ currentPage }}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    data() {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">currentPage</span>: <span class="hljs-number">1</span>\n      }\n    },\n    <span class="hljs-attr">methods</span>: {\n      linkGen(pageNum) {\n        <span class="hljs-keyword">return</span> <span class="hljs-string">\'#page/\'</span> + pageNum + <span class="hljs-string">\'/foobar\'</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-pagination-nav.vue --&gt;</span></pre><p><code>&lt;b-pagination-nav&gt;</code> is a custom input component that provides navigational pagination. The current\npage should be set via the <code>value</code> prop (or <code>v-model</code>), and the total number of pages set with\n<code>number-of-pages</code>. Page numbers are indexed from 1 through <code>number-of-pages</code>.</p>\n<h2 id="current-page">Current page</h2>\n<p>You should <strong>always</strong> set the current page number by setting the prop <code>value</code> (or using <code>v-model</code>)\nto ensure that correct active page number is highlighted.</p>\n<h2 id="link-generation">Link generation</h2>\n<p>By default, <code>&lt;b-pagination-nav&gt;</code> generates plain link tags, setting the HREF attribute to <code>base-url</code>\nconcatenated with the page number. The <code>base-url</code> prop defaults to &#39;/&#39;.</p>\n<h3 id="router-links">Router links</h3>\n<p>To generate page links as <a href="https://router.vuejs.org/en/api/router-link.html"><code>&lt;router link&gt;</code></a>\ncomponents, set the <code>use-router</code> prop. The HREF will then become the <code>to</code> prop of the router link.</p>\n<h3 id="link-generator-function">Link Generator function</h3>\n<p>If you need finer grained control over the generated link URLs or <code>&lt;router-link&gt;</code> <code>to</code> props, you\nmay set the <code>link-gen</code> prop to a function reference that accepts one argument which is a page\nnumber. The <code>link-gen</code> function should return either a string (for HREF) or a router <code>to</code> object. If\nthe returned value is an object, then a router-link will always be generated. If the return value is\na string, a link is generated by default unless the <code>use-router</code> prop is set.</p>\n<pre class="hljs js text-monospace p-2"><span class="hljs-comment">// For regular HREF (or string `to` prop if `use-router` is set)</span>\nlinkGen(pageNum) {\n  <span class="hljs-keyword">return</span> <span class="hljs-string">\'/foo/page/\'</span> + pageNum\n}\n\n<span class="hljs-comment">// Returning a router-link `to` object</span>\nlinkGen(pageNum) {\n  <span class="hljs-keyword">return</span> {\n    <span class="hljs-attr">path</span>: <span class="hljs-string">\'/foo/page/\'</span> + pageNum\n  }\n}</pre><h3 id="page-number-generation">Page number generation</h3>\n<p>By default, <code>&lt;b-pagination-nav&gt;</code> renders page numbers (1-N) in the page link buttons. You can\noverride this behaviour by supplying a function reference to the <code>page-gen</code> property. The function\nreference should accept a single argument which is a page number (1-N). The <code>page-gen</code> function\nshould return a string.</p>\n<p><strong>Note:</strong> HTML content in generated page number strings is <strong>not</strong> supported.</p>\n<p><strong>Example: Using an array of links to generate pagination:</strong></p>\n<pre class="hljs html text-monospace p-2"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"overflow-auto"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span>\n      <span class="hljs-attr">:link-gen</span>=<span class="hljs-string">"linkGen"</span>\n      <span class="hljs-attr">:page-gen</span>=<span class="hljs-string">"pageGen"</span>\n      <span class="hljs-attr">:number-of-pages</span>=<span class="hljs-string">"links.length"</span>\n      <span class="hljs-attr">v-model</span>=<span class="hljs-string">"currentPage"</span>\n    /&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mt-3"</span>&gt;</span>\n      Page: {{ currentPage }}<span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span>\n      Page Link: {{ pageLink }}\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-attr">computed</span>: {\n      pageLink() {\n        <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.linkGen(<span class="hljs-keyword">this</span>.currentPage)\n      }\n    },\n    data() {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">currentPage</span>: <span class="hljs-number">1</span>,\n        <span class="hljs-attr">links</span>: [<span class="hljs-string">\'#foo\'</span>, <span class="hljs-string">\'#bar\'</span>, <span class="hljs-string">\'#baz\'</span>, <span class="hljs-string">\'#faz\'</span>]\n      }\n    },\n    <span class="hljs-attr">methods</span>: {\n      linkGen(pageNum) {\n        <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.links[pageNum - <span class="hljs-number">1</span>]\n      },\n      pageGen(pageNum) {\n        <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.links[pageNum - <span class="hljs-number">1</span>].slice(<span class="hljs-number">1</span>)\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-pagination-nav-links.vue --&gt;</span></pre><h2 id="button-size">Button Size</h2>\n<p>Optionally change from the default button size by setting the <code>size</code> prop to either <code>&#39;am</code> for\nsmaller buttons or <code>&#39;lg&#39;</code> for larger buttons.</p>\n<pre class="hljs html text-monospace p-2"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"overflow-auto"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>Small<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"sm"</span> <span class="hljs-attr">base-url</span>=<span class="hljs-string">"#"</span> <span class="hljs-attr">:number-of-pages</span>=<span class="hljs-string">"5"</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"currentPage"</span> /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mt-3"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>Default<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">base-url</span>=<span class="hljs-string">"#"</span> <span class="hljs-attr">:number-of-pages</span>=<span class="hljs-string">"5"</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"currentPage"</span> /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mt-3"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>Large<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"lg"</span> <span class="hljs-attr">base-url</span>=<span class="hljs-string">"#"</span> <span class="hljs-attr">:number-of-pages</span>=<span class="hljs-string">"5"</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"currentPage"</span> /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mt-3"</span>&gt;</span>Current Page: {{ currentPage }}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    data() {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">currentPage</span>: <span class="hljs-number">1</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-pagination-nav-size.vue --&gt;</span></pre><h2 id="customizing">Customizing</h2>\n<p><code>&lt;b-pagination-nav&gt;</code> supports several props that allow you to customize the appearance.</p>\n<table class="table b-table table-striped">\n<thead class="thead-default">\n<tr>\n<th>Prop</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>limit</code></td>\n<td>Limit the maximum number of displayed page buttons (including ellipsis if present, and excluding first/prev/next/last buttons)</td>\n</tr>\n<tr>\n<td><code>number-of-pages</code></td>\n<td>The total number of pages</td>\n</tr>\n<tr>\n<td><code>hide-ellipsis</code></td>\n<td>never show ellipsis indicators</td>\n</tr>\n<tr>\n<td><code>hide-goto-end-buttons</code></td>\n<td>never display goto first/last buttons</td>\n</tr>\n</tbody></table>\n<p>And provides several props for setting the content of the bookend buttons:</p>\n<table class="table b-table table-striped">\n<thead class="thead-default">\n<tr>\n<th>Prop</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>first-text</code></td>\n<td>The &quot;goto first page&quot; button text (plain html supported)</td>\n</tr>\n<tr>\n<td><code>prev-text</code></td>\n<td>The &quot;goto previous page&quot; button text (plain html supported)</td>\n</tr>\n<tr>\n<td><code>next-text</code></td>\n<td>The &quot;goto next page&quot; button text (plain html supported)</td>\n</tr>\n<tr>\n<td><code>last-text</code></td>\n<td>The &quot;goto last page&quot; button text (plain html supported)</td>\n</tr>\n<tr>\n<td><code>ellipsis-text</code></td>\n<td>the <code>...</code> indicator text (plain html supported)</td>\n</tr>\n</tbody></table>\n<p>Ellipsis indicator(s) will only be ever shown at the front and/or end of the page number buttons.\nFor <code>limit</code> values less than or equal to <code>3</code>, the ellipsis indicator(s) will never be shown for\npractical display reasons.</p>\n<p><strong>Note:</strong> HTML is supported via the bookend content props. If allowing user supplied content to\npopulate these props, you should use named slots (see below) instead to avoid possible XSS attacks.</p>\n<h3 id="named-slots">Named slots</h3>\n<p><code>&lt;b-pagination-nav&gt;</code> supports several slots that allow you to customize the appearance.</p>\n<table class="table b-table table-striped">\n<thead class="thead-default">\n<tr>\n<th>Slot</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>first-text</code></td>\n<td>The &quot;goto first page&quot; button text (html/sub-components supported)</td>\n</tr>\n<tr>\n<td><code>prev-text</code></td>\n<td>The &quot;goto previous page&quot; button text (html/sub-components supported)</td>\n</tr>\n<tr>\n<td><code>next-text</code></td>\n<td>The &quot;goto next page&quot; button text (html/sub-components supported)</td>\n</tr>\n<tr>\n<td><code>last-text</code></td>\n<td>The &quot;goto last page&quot; button text (html/sub-components supported)</td>\n</tr>\n<tr>\n<td><code>ellipsis-text</code></td>\n<td>the <code>...</code> indicator text (html/sub-components supported)</td>\n</tr>\n</tbody></table>\n<h2 id="alignment">Alignment</h2>\n<p>By default the pagination component is left aligned. Change the alignment to <code>center</code> or <code>right</code>\n(<code>right</code> is an alias for <code>end</code>) by setting the prop <code>align</code> to the appropriate value.</p>\n<pre class="hljs html text-monospace p-2"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"overflow-auto"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>Left alignment (default)<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">:number-of-pages</span>=<span class="hljs-string">"10"</span> <span class="hljs-attr">base-url</span>=<span class="hljs-string">"#"</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"currentPage"</span> /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mt-3 text-center"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>Center alignment<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"center"</span> <span class="hljs-attr">:number-of-pages</span>=<span class="hljs-string">"10"</span> <span class="hljs-attr">base-url</span>=<span class="hljs-string">"#"</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"currentPage"</span> /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mt-3 text-right"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>Right (end) alignment<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"right"</span> <span class="hljs-attr">:number-of-pages</span>=<span class="hljs-string">"10"</span> <span class="hljs-attr">base-url</span>=<span class="hljs-string">"#"</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"currentPage"</span> /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mt-3"</span>&gt;</span>Current Page: {{ currentPage }}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    data() {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">currentPage</span>: <span class="hljs-number">1</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-pagination-nav-alignment.vue --&gt;</span></pre><h2 id="small-screen-support">Small screen support</h2>\n<p>On smaller screens (i.e. mobile), some of the <code>&lt;b-pagination&gt;</code> buttons will be hidden to minimize\nthe potential of the pagination interface wrapping onto multiple lines:</p>\n<ul>\n<li>The ellipsis indicators will be hidden on screens <code>xs</code> and smaller.</li>\n<li>Page number buttons will be limited to a maximum of 3 visible on <code>xs</code> screens and smaller.</li>\n</ul>\n<p>This ensures that no more than 3 page number buttons are visible, along with the goto <em>first</em>,\n<em>prev</em>, <em>next</em>, and <em>last</em> buttons.</p>\n<h2 id="accessibility">Accessibility</h2>\n<p>The <code>&lt;b-pagination&gt;</code> component provides many features to support assistive technology users, such as\n<code>aria-</code> attributes and keyboard navigation.</p>\n<h3 id="aria-labels">ARIA labels:</h3>\n<p><code>&lt;b-pagination&gt;</code> provides various <code>*-label-*</code> props which are used to set the <code>aria-label</code>\nattributes on the various elements within the component, which will help users of assistive\ntechnology.</p>\n<table class="table b-table table-striped">\n<thead class="thead-default">\n<tr>\n<th>Prop</th>\n<th><code>aria-label</code> content default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>label-first-page</code></td>\n<td>&quot;Go to first page&quot;</td>\n</tr>\n<tr>\n<td><code>label-prev-page</code></td>\n<td>&quot;Go to previous page&quot;</td>\n</tr>\n<tr>\n<td><code>label-next-page</code></td>\n<td>&quot;Go to next page&quot;</td>\n</tr>\n<tr>\n<td><code>label-last-page</code></td>\n<td>&quot;Go to last page&quot;</td>\n</tr>\n<tr>\n<td><code>label-page</code></td>\n<td>&quot;Go to page&quot;, appended with the page number</td>\n</tr>\n<tr>\n<td><code>aria-label</code></td>\n<td>&quot;Pagination&quot;, applied to the outer pagination container</td>\n</tr>\n</tbody></table>\n<h3 id="keyboard-navigation-support">Keyboard navigation support:</h3>\n<p><code>&lt;b-pagination&gt;</code> supports keyboard navigation out of the box.</p>\n<ul>\n<li>Tabbing into the pagination component will auto-focus the current page button</li>\n<li><kbd>LEFT</kbd> and <kbd>RIGHT</kbd> arrow keys will focus the previous and next buttons in the\npage list, respectively, and <kbd>ENTER</kbd> or <kbd>SPACE</kbd> keys will select (click) the\nfocused page button</li>\n</ul>\n<h2 id="see-also">See also</h2>\n<p>For pagination control of a component (such as <code>&lt;b-table&gt;</code>), use the\n<a href="/docs/components/pagination"><code>&lt;b-pagination&gt;</code></a> component instead.</p>\n\x3c!-- Component reference added automatically from component package.json --\x3e\n'}}]);
//# sourceMappingURL=00b3182e9670dcea3f54.js.map