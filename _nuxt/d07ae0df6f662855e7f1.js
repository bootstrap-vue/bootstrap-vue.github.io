(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{371:function(t,n){t.exports='<h1 id="tooltips"><span class="bd-content-title">Tooltips</span></h1>\n<p class="bd-lead">Documentation and examples for adding custom BootstrapVue tooltips, using Bootstrap v4 CSS for\nstyling and animations. Tooltips can be triggered by hovering, focusing, or clicking an element</p>\n<p>Use the <code translate="no" class="notranslate">v-b-tooltip</code> directive on any element or component where you would like a tooltip to\nappear.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"text-center my-3"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Tooltip content"</span>&gt;</span>Hover Me<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tooltip.vue --&gt;</span></pre><h2 id="overview"><span class="bd-content-title">Overview<a class="anchorjs-link" href="#overview" aria-label="Anchor"></a></span></h2>\n<p>Things to know when using tooltips:</p>\n<ul>\n<li>Tooltips rely on the 3rd party library <a href="https://popper.js.org/">Popper.js</a> for positioning.</li>\n<li>Tooltips with zero-length titles are never displayed.</li>\n<li>Specify container: &#39;body&#39; (default) to avoid rendering problems in more complex components (like\ninput groups, button groups, etc).</li>\n<li>Triggering tooltips on hidden elements will not work.</li>\n<li>Tooltips for <code translate="no" class="notranslate">disabled</code> elements must be triggered on a wrapper element.</li>\n<li>When triggered from hyperlinks that span multiple lines, tooltips will be centered. Use\nwhite-space: nowrap; on your <code translate="no" class="notranslate">&lt;a&gt;</code>s, <code translate="no" class="notranslate">&lt;b-link&gt;</code>s and <code translate="no" class="notranslate">&lt;router-link&gt;</code>s to avoid this behavior.</li>\n<li>Tooltips must be hidden before their corresponding elements have been removed from the DOM.</li>\n</ul>\n<h2 id="positioning"><span class="bd-content-title">Positioning<a class="anchorjs-link" href="#positioning" aria-label="Anchor"></a></span></h2>\n<p>Twelve options are available for positioning: <code translate="no" class="notranslate">top</code>, <code translate="no" class="notranslate">topleft</code>, <code translate="no" class="notranslate">topright</code>, <code translate="no" class="notranslate">right</code>, <code translate="no" class="notranslate">righttop</code>,\n<code translate="no" class="notranslate">rightbottom</code>, <code translate="no" class="notranslate">bottom</code>, <code translate="no" class="notranslate">bottomleft</code>, <code translate="no" class="notranslate">bottomright</code>, <code translate="no" class="notranslate">left</code>, <code translate="no" class="notranslate">lefttop</code>, and <code translate="no" class="notranslate">leftbottom</code> aligned.\nThe default position is <code translate="no" class="notranslate">top</code>. Positioning is relative to the trigger element.</p>\n<div class="bd-example bd-example-tooltip-static">\n  <div class="tooltip bs-tooltip-top bs-tooltip-top-docs" role="tooltip">\n    <div class="arrow" style="left: 6px"></div>\n    <div class="tooltip-inner">Tooltip on the top</div>\n  </div>\n  <div class="tooltip bs-tooltip-top bs-tooltip-top-docs" role="tooltip">\n    <div class="arrow" style="right: 6px"></div>\n    <div class="tooltip-inner">Tooltip on the topleft</div>\n  </div>\n  <div class="tooltip bs-tooltip-top bs-tooltip-top-docs" role="tooltip">\n    <div class="arrow" style="left: 6px"></div>\n    <div class="tooltip-inner">Tooltip on the topright</div>\n  </div>\n  <div class="tooltip bs-tooltip-right bs-tooltip-right-docs" role="tooltip">\n    <div class="arrow" style="top: 4px"></div>\n    <div class="tooltip-inner">Tooltip on the right</div>\n  </div>\n  <div class="tooltip bs-tooltip-right bs-tooltip-right-docs" role="tooltip">\n    <div class="arrow" style="bottom: 4px"></div>\n    <div class="tooltip-inner">Tooltip on the righttop</div>\n  </div>\n  <div class="tooltip bs-tooltip-right bs-tooltip-right-docs" role="tooltip">\n    <div class="arrow" style="top: 4px"></div>\n    <div class="tooltip-inner">Tooltip on the rightbottom</div>\n  </div>\n  <div class="tooltip bs-tooltip-bottom bs-tooltip-bottom-docs" role="tooltip">\n    <div class="arrow" style="left: 6px"></div>\n    <div class="tooltip-inner">Tooltip on the bottom</div>\n  </div>\n  <div class="tooltip bs-tooltip-bottom bs-tooltip-bottom-docs" role="tooltip">\n    <div class="arrow" style="right: 6px"></div>\n    <div class="tooltip-inner">Tooltip on the bottomleft</div>\n  </div>\n  <div class="tooltip bs-tooltip-bottom bs-tooltip-bottom-docs" role="tooltip">\n    <div class="arrow" style="left: 6px"></div>\n    <div class="tooltip-inner">Tooltip on the bottomright</div>\n  </div>\n  <div class="tooltip bs-tooltip-left bs-tooltip-left-docs" role="tooltip">\n    <div class="arrow" style="top: 4px"></div>\n    <div class="tooltip-inner">Tooltip on the left</div>\n  </div>\n  <div class="tooltip bs-tooltip-left bs-tooltip-left-docs" role="tooltip">\n    <div class="arrow" style="bottom: 4px"></div>\n    <div class="tooltip-inner">Tooltip on the lefttop</div>\n  </div>\n  <div class="tooltip bs-tooltip-left bs-tooltip-left-docs" role="tooltip">\n    <div class="arrow" style="top: 4px"></div>\n    <div class="tooltip-inner">Tooltip on the leftbottom</div>\n  </div>\n</div>\n\n<p><strong>Live example</strong></p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">fluid</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"text-center"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">"3"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"py-3"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover.top</span>=<span class="hljs-string">"\'ToolTip!\'"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"primary"</span>&gt;</span>Top<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">"3"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"py-3"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover.right</span>=<span class="hljs-string">"\'ToolTip!\'"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"primary"</span>&gt;</span>Right<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">"3"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"py-3"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover.left</span>=<span class="hljs-string">"\'ToolTip!\'"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"primary"</span>&gt;</span>Left<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">"3"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"py-3"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover.bottom</span>=<span class="hljs-string">"\'ToolTip!\'"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"primary"</span>&gt;</span>Bottom<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tooltip-positioning.vue --&gt;</span></pre><h2 id="triggers"><span class="bd-content-title">Triggers<a class="anchorjs-link" href="#triggers" aria-label="Anchor"></a></span></h2>\n<p>Tooltips can be triggered (opened/closed) via any combination of <code translate="no" class="notranslate">click</code>, <code translate="no" class="notranslate">hover</code> and <code translate="no" class="notranslate">focus</code>. The\ndefault trigger is <code translate="no" class="notranslate">hover focus</code>.</p>\n<p>If a tooltip has more than one trigger, then all triggers must be cleared before the tooltip will\nclose. I.e. if a tooltip has the trigger <code translate="no" class="notranslate">focus click</code>, and it was opened by <code translate="no" class="notranslate">focus</code>, and the user\nthen clicks the trigger element, they must click it again <strong>and</strong> move focus to close the tooltip.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-container</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"text-center"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">"3"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"py-3"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip</span>=<span class="hljs-string">"\'ToolTip!\'"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"outline-success"</span>&gt;</span>Hover + Focus<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">"3"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"py-3"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover</span>=<span class="hljs-string">"\'ToolTip!\'"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"outline-success"</span>&gt;</span>Hover<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">"3"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"py-3"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.click</span>=<span class="hljs-string">"\'ToolTip!\'"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"outline-success"</span>&gt;</span>Click<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">"3"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"py-3"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.focus</span>=<span class="hljs-string">"\'ToolTip!\'"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"outline-success"</span>&gt;</span>Focus<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tooltip-triggers.vue --&gt;</span></pre><h3 id="dismiss-on-next-click"><span class="bd-content-title">Dismiss on next click<a class="anchorjs-link" href="#dismiss-on-next-click" aria-label="Anchor"></a></span></h3>\n<p>Use both <code translate="no" class="notranslate">click</code> and <code translate="no" class="notranslate">blur</code> if you would like a tooltip that opens only on click of the element, but\nwill close when anything else in the document is clicked or receives focus.</p>\n<p>Note that your element <strong>must</strong> be in the document tab sequence for this to work. If your element is\nnot tabbable, add the <code translate="no" class="notranslate">tabindex=&quot;0&quot;</code> attribute to the element.</p>\n<h2 id="title-content"><span class="bd-content-title">Title content<a class="anchorjs-link" href="#title-content" aria-label="Anchor"></a></span></h2>\n<p>There are several options for providing the title of a tooltip.</p>\n<p>By default, tooltip will use the <code translate="no" class="notranslate">title</code> attribute of the element as the tooltip content. The title\ncan also be passed as an object to <code translate="no" class="notranslate">v-b-tooltip</code> in the form of</p>\n\x3c!-- eslint-disable no-unused-vars --\x3e\n\n<pre class="hljs js text-monospace p-2 notranslate" translate="no"><span class="hljs-keyword">const</span> options = {\n  <span class="hljs-attr">title</span>: <span class="hljs-string">\'This is the title\'</span>\n}</pre><p>If your title content has basic HTML markup, then you will also need to set the <code translate="no" class="notranslate">html</code> property to\ntrue, or use the directive modifier <code translate="no" class="notranslate">html</code></p>\n\x3c!-- eslint-disable no-unused-vars --\x3e\n\n<pre class="hljs js text-monospace p-2 notranslate" translate="no"><span class="hljs-comment">// Object format with HTML</span>\n<span class="hljs-keyword">const</span> options = {\n  <span class="hljs-attr">title</span>: <span class="hljs-string">\'This is the &lt;strong&gt;title&lt;/strong&gt;\'</span>,\n  <span class="hljs-attr">html</span>: <span class="hljs-literal">true</span>\n}</pre><p>Title can also be a function reference, which is called each time the tooltip is opened.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-container</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"text-center"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">"3"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"py-3"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Tip from title attribute"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"success"</span>&gt;</span>Title<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">"3"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"py-3"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover</span>=<span class="hljs-string">"\'String Tip\'"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"success"</span>&gt;</span>String<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">"3"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"py-3"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover.html</span>=<span class="hljs-string">"tipData"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"success"</span>&gt;</span>Data<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">"3"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"py-3"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover.html</span>=<span class="hljs-string">"tipMethod"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"success"</span>&gt;</span>Method<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    data() {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">tipData</span>: <span class="hljs-string">\'Tooltip &lt;em&gt;Message&lt;/em&gt;\'</span>\n      }\n    },\n    <span class="hljs-attr">methods</span>: {\n      tipMethod() {\n        <span class="hljs-keyword">return</span> <span class="hljs-string">\'&lt;strong&gt;\'</span> + <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>() + <span class="hljs-string">\'&lt;/strong&gt;\'</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tooltip-content.vue --&gt;</span></pre><h2 id="variants-and-custom-class"><span class="bd-content-title">Variants and custom class<a class="anchorjs-link" href="#variants-and-custom-class" aria-label="Anchor"></a></span></h2>\n<p><span class="badge badge-info small">NEW in 2.0.0-rc.26</span></p>\n<p>BootstrapVue&#39;s tooltips support contextual color variants via our custom CSS, either by using\ndirective modifiers or config options:</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">fluid</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"text-center"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover.v-danger</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Danger variant"</span>&gt;</span>Danger Modifier<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover</span>=<span class="hljs-string">"{ variant: \'info\' }"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Info variant"</span>&gt;</span>Info Config<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-comment">&lt;!-- b-tooltip-variants.vue --&gt;</span></pre><p>Bootstrap default theme variants are: <code translate="no" class="notranslate">danger</code>, <code translate="no" class="notranslate">warning</code>, <code translate="no" class="notranslate">success</code>, <code translate="no" class="notranslate">primary</code>, <code translate="no" class="notranslate">secondary</code>,\n<code translate="no" class="notranslate">info</code>, <code translate="no" class="notranslate">light</code>, and <code translate="no" class="notranslate">dark</code>. You can change or add additional variants via Bootstrap\n<a href="/docs/reference/theming">SCSS variables</a></p>\n<p>A custom class can be applied to the tooltip outer wrapper <code translate="no" class="notranslate">&lt;div&gt;</code> by using the <code translate="no" class="notranslate">customClass</code> option\nproperty:</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover</span>=<span class="hljs-string">"{ customClass: \'my-tooltip-class\' }"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Tooltip"</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span></pre><p><strong>Note:</strong> Custom classes will not work with scoped styles, as the tooltips are appended to the\ndocument <code translate="no" class="notranslate">&lt;body&gt;</code> element by default.</p>\n<h2 id="directive-syntax-and-usage"><span class="bd-content-title">Directive syntax and usage<a class="anchorjs-link" href="#directive-syntax-and-usage" aria-label="Anchor"></a></span></h2>\n<pre class="hljs  text-monospace p-2 notranslate" translate="no">v-b-tooltip:[container].[mod1].[mod2].[...].[modN]="<value>"</pre><p>Where [container] can be (optional)</p>\n<ul>\n<li>An element ID (minus the #) to place the tooltip markup in</li>\n<li>If not provided, tooltips are appended to the <code translate="no" class="notranslate">body</code>. If the trigger element is inside a modal,\nthe tooltip will be appended to the modal&#39;s container</li>\n</ul>\n<p>Where [modX] can be (all optional):</p>\n<ul>\n<li>Positioning: <code translate="no" class="notranslate">top</code>, <code translate="no" class="notranslate">bottom</code>, <code translate="no" class="notranslate">left</code>, <code translate="no" class="notranslate">right</code>, <code translate="no" class="notranslate">auto</code>, <code translate="no" class="notranslate">topleft</code>, <code translate="no" class="notranslate">topright</code>, <code translate="no" class="notranslate">bottomleft</code>,\n<code translate="no" class="notranslate">bottomright</code>, <code translate="no" class="notranslate">lefttop</code>, <code translate="no" class="notranslate">leftbottom</code>, <code translate="no" class="notranslate">righttop</code>, or <code translate="no" class="notranslate">rightbottom</code> (last one found wins,\ndefaults to <code translate="no" class="notranslate">top</code>)</li>\n<li>Event trigger: <code translate="no" class="notranslate">click</code>, <code translate="no" class="notranslate">hover</code>, <code translate="no" class="notranslate">focus</code>, <code translate="no" class="notranslate">blur</code> (if none specified, defaults to <code translate="no" class="notranslate">focus</code> and\n<code translate="no" class="notranslate">hover</code>. <code translate="no" class="notranslate">blur</code> is a close handler only, and if specified by itself, will be converted to <code translate="no" class="notranslate">focus</code>)</li>\n<li><code translate="no" class="notranslate">nofade</code> to turn off animation</li>\n<li><code translate="no" class="notranslate">html</code> to enable rendering raw HTML. By default HTML is escaped and converted to text</li>\n<li>A delay value in the format of <code translate="no" class="notranslate">d###</code> (where <code translate="no" class="notranslate">###</code> is in ms, defaults to 0)</li>\n<li>An offset value in pixels in the format of <code translate="no" class="notranslate">o###</code> (where <code translate="no" class="notranslate">###</code> is the number of pixels, defaults\nto 0. Negative values allowed)</li>\n<li>A boundary setting of <code translate="no" class="notranslate">window</code> or <code translate="no" class="notranslate">viewport</code>. The element to constrain the visual placement of the\ntooltip. If not specified, the boundary defaults to the trigger element&#39;s scroll parent (in most\ncases this will suffice)</li>\n<li>A contextual variant in the form of <code translate="no" class="notranslate">v-XXX</code> (where <code translate="no" class="notranslate">XXX</code> is the color variant name)</li>\n</ul>\n<p>Where <code translate="no" class="notranslate">&lt;value&gt;</code> can be (optional):</p>\n<ul>\n<li>A string containing the title of the tooltip</li>\n<li>A function reference to generate the title of the tooltip (receives one arg which is a reference\nto the DOM element triggering the tooltip)</li>\n<li>An object containing more complex configuration of tooltip. See below for accepted object\nproperties:</li>\n</ul>\n<p><strong>Options configuration object properties:</strong></p>\n<div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table">\n<thead class="thead-default">\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code translate="no" class="notranslate">animation</code></td>\n<td>boolean</td>\n<td><code translate="no" class="notranslate">true</code></td>\n<td>Apply a CSS fade transition to the tooltip.</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate">container</code></td>\n<td>string or Element or <code translate="no" class="notranslate">false</code></td>\n<td><code translate="no" class="notranslate">false</code></td>\n<td>Appends the tooltip to a specific element. Example: <code translate="no" class="notranslate">container: &#39;body&#39;</code>. This option is particularly useful in that it allows you to position the tooltip in the flow of the document near the triggering element - which will prevent the tooltip from floating away from the triggering element during a window resize. When set to <code translate="no" class="notranslate">false</code> the tooltip will be appended to <code translate="no" class="notranslate">body</code>, or if the trigger element is inside a modal it will append to the modal&#39;s container.</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate">delay</code></td>\n<td>Number or Object</td>\n<td><code translate="no" class="notranslate">0</code></td>\n<td>Delay showing and hiding the tooltip (ms). If a number is supplied, delay is applied to both hide/show. Object structure is: <code translate="no" class="notranslate">delay: { &quot;show&quot;: 500, &quot;hide&quot;: 100 }</code></td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate">html</code></td>\n<td>Boolean</td>\n<td><code translate="no" class="notranslate">false</code></td>\n<td>Allow HTML in the tooltip. If true, HTML tags in the tooltip&#39;s title will be rendered in the tooltip. If false, the title will be inserted as plain text. Use text if you&#39;re worried about XSS attacks.</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate">placement</code></td>\n<td>String or Function</td>\n<td><code translate="no" class="notranslate">&#39;top&#39;</code></td>\n<td>How to position the tooltip - <code translate="no" class="notranslate">auto</code>, <code translate="no" class="notranslate">top</code>, <code translate="no" class="notranslate">bottom</code>, <code translate="no" class="notranslate">left</code>, <code translate="no" class="notranslate">right</code>, <code translate="no" class="notranslate">topleft</code>, <code translate="no" class="notranslate">topright</code>, <code translate="no" class="notranslate">bottomleft</code>, <code translate="no" class="notranslate">bottomright</code>, <code translate="no" class="notranslate">lefttop</code>, <code translate="no" class="notranslate">leftbottom</code>, <code translate="no" class="notranslate">righttop</code>, or <code translate="no" class="notranslate">rightbottom</code>. When <code translate="no" class="notranslate">auto</code> is specified, it will dynamically reorient the tooltip.</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate">title</code></td>\n<td>String or Element or function</td>\n<td><code translate="no" class="notranslate">&#39;&#39;</code></td>\n<td>Default title value if title attribute isn&#39;t present. If a function is given, it must return a string.</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate">trigger</code></td>\n<td>String</td>\n<td><code translate="no" class="notranslate">&#39;hover focus&#39;</code></td>\n<td>How tooltip is triggered: <code translate="no" class="notranslate">click</code>, <code translate="no" class="notranslate">hover</code>, <code translate="no" class="notranslate">focus</code>. You may pass multiple triggers; separate them with a space.</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate">offset</code></td>\n<td>Number or String</td>\n<td><code translate="no" class="notranslate">0</code></td>\n<td>Offset of the tooltip relative to its target. For more information refer to Popper.js&#39;s offset docs.</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate">fallbackPlacement</code></td>\n<td>String or Array</td>\n<td><code translate="no" class="notranslate">&#39;flip&#39;</code></td>\n<td>Allow to specify which position Popper will use on fallback. Can be <code translate="no" class="notranslate">flip</code>, <code translate="no" class="notranslate">clockwise</code>, <code translate="no" class="notranslate">counterclockwise</code> or an array of placements. For more information refer to Popper.js&#39;s behavior docs.</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate">boundary</code></td>\n<td>String or HTMLElement reference</td>\n<td><code translate="no" class="notranslate">&#39;scrollParent&#39;</code></td>\n<td>The container that the tooltip will be constrained visually. The default should suffice in most cases, but you may need to change this if your target element is in a small container with overflow scroll. Supported values: <code translate="no" class="notranslate">&#39;scrollParent&#39;</code> (default), <code translate="no" class="notranslate">&#39;viewport&#39;</code>, <code translate="no" class="notranslate">&#39;window&#39;</code>, or a reference to an HTML element.</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate">boundaryPadding</code></td>\n<td>Number</td>\n<td><code translate="no" class="notranslate">5</code></td>\n<td>Amount of pixel used to define a minimum distance between the boundaries and the tooltip. This makes sure the tooltip always has a little padding between the edges of its container.</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate">variant</code></td>\n<td>String</td>\n<td><code translate="no" class="notranslate">null</code></td>\n<td>Contextual color variant for the tooltip.</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate">customClass</code></td>\n<td>String</td>\n<td><code translate="no" class="notranslate">null</code></td>\n<td>A custom classname to apply to the tooltip outer wrapper element.</td>\n</tr>\n</tbody></table>\n</div><h3 id="usage"><span class="bd-content-title">Usage<a class="anchorjs-link" href="#usage" aria-label="Anchor"></a></span></h3>\n<p><strong>Simplest usage:</strong></p>\n<pre class="hljs  text-monospace p-2 notranslate" translate="no">v-b-tooltip="\'This is a Tooltip!\'"</pre><p>or use the element&#39;s <code translate="no" class="notranslate">title</code> attribute for the tooltip content:</p>\n<pre class="hljs  text-monospace p-2 notranslate" translate="no">v-b-tooltip title="This is a title Tooltip"</pre><p><strong>Placement examples:</strong></p>\n<pre class="hljs  text-monospace p-2 notranslate" translate="no">v-b-tooltip.bottom\nv-b-tooltip.right</pre><p><strong>Variant examples:</strong></p>\n<pre class="hljs  text-monospace p-2 notranslate" translate="no">v-b-tooltip.v-primary => `primary` variant\nv-b-tooltip.v-danger => `danger` variant</pre><p><strong>Trigger examples:</strong></p>\n<pre class="hljs  text-monospace p-2 notranslate" translate="no">v-b-tooltip.hover => Hover only\nv-b-tooltip.click => Click only\nv-b-tooltip.hover.focus => Both hover and focus</pre><p><strong>Combo:</strong></p>\n<pre class="hljs  text-monospace p-2 notranslate" translate="no">v-b-tooltip.hover.bottom => Show on hover and place at bottom\nv-b-tooltip.bottom.hover => Same as above\nv-b-tooltip.bottom.hover.v-danger => Same as above, but with variant</pre><p><strong>Object:</strong></p>\n<pre class="hljs  text-monospace p-2 notranslate" translate="no">v-b-tooltip="{ title: \'Title\', placement: \'bottom\', variant: \'danger\' }"</pre><h2 id="hiding-and-showing-tooltips-via-root-events"><span class="bd-content-title">Hiding and showing tooltips via $root events<a class="anchorjs-link" href="#hiding-and-showing-tooltips-via-root-events" aria-label="Anchor"></a></span></h2>\n<p>You can close (hide) <strong>all open tooltips</strong> by emitting the <code translate="no" class="notranslate">bv::hide::tooltip</code> event on $root:</p>\n<pre class="hljs js text-monospace p-2 notranslate" translate="no"><span class="hljs-keyword">this</span>.$root.$emit(<span class="hljs-string">\'bv::hide::tooltip\'</span>)</pre><p>To close a <strong>specific tooltip</strong>, pass the trigger element&#39;s <code translate="no" class="notranslate">id</code> as the first argument:</p>\n<pre class="hljs js text-monospace p-2 notranslate" translate="no"><span class="hljs-keyword">this</span>.$root.$emit(<span class="hljs-string">\'bv::show::tooltip\'</span>, <span class="hljs-string">\'my-trigger-button-id\'</span>)</pre><p>To open a <strong>specific tooltip</strong>, pass the trigger element&#39;s <code translate="no" class="notranslate">id</code> as the first argument when emitting\nthe <code translate="no" class="notranslate">bv::show::tooltip</code> $root event:</p>\n<pre class="hljs js text-monospace p-2 notranslate" translate="no"><span class="hljs-keyword">this</span>.$root.$emit(<span class="hljs-string">\'bv::show::tooltip\'</span>, <span class="hljs-string">\'my-trigger-button-id\'</span>)</pre><p>To open all popovers simultaneously, omit the <code translate="no" class="notranslate">id</code> argument when emitting the <code translate="no" class="notranslate">bv::show::tooltip</code>\nevent.</p>\n<p>These events work for both the component <strong>and</strong> directive versions of tooltip.</p>\n<p>Note the <strong>trigger element</strong> must exist in the DOM and be in a visible state in order for the\ntooltip to show.</p>\n<h2 id="disabling-and-enabling-tooltips-via-root-events"><span class="bd-content-title">Disabling and enabling tooltips via $root events<a class="anchorjs-link" href="#disabling-and-enabling-tooltips-via-root-events" aria-label="Anchor"></a></span></h2>\n<p>You can disable <strong>all open tooltips</strong> by emitting the <code translate="no" class="notranslate">bv::disable::tooltip</code> event on $root:</p>\n<pre class="hljs js text-monospace p-2 notranslate" translate="no"><span class="hljs-keyword">this</span>.$root.$emit(<span class="hljs-string">\'bv::disable::tooltip\'</span>)</pre><p>To disable a <strong>specific tooltip</strong>, pass the trigger element&#39;s <code translate="no" class="notranslate">id</code> as the first argument:</p>\n<pre class="hljs js text-monospace p-2 notranslate" translate="no"><span class="hljs-keyword">this</span>.$root.$emit(<span class="hljs-string">\'bv::disable::tooltip\'</span>, <span class="hljs-string">\'my-trigger-button-id\'</span>)</pre><p>To enable a <strong>specific tooltip</strong>, pass the trigger element&#39;s <code translate="no" class="notranslate">id</code> as the first argument when\nemitting the <code translate="no" class="notranslate">bv::enable::tooltip</code> $root event:</p>\n<pre class="hljs js text-monospace p-2 notranslate" translate="no"><span class="hljs-keyword">this</span>.$root.$emit(<span class="hljs-string">\'bv::enable::tooltip\'</span>, <span class="hljs-string">\'my-trigger-button-id\'</span>)</pre><p>To enable all popovers simultaneously, omit the <code translate="no" class="notranslate">id</code> argument when emitting the\n<code translate="no" class="notranslate">bv::enable::tooltip</code> event.</p>\n<p>These events work for both the component <strong>and</strong> directive versions of tooltip.</p>\n<p>Note the <strong>trigger element</strong> must exist in the DOM in order for the tooltip to be enabled or\ndisabled.</p>\n<h2 id="see-also"><span class="bd-content-title">See also<a class="anchorjs-link" href="#see-also" aria-label="Anchor"></a></span></h2>\n<ul>\n<li><a href="/docs/directives/popover"><code translate="no" class="notranslate">v-b-popover</code> directive</a></li>\n<li><a href="/docs/components/tooltip"><code translate="no" class="notranslate">&lt;b-tooltip&gt;</code> component</a></li>\n<li><a href="/docs/components/popover"><code translate="no" class="notranslate">&lt;b-popover&gt;</code> component</a></li>\n</ul>\n\x3c!-- Directive reference section auto generated from directive package.json --\x3e\n'}}]);