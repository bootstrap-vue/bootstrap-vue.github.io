(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{341:function(e,n){e.exports='<h1 id="responsive-embeds"><span class="bd-content-title">Responsive Embeds</span></h1>\n<p class="bd-lead">Create responsive video or slideshow embeds based on the width of the parent by creating an\nintrinsic ratio that scales on any device.</p>\n<p>Rules are directly applied to <code translate="no" class="notranslate">&lt;iframe&gt;</code>, <code translate="no" class="notranslate">&lt;embed&gt;</code>, <code translate="no" class="notranslate">&lt;video&gt;</code>, and <code translate="no" class="notranslate">&lt;object&gt;</code> elements</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-embed</span>\n    <span class="hljs-attr">type</span>=<span class="hljs-string">"iframe"</span>\n    <span class="hljs-attr">aspect</span>=<span class="hljs-string">"16by9"</span>\n    <span class="hljs-attr">src</span>=<span class="hljs-string">"https://www.youtube.com/embed/zpOULjyy-n8?rel=0"</span>\n    <span class="hljs-attr">allowfullscreen</span>\n  &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-embed</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-embed.vue --&gt;</span></pre><h2 id="embed-types"><span class="bd-content-title">Embed types<a class="anchorjs-link" href="#embed-types" aria-label="Anchor"></a></span></h2>\n<p>Supported embed types are <code translate="no" class="notranslate">iframe</code> (default), <code translate="no" class="notranslate">video</code>, <code translate="no" class="notranslate">embed</code> and <code translate="no" class="notranslate">object</code>, which translate to the\nstandard HTML <code translate="no" class="notranslate">&lt;iframe&gt;</code>, <code translate="no" class="notranslate">&lt;video&gt;</code>, <code translate="no" class="notranslate">&lt;embed&gt;</code> and <code translate="no" class="notranslate">&lt;object&gt;</code> elements.</p>\n<p>Set the type of embed you would like via the <code translate="no" class="notranslate">type</code> prop.</p>\n<h2 id="aspect-ratios"><span class="bd-content-title">Aspect ratios<a class="anchorjs-link" href="#aspect-ratios" aria-label="Anchor"></a></span></h2>\n<p>Aspect ratios can be set via the <code translate="no" class="notranslate">aspect</code> prop. Supported aspect ratios are: <code translate="no" class="notranslate">21by9</code> (21:9), <code translate="no" class="notranslate">16by9</code>\n(16:9), <code translate="no" class="notranslate">4by3</code> (4:3) and <code translate="no" class="notranslate">1by1</code> (1:1). The default aspect is <code translate="no" class="notranslate">16by9</code>. Aspect ratios are defined in\nBootstrap&#39;s SCSS and translate to the classname <code translate="no" class="notranslate">embed-responsive-{aspect}</code> (i.e.\n<code translate="no" class="notranslate">embed-responsive-16by9</code>, <code translate="no" class="notranslate">embed-responsive-4by3</code>, etc.).</p>\n<h2 id="wrapper-element"><span class="bd-content-title">Wrapper element<a class="anchorjs-link" href="#wrapper-element" aria-label="Anchor"></a></span></h2>\n<p>The Responsive embed is wrapped in an outer element (default is <code translate="no" class="notranslate">div</code>) to enforce the responsive\naspect ratio. You can change this tag via the <code translate="no" class="notranslate">tag</code> prop.</p>\n<h2 id="attributes-and-child-elements"><span class="bd-content-title">Attributes and child elements<a class="anchorjs-link" href="#attributes-and-child-elements" aria-label="Anchor"></a></span></h2>\n<p>Any additional attributes provided to <code translate="no" class="notranslate">&lt;b-embed&gt;</code> (other than the above <code translate="no" class="notranslate">type</code>, <code translate="no" class="notranslate">aspect</code> and <code translate="no" class="notranslate">tag</code>\nprops) are applied to the inner embedded element (i.e. the <code translate="no" class="notranslate">iframe</code>, <code translate="no" class="notranslate">video</code>, <code translate="no" class="notranslate">embed</code> or <code translate="no" class="notranslate">object</code>).</p>\n<p>Any children elements between the opening and closing <code translate="no" class="notranslate">&lt;b-embed&gt;</code> will be placed inside the inner\nembedded element. Note that the type <code translate="no" class="notranslate">iframe</code> does not support any children.</p>\n<p><strong>Example: Responsive embedding of an HTML5 <code translate="no" class="notranslate">&lt;video&gt;</code></strong></p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-embed</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"video"</span> <span class="hljs-attr">aspect</span>=<span class="hljs-string">"4by3"</span> <span class="hljs-attr">controls</span> <span class="hljs-attr">poster</span>=<span class="hljs-string">"poster.png"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">source</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"dev-stories.webm"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"video/webm"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">source</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"dev-stories.mp4"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"video/mp4"</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-embed</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></pre>\x3c!-- Component reference added automatically from component package.json --\x3e\n'}}]);