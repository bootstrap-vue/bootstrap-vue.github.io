(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{571:function(n,l){n.exports='<h1 id="badges"><span class="bd-content-title">Badges</span></h1>\n<p class="bd-lead">Small and adaptive tag for adding context to just about any content.</p>\n<p>Badges scale to match the size of the immediate parent element by using relative font sizing and\n<code>em</code> units.</p>\n<pre class="hljs html text-monospace p-2"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>Example heading <span class="hljs-tag">&lt;<span class="hljs-name">b-badge</span>&gt;</span>New<span class="hljs-tag">&lt;/<span class="hljs-name">b-badge</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>Example heading <span class="hljs-tag">&lt;<span class="hljs-name">b-badge</span>&gt;</span>New<span class="hljs-tag">&lt;/<span class="hljs-name">b-badge</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>Example heading <span class="hljs-tag">&lt;<span class="hljs-name">b-badge</span>&gt;</span>New<span class="hljs-tag">&lt;/<span class="hljs-name">b-badge</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">h5</span>&gt;</span>Example heading <span class="hljs-tag">&lt;<span class="hljs-name">b-badge</span>&gt;</span>New<span class="hljs-tag">&lt;/<span class="hljs-name">b-badge</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h5</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>Example heading <span class="hljs-tag">&lt;<span class="hljs-name">b-badge</span>&gt;</span>New<span class="hljs-tag">&lt;/<span class="hljs-name">b-badge</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-badges.vue --&gt;</span></pre><p>Badges can be used as part of links or buttons to provide a counter (or similar flag).</p>\n<pre class="hljs html text-monospace p-2"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"text-center"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"primary"</span>&gt;</span>\n    Notifications <span class="hljs-tag">&lt;<span class="hljs-name">b-badge</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"light"</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">b-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-badge-button.vue --&gt;</span></pre><p>Note that depending on how they are used, badges may be confusing for users of screen readers and\nsimilar assistive technologies. While the styling of badges provides a visual cue as to their\npurpose, these users will simply be presented with the content of the badge. Depending on the\nspecific situation, these badges may seem like random additional words or numbers at the end of a\nsentence, link, or button.</p>\n<p>Unless the context is clear (as with the “Notifications” example, where it is understood that the\n“4” is the number of notifications), consider including additional context with a visually hidden\npiece of additional text.</p>\n<pre class="hljs html text-monospace p-2"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"text-center"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"primary"</span>&gt;</span>\n    Profile\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-badge</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"light"</span>&gt;</span>9 <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"sr-only"</span>&gt;</span>unread messages<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-badge-button-aria.vue --&gt;</span></pre><h2 id="contextual-variations"><span class="bd-content-title">Contextual variations<a class="anchorjs-link" href="#contextual-variations" aria-label="Anchor"></a></span></h2>\n<p>Add any of the following variants via the <code>variant</code> prop to change the appearance of a <code>&lt;b-badge&gt;</code>:\n<code>default</code>, <code>primary</code>, <code>success</code>, <code>warning</code>, <code>info</code>, and <code>danger</code>. If no variant is specified\n<code>default</code> will be used.</p>\n<pre class="hljs html text-monospace p-2"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-badge</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"primary"</span>&gt;</span>Primary<span class="hljs-tag">&lt;/<span class="hljs-name">b-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-badge</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"secondary"</span>&gt;</span>Secondary<span class="hljs-tag">&lt;/<span class="hljs-name">b-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-badge</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"success"</span>&gt;</span>Success<span class="hljs-tag">&lt;/<span class="hljs-name">b-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-badge</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"danger"</span>&gt;</span>Danger<span class="hljs-tag">&lt;/<span class="hljs-name">b-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-badge</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"warning"</span>&gt;</span>Warning<span class="hljs-tag">&lt;/<span class="hljs-name">b-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-badge</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"info"</span>&gt;</span>Info<span class="hljs-tag">&lt;/<span class="hljs-name">b-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-badge</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"light"</span>&gt;</span>Light<span class="hljs-tag">&lt;/<span class="hljs-name">b-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-badge</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"dark"</span>&gt;</span>Dark<span class="hljs-tag">&lt;/<span class="hljs-name">b-badge</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-badge-variants.vue --&gt;</span></pre><h3 id="conveying-meaning-to-assistive-technologies"><span class="bd-content-title">Conveying meaning to assistive technologies<a class="anchorjs-link" href="#conveying-meaning-to-assistive-technologies" aria-label="Anchor"></a></span></h3>\n<p>Using color to add meaning only provides a visual indication, which will not be conveyed to users of\nassistive technologies – such as screen readers. Ensure that information denoted by the color is\neither obvious from the content itself (e.g. the visible text), or is included through alternative\nmeans, such as additional text hidden with the <code>.sr-only</code> class.</p>\n<h2 id="pill-badges"><span class="bd-content-title">Pill badges<a class="anchorjs-link" href="#pill-badges" aria-label="Anchor"></a></span></h2>\n<p>Use the <code>pill</code> prop to make badges more rounded (with a larger border-radius and additional\nhorizontal padding). Useful if you miss the badges from Bootstrap v3.</p>\n<pre class="hljs html text-monospace p-2"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-badge</span> <span class="hljs-attr">pill</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"primary"</span>&gt;</span>Primary<span class="hljs-tag">&lt;/<span class="hljs-name">b-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-badge</span> <span class="hljs-attr">pill</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"secondary"</span>&gt;</span>Secondary<span class="hljs-tag">&lt;/<span class="hljs-name">b-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-badge</span> <span class="hljs-attr">pill</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"success"</span>&gt;</span>Success<span class="hljs-tag">&lt;/<span class="hljs-name">b-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-badge</span> <span class="hljs-attr">pill</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"danger"</span>&gt;</span>Danger<span class="hljs-tag">&lt;/<span class="hljs-name">b-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-badge</span> <span class="hljs-attr">pill</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"warning"</span>&gt;</span>Warning<span class="hljs-tag">&lt;/<span class="hljs-name">b-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-badge</span> <span class="hljs-attr">pill</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"info"</span>&gt;</span>Info<span class="hljs-tag">&lt;/<span class="hljs-name">b-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-badge</span> <span class="hljs-attr">pill</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"light"</span>&gt;</span>Light<span class="hljs-tag">&lt;/<span class="hljs-name">b-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-badge</span> <span class="hljs-attr">pill</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"dark"</span>&gt;</span>Dark<span class="hljs-tag">&lt;/<span class="hljs-name">b-badge</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-badge-pill.vue --&gt;</span></pre><h2 id="actionable-badges"><span class="bd-content-title">Actionable badges<a class="anchorjs-link" href="#actionable-badges" aria-label="Anchor"></a></span></h2>\n<p>Quickly provide actionable badges with hover and focus states by specifying either the <code>href</code> prop\n(links) or <code>to</code> prop (router-links):</p>\n<pre class="hljs html text-monospace p-2"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-badge</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"primary"</span>&gt;</span>Primary<span class="hljs-tag">&lt;/<span class="hljs-name">b-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-badge</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"secondary"</span>&gt;</span>Secondary<span class="hljs-tag">&lt;/<span class="hljs-name">b-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-badge</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"success"</span>&gt;</span>Success<span class="hljs-tag">&lt;/<span class="hljs-name">b-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-badge</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"danger"</span>&gt;</span>Danger<span class="hljs-tag">&lt;/<span class="hljs-name">b-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-badge</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"warning"</span>&gt;</span>Warning<span class="hljs-tag">&lt;/<span class="hljs-name">b-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-badge</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"info"</span>&gt;</span>Info<span class="hljs-tag">&lt;/<span class="hljs-name">b-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-badge</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"light"</span>&gt;</span>Light<span class="hljs-tag">&lt;/<span class="hljs-name">b-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-badge</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"dark"</span>&gt;</span>Dark<span class="hljs-tag">&lt;/<span class="hljs-name">b-badge</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-badge-action.vue --&gt;</span></pre><p>Refer to the <a href="/docs/reference/router-links">Router support</a> reference page for router-link specific\nprops.</p>\n\x3c!-- Component reference added automatically from component package.json --\x3e\n'}}]);
//# sourceMappingURL=e0cfec2e24e813a13131.js.map