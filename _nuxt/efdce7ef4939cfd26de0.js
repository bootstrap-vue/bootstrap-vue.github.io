(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{369:function(n,t){n.exports='<h1 id="popovers"><span class="bd-content-title">Popovers</span></h1>\n<p class="bd-lead">Documentation and examples for adding BootstrapVue popovers to any element on your site, using\nBootstrap v4 CSS for styling and animations. Popovers can be triggered by hovering, focusing, or\nclicking an element, and can contain both content and a title heading. Popovers are tooltips on\nsteroids.</p>\n<p>Use the <code translate="no" class="notranslate">v-b-popover</code> directive on any <strong>element</strong> or <strong>component</strong> where you would like a popover\nto appear.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"text-center my-3"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-popover.hover</span>=<span class="hljs-string">"\'I am popover content!\'"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Popover Title"</span>&gt;</span>Hover Me<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-popover.vue --&gt;</span></pre><h2 id="overview"><span class="bd-content-title">Overview<a class="anchorjs-link" href="#overview" aria-label="Anchor"></a></span></h2>\n<p>Things to know when using popovers:</p>\n<ul>\n<li>Popovers rely on the 3rd party library <a href="https://popper.js.org/">Popper.js</a> for positioning.</li>\n<li>Zero-length title and content values will never show a popover.</li>\n<li>Specify container: &#39;body&#39; (default) to avoid rendering problems in more complex components (like\ninput groups, button groups, etc).</li>\n<li>Triggering popovers on hidden elements will not work.</li>\n<li>Popovers for <code translate="no" class="notranslate">disabled</code> elements must be triggered on a wrapper element.</li>\n<li>When triggered from hyperlinks that span multiple lines, popovers will be centered. Use\nwhite-space: nowrap; on your <code translate="no" class="notranslate">&lt;a&gt;</code>s, <code translate="no" class="notranslate">&lt;b-link&gt;</code>s or <code translate="no" class="notranslate">&lt;router-link&gt;</code>s b to avoid this behavior.</li>\n<li>Elements that trigger popovers should be in the document tab sequence. Add <code translate="no" class="notranslate">tabindex=&quot;0&quot;</code> if\nrequired.</li>\n</ul>\n<h2 id="positioning"><span class="bd-content-title">Positioning<a class="anchorjs-link" href="#positioning" aria-label="Anchor"></a></span></h2>\n<p>Twelve options are available for positioning: <code translate="no" class="notranslate">top</code>, <code translate="no" class="notranslate">topleft</code>, <code translate="no" class="notranslate">topright</code>, <code translate="no" class="notranslate">right</code>, <code translate="no" class="notranslate">righttop</code>,\n<code translate="no" class="notranslate">rightbottom</code>, <code translate="no" class="notranslate">bottom</code>, <code translate="no" class="notranslate">bottomleft</code>, <code translate="no" class="notranslate">bottomright</code>, <code translate="no" class="notranslate">left</code>, <code translate="no" class="notranslate">lefttop</code>, and <code translate="no" class="notranslate">leftbottom</code> aligned.\nPositioning is relative to the trigger element.</p>\n<div class="bd-example bd-example-popover-static">\n  <div class="popover bs-popover-top bs-popover-top-docs">\n    <div class="arrow" style="left: 6px"></div>\n    <h3 class="popover-header">Popover top</h3>\n    <div class="popover-body">\n      Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia\n      quam venenatis vestibulum.\n    </div>\n  </div>\n  <div class="popover bs-popover-top bs-popover-top-docs">\n    <div class="arrow" style="right: 6px"></div>\n    <h3 class="popover-header">Popover topleft</h3>\n    <div class="popover-body">\n      Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia\n      quam venenatis vestibulum.\n    </div>\n  </div>\n  <div class="popover bs-popover-top bs-popover-top-docs">\n    <div class="arrow" style="left: 6px"></div>\n    <h3 class="popover-header">Popover topright</h3>\n    <div class="popover-body">\n      Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia\n      quam venenatis vestibulum.\n    </div>\n  </div>\n\n  <div class="popover bs-popover-right bs-popover-right-docs">\n    <div class="arrow" style="top: 4px"></div>\n    <h3 class="popover-header">Popover right</h3>\n    <div class="popover-body">\n      Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia\n      quam venenatis vestibulum.\n    </div>\n  </div>\n  <div class="popover bs-popover-right bs-popover-right-docs">\n    <div class="arrow" style="bottom: 4px"></div>\n    <h3 class="popover-header">Popover righttop</h3>\n    <div class="popover-body">\n      Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia\n      quam venenatis vestibulum.\n    </div>\n  </div>\n  <div class="popover bs-popover-right bs-popover-right-docs">\n    <div class="arrow" style="top: 4px"></div>\n    <h3 class="popover-header">Popover rightbottom</h3>\n    <div class="popover-body">\n      Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia\n      quam venenatis vestibulum.\n    </div>\n  </div>\n\n  <div class="popover bs-popover-bottom bs-popover-bottom-docs">\n    <div class="arrow" style="left: 6px"></div>\n    <h3 class="popover-header">Popover bottom</h3>\n    <div class="popover-body">\n      Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia\n      quam venenatis vestibulum.\n    </div>\n  </div>\n  <div class="popover bs-popover-bottom bs-popover-bottom-docs">\n    <div class="arrow" style="right: 6px"></div>\n    <h3 class="popover-header">Popover bottomleft</h3>\n    <div class="popover-body">\n      Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia\n      quam venenatis vestibulum.\n    </div>\n  </div>\n  <div class="popover bs-popover-bottom bs-popover-bottom-docs">\n    <div class="arrow" style="left: 6px"></div>\n    <h3 class="popover-header">Popover bottomright</h3>\n    <div class="popover-body">\n      Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia\n      quam venenatis vestibulum.\n    </div>\n  </div>\n\n  <div class="popover bs-popover-left bs-popover-left-docs">\n    <div class="arrow" style="top: 4px"></div>\n    <h3 class="popover-header">Popover left</h3>\n    <div class="popover-body">\n      Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia\n      quam venenatis vestibulum.\n    </div>\n  </div>\n  <div class="popover bs-popover-left bs-popover-left-docs">\n    <div class="arrow" style="bottom: 4px"></div>\n    <h3 class="popover-header">Popover lefttop</h3>\n    <div class="popover-body">\n      Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia\n      quam venenatis vestibulum.\n    </div>\n  </div>\n  <div class="popover bs-popover-left bs-popover-left-docs">\n    <div class="arrow" style="top: 4px"></div>\n    <h3 class="popover-header">Popover leftbottom</h3>\n    <div class="popover-body">\n      Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia\n      quam venenatis vestibulum.\n    </div>\n  </div>\n\n  <div class="clearfix"></div>\n</div>\n\n<p><strong>Live example</strong></p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">fluid</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"text-center"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">"3"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"py-3"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-popover.hover.top</span>=<span class="hljs-string">"\'Popover!\'"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"primary"</span>&gt;</span>Top<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">"3"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"py-3"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-popover.hover.right</span>=<span class="hljs-string">"\'Popover!\'"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"primary"</span>&gt;</span>Right<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">"3"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"py-3"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-popover.hover.left</span>=<span class="hljs-string">"\'Popover!\'"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"primary"</span>&gt;</span>Left<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">"3"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"py-3"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-popover.hover.bottom</span>=<span class="hljs-string">"\'ToolTip!\'"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"primary"</span>&gt;</span>Bottom<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-popover-positioning.vue --&gt;</span></pre><h2 id="triggers"><span class="bd-content-title">Triggers<a class="anchorjs-link" href="#triggers" aria-label="Anchor"></a></span></h2>\n<p>Popovers can be triggered (opened/closed) via any combination of <code translate="no" class="notranslate">click</code>, <code translate="no" class="notranslate">hover</code> and <code translate="no" class="notranslate">focus</code>. The\ndefault trigger is <code translate="no" class="notranslate">click</code>.</p>\n<p>If a popover has more than one trigger, then all triggers must be cleared before the popover will\nclose. I.e. if a popover has the trigger <code translate="no" class="notranslate">focus click</code>, and it was opened by <code translate="no" class="notranslate">focus</code>, and the user\nthen clicks the trigger element, they must click it again <strong>and</strong> move focus to close the popover.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">fluid</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">h5</span>&gt;</span>Triggers<span class="hljs-tag">&lt;/<span class="hljs-name">h5</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"text-center"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">"6"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"py-3"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-popover</span>=<span class="hljs-string">"\'Popover!\'"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"outline-success"</span>&gt;</span>Click (default)<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">"6"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"py-3"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-popover.hover</span>=<span class="hljs-string">"\'Popover!\'"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"outline-success"</span>&gt;</span>Hover<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">"6"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"py-3"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-popover.focus</span>=<span class="hljs-string">"\'Popover!\'"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"outline-success"</span>&gt;</span>Focus<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">"6"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"py-3"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-popover.hover.focus</span>=<span class="hljs-string">"\'Popover!\'"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"outline-success"</span>&gt;</span>Hover + Focus<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-popover-triggers.vue --&gt;</span></pre><h3 id="dismiss-on-next-click-self-dismissing"><span class="bd-content-title">Dismiss on next click (self dismissing)<a class="anchorjs-link" href="#dismiss-on-next-click-self-dismissing" aria-label="Anchor"></a></span></h3>\n<p>Use the <code translate="no" class="notranslate">focus</code> trigger by itself to dismiss popovers on the next click that the user makes. <code translate="no" class="notranslate">focus</code>\nalso makes the popover activate on both <code translate="no" class="notranslate">focus</code> and <code translate="no" class="notranslate">click</code> (as a click makes the element receive\nfocus, assuming it is in the tab sequence of the page).</p>\n<p>You can, however, specify your trigger as <code translate="no" class="notranslate">click blur</code>, which will make only a click activate the\npopover, and either a click on the element - <em>or losing focus to another element or part of the\ndocument</em> - will close the popover.</p>\n<p>This <code translate="no" class="notranslate">blur</code> trigger must be used in combination with the <code translate="no" class="notranslate">click</code> trigger.</p>\n<p>Th following example shows the <code translate="no" class="notranslate">click blur</code> use case. Popovers will only open on click of the\nbutton, and will close either on click of the button, or a click anywhere else (or a focus change\nvia pressing the <kbd class="notranslate" translate="no">TAB</kbd> key). Some call this behavior <em>self dismissing</em>.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">fluid</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"text-center"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">"3"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"py-3"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-popover.click.blur</span>=<span class="hljs-string">"\'Content\'"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Popover"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"primary"</span>&gt;</span>Click<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">"3"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"py-3"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-popover.click.blur</span>=<span class="hljs-string">"\'Content\'"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Popover"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"primary"</span>&gt;</span>Click<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">"3"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"py-3"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-popover.click.blur</span>=<span class="hljs-string">"\'Content\'"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Popover"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"primary"</span>&gt;</span>Click<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">"3"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"py-3"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-popover.click.blur</span>=<span class="hljs-string">"\'Content\'"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Popover"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"primary"</span>&gt;</span>Click<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-popover-dismiss-next-click.vue --&gt;</span></pre><h2 id="heading-and-content"><span class="bd-content-title">Heading and content<a class="anchorjs-link" href="#heading-and-content" aria-label="Anchor"></a></span></h2>\n<p>There are several options for provisioning the title and content of a popover.</p>\n<p>By default, popover will use the <code translate="no" class="notranslate">title</code> attribute of the element as the popover heading, and the\ncontent is passed as a string to the <code translate="no" class="notranslate">v-b-popover</code> directive. The title and content can also be\npassed as an object to <code translate="no" class="notranslate">v-b-popover</code> in the form of</p>\n\x3c!-- eslint-disable no-unused-vars --\x3e\n\n<pre class="hljs js text-monospace p-2 notranslate" translate="no"><span class="hljs-keyword">const</span> options = {\n  <span class="hljs-attr">title</span>: <span class="hljs-string">\'This is the title\'</span>,\n  <span class="hljs-attr">content</span>: <span class="hljs-string">\'This is the content\'</span>\n}</pre><p>If your content has basic HTML markup, then you will also need to set the <code translate="no" class="notranslate">html</code> property to true,\nor use the directive modifier <code translate="no" class="notranslate">html</code></p>\n\x3c!-- eslint-disable no-unused-vars --\x3e\n\n<pre class="hljs js text-monospace p-2 notranslate" translate="no"><span class="hljs-comment">// Object format with HTML:</span>\n<span class="hljs-keyword">const</span> options = {\n  <span class="hljs-attr">title</span>: <span class="hljs-string">\'This is the &lt;strong&gt;title&lt;/strong&gt;\'</span>,\n  <span class="hljs-attr">content</span>: <span class="hljs-string">\'This is the &lt;em&gt;content&lt;em&gt;\'</span>,\n  <span class="hljs-attr">html</span>: <span class="hljs-literal">true</span>\n}</pre><p>Content can also be a function reference, which is called each time the popover is opened.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">fluid</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"text-center"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">"3"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"py-3"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-popover.hover</span>=<span class="hljs-string">"\'Content!\'"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Title from title attribute"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"success"</span>&gt;</span>\n          Title + Content\n        <span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">"3"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"py-3"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span>\n          <span class="hljs-attr">v-b-popover.hover</span>=<span class="hljs-string">"{title:\'Popover\', content:\'This is the content of popover\'}"</span>\n          <span class="hljs-attr">variant</span>=<span class="hljs-string">"success"</span>\n        &gt;</span>\n          Config Object\n        <span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">"3"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"py-3"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-popover.hover</span>=<span class="hljs-string">"popoverData"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"success"</span>&gt;</span>Config from data<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">"3"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"py-3"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-popover.hover.html</span>=<span class="hljs-string">"popoverMethod"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Popover with HTML"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"success"</span>&gt;</span>\n          Method\n        <span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"text-center"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">"12"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"py-3"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-popover.hover</span>=<span class="hljs-string">"popoverConfig"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"success"</span>&gt;</span>Config Object<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    data() {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">popoverData</span>: {\n          <span class="hljs-attr">title</span>: <span class="hljs-string">\'Popover Title\'</span>,\n          <span class="hljs-attr">content</span>: <span class="hljs-string">\'Popover Content\'</span>\n        },\n        <span class="hljs-attr">counter</span>: <span class="hljs-number">0</span>\n      }\n    },\n    <span class="hljs-attr">methods</span>: {\n      popoverMethod() {\n        <span class="hljs-comment">// Returns the content as a string</span>\n        <span class="hljs-comment">// Will be called each time popover is opened</span>\n        <span class="hljs-keyword">return</span> <span class="hljs-string">\'&lt;strong&gt;\'</span> + <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>() + <span class="hljs-string">\'&lt;/strong&gt;\'</span>\n      }\n    },\n    <span class="hljs-attr">computed</span>: {\n      popoverConfig() {\n        <span class="hljs-comment">// Both title and content specified as a function in this example</span>\n        <span class="hljs-comment">// and will be called each time popover is opened</span>\n        <span class="hljs-keyword">return</span> {\n          <span class="hljs-attr">html</span>: <span class="hljs-literal">true</span>,\n          <span class="hljs-attr">title</span>: <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {\n            <span class="hljs-keyword">return</span> <span class="hljs-string">\'Hello &lt;b&gt;Popover:&lt;/b&gt; \'</span> + ++<span class="hljs-keyword">this</span>.counter\n          },\n          <span class="hljs-attr">content</span>: <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {\n            <span class="hljs-keyword">return</span> <span class="hljs-string">\'The date is:&lt;br&gt;&lt;em&gt;\'</span> + <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>() + <span class="hljs-string">\'&lt;/em&gt;\'</span>\n          }\n        }\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-popover-content.vue --&gt;</span></pre><h2 id="variants-and-custom-class"><span class="bd-content-title">Variants and custom class<a class="anchorjs-link" href="#variants-and-custom-class" aria-label="Anchor"></a></span></h2>\n<p><span class="badge badge-info small">NEW in 2.0.0-rc.26</span></p>\n<p>BootstrapVue&#39;s popovers support contextual color variants via our custom CSS, either by using\ndirective modifiers or config options:</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">fluid</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"text-center"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span>\n          <span class="hljs-attr">v-b-popover.hover.v-danger</span>=<span class="hljs-string">"{ content: \'Popover content\' }"</span>\n          <span class="hljs-attr">title</span>=<span class="hljs-string">"Danger variant"</span>\n        &gt;</span>\n          Danger Modifier\n        <span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span>\n          <span class="hljs-attr">v-b-popover.hover</span>=<span class="hljs-string">"{ variant: \'info\',  content: \'Popover content\' }"</span>\n          <span class="hljs-attr">title</span>=<span class="hljs-string">"Info variant"</span>\n        &gt;</span>\n          Info Config\n        <span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-popover-variants.vue --&gt;</span></pre><p>Bootstrap default theme variants are: <code translate="no" class="notranslate">danger</code>, <code translate="no" class="notranslate">warning</code>, <code translate="no" class="notranslate">success</code>, <code translate="no" class="notranslate">primary</code>, <code translate="no" class="notranslate">secondary</code>,\n<code translate="no" class="notranslate">info</code>, <code translate="no" class="notranslate">light</code>, and <code translate="no" class="notranslate">dark</code>. You can change or add additional variants via Bootstrap\n<a href="/docs/reference/theming">SCSS variables</a></p>\n<p>A custom class can be applied to the popover outer wrapper <div> by using the customClass option\nproperty:</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-button</span>\n  <span class="hljs-attr">v-b-popover.hover</span>=<span class="hljs-string">"{ customClass: \'my-popover-class\', content: \'Popover content\' }"</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">"Popover"</span>\n&gt;</span>\n  Button\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span></pre><p><strong>Note:</strong> Custom classes will not work with scoped styles, as the popovers are appended to the\ndocument <code translate="no" class="notranslate">&lt;body&gt;</code> element by default.</p>\n<h2 id="directive-syntax-and-usage"><span class="bd-content-title">Directive syntax and usage<a class="anchorjs-link" href="#directive-syntax-and-usage" aria-label="Anchor"></a></span></h2>\n<pre class="hljs  text-monospace p-2 notranslate" translate="no">v-b-popover:[container].[mod].[mod].[...].[mod]="<value>"</pre><p>Where <code translate="no" class="notranslate">&lt;value&gt;</code> can be (optional):</p>\n<ul>\n<li>A string containing the <strong>content</strong> of the popover</li>\n<li>A function reference to generate the <strong>content</strong> of the popover (receives one argument which is a\nreference to the DOM element triggering the popover)</li>\n<li>An object containing more complex configuration of popover, See Bootstrap docs for possible\nvalues/structure)</li>\n</ul>\n<p>Where <code translate="no" class="notranslate">[mod]</code> can be (all optional):</p>\n<ul>\n<li>Positioning: <code translate="no" class="notranslate">top</code>, <code translate="no" class="notranslate">bottom</code>, <code translate="no" class="notranslate">left</code>, <code translate="no" class="notranslate">right</code>, <code translate="no" class="notranslate">auto</code>; or the offset alignment positions\n<code translate="no" class="notranslate">topleft</code>, <code translate="no" class="notranslate">topright</code>, <code translate="no" class="notranslate">bottomleft</code>, <code translate="no" class="notranslate">bottomright</code>, <code translate="no" class="notranslate">lefttop</code>, <code translate="no" class="notranslate">leftbottom</code>, <code translate="no" class="notranslate">righttop</code>, or\n<code translate="no" class="notranslate">rightbottom</code> (last one found wins, defaults to <code translate="no" class="notranslate">right</code>).</li>\n<li>Event trigger: <code translate="no" class="notranslate">click</code>, <code translate="no" class="notranslate">hover</code>, <code translate="no" class="notranslate">focus</code>, <code translate="no" class="notranslate">blur</code> (if none specified, defaults to <code translate="no" class="notranslate">click</code>. The\n<code translate="no" class="notranslate">blur</code> trigger is a close handler only, and if specified by itself, will be converted to <code translate="no" class="notranslate">focus</code>).</li>\n<li><code translate="no" class="notranslate">nofade</code> to turn off animation.</li>\n<li><code translate="no" class="notranslate">html</code> to enable rendering raw HTML. by default HTML is escaped and converted to text.</li>\n<li>A delay value in the format of <code translate="no" class="notranslate">d###</code> (where <code translate="no" class="notranslate">###</code> is in ms, defaults to 0).</li>\n<li>An offset value in pixels in the format of <code translate="no" class="notranslate">o###</code> (where <code translate="no" class="notranslate">###</code> is the number of pixels, defaults\nto 0. Negative values are allowed). Note if an offset is supplied, then the alignment positions\nwill fallback to one of <code translate="no" class="notranslate">top</code>, <code translate="no" class="notranslate">bottom</code>, <code translate="no" class="notranslate">left</code>, or <code translate="no" class="notranslate">right</code>.</li>\n<li>A boundary setting of <code translate="no" class="notranslate">window</code> or <code translate="no" class="notranslate">viewport</code>. The element to constrain the visual placement of the\npopover. If not specified, the boundary defaults to the trigger element&#39;s scroll parent (in most\ncases this will suffice).</li>\n<li>A contextual variant in the form of <code translate="no" class="notranslate">v-XXX</code> (where <code translate="no" class="notranslate">XXX</code> is the color variant name).</li>\n</ul>\n<p>Where <code translate="no" class="notranslate">[container]</code> can be (optional):</p>\n<ul>\n<li>An element ID (minus the #) to place the popover markup in, when visible</li>\n<li>If not provided, popovers are appended to the <code translate="no" class="notranslate">&lt;body&gt;</code> when visible</li>\n</ul>\n<h3 id="usage"><span class="bd-content-title">Usage<a class="anchorjs-link" href="#usage" aria-label="Anchor"></a></span></h3>\n<p><strong>Simplest usage:</strong></p>\n<pre class="hljs  text-monospace p-2 notranslate" translate="no">v-b-popover="\'This is a Popover!\'"</pre><p>or use the element&#39;s <code translate="no" class="notranslate">title</code> attribute for the popover header:</p>\n<pre class="hljs  text-monospace p-2 notranslate" translate="no">v-b-popover title="This is a popover header"\nv-b-popover="\'This is popover content\'" title="This is popover header"</pre><p>or provide an object for title and content:</p>\n<pre class="hljs  text-monospace p-2 notranslate" translate="no">v-b-popover="{title:\'Popover header\', content:\'Popover content\'}"</pre><p><strong>Enable HTML content/title:</strong></p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no">v-b-popover.html="\'<span class="hljs-tag">&lt;<span class="hljs-name">em</span>&gt;</span>Emphasis<span class="hljs-tag">&lt;/<span class="hljs-name">em</span>&gt;</span> in content\'" title="<span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>Bolded title<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span>"</pre><p><strong>Placement examples:</strong></p>\n<pre class="hljs  text-monospace p-2 notranslate" translate="no">v-b-popover.top</pre><p><strong>Trigger examples:</strong></p>\n<pre class="hljs  text-monospace p-2 notranslate" translate="no">v-b-popover => Default of click\nv-b-popover.hover => Hover only\nv-b-popover.click => Click only\nv-b-popover.hover.focus => Both hover and focus</pre><p><strong>Combo:</strong></p>\n<pre class="hljs  text-monospace p-2 notranslate" translate="no">v-b-popover.hover.bottom => Show on hover and place at bottom\nv-b-popover.bottom.hover => Same as above\nv-b-popover.bottom.click.html => Show on click and place at bottom with HTML content</pre><h2 id="hiding-and-showing-popovers-via-root-events"><span class="bd-content-title">Hiding and showing popovers via $root events<a class="anchorjs-link" href="#hiding-and-showing-popovers-via-root-events" aria-label="Anchor"></a></span></h2>\n<p>You can close (hide) <strong>all open popovers</strong> by emitting the <code translate="no" class="notranslate">bv::hide::popover</code> event on $root:</p>\n<pre class="hljs js text-monospace p-2 notranslate" translate="no"><span class="hljs-keyword">this</span>.$root.$emit(<span class="hljs-string">\'bv::hide::popover\'</span>)</pre><p>To close a <strong>specific popover</strong>, pass the trigger element&#39;s <code translate="no" class="notranslate">id</code> as the first argument:</p>\n<pre class="hljs js text-monospace p-2 notranslate" translate="no"><span class="hljs-keyword">this</span>.$root.$emit(<span class="hljs-string">\'bv::hide::popover\'</span>, <span class="hljs-string">\'my-trigger-button-id\'</span>)</pre><p>To open (show) a <strong>specific popover</strong>, pass the trigger element&#39;s <code translate="no" class="notranslate">id</code> as the first argument when\nemitting the <code translate="no" class="notranslate">bv::show::popover</code> event:</p>\n<pre class="hljs js text-monospace p-2 notranslate" translate="no"><span class="hljs-keyword">this</span>.$root.$emit(<span class="hljs-string">\'bv::show::popover\'</span>, <span class="hljs-string">\'my-trigger-button-id\'</span>)</pre><p>To open all popovers simultaneously, omit the <code translate="no" class="notranslate">id</code> argument when emitting the <code translate="no" class="notranslate">bv::show::popover</code>\nevent.</p>\n<p>These events work for both the component <strong>and</strong> directive versions of popover.</p>\n<p>Note the <strong>trigger element</strong> must exist in the DOM and be in a visible state in order for the\npopover to instantiate and show.</p>\n<h2 id="disabling-and-enabling-popovers-via-root-events"><span class="bd-content-title">Disabling and enabling popovers via $root events<a class="anchorjs-link" href="#disabling-and-enabling-popovers-via-root-events" aria-label="Anchor"></a></span></h2>\n<p>You can disable <strong>all</strong> popovers by emitting the <code translate="no" class="notranslate">bv::disable::popover</code> event on $root:</p>\n<pre class="hljs js text-monospace p-2 notranslate" translate="no"><span class="hljs-keyword">this</span>.$root.$emit(<span class="hljs-string">\'bv::disable::popover\'</span>)</pre><p>To disable a <strong>specific popover</strong>, pass the trigger element&#39;s <code translate="no" class="notranslate">id</code> as the first argument:</p>\n<pre class="hljs js text-monospace p-2 notranslate" translate="no"><span class="hljs-keyword">this</span>.$root.$emit(<span class="hljs-string">\'bv::disable::popover\'</span>, <span class="hljs-string">\'my-trigger-button-id\'</span>)</pre><p>To enable a <strong>specific popover</strong>, pass the trigger element&#39;s <code translate="no" class="notranslate">id</code> as the first argument when\nemitting the <code translate="no" class="notranslate">bv::enable::popover</code> event:</p>\n<pre class="hljs js text-monospace p-2 notranslate" translate="no"><span class="hljs-keyword">this</span>.$root.$emit(<span class="hljs-string">\'bv::enable::popover\'</span>, <span class="hljs-string">\'my-trigger-button-id\'</span>)</pre><p>To enable all popovers simultaneously, omit the <code translate="no" class="notranslate">id</code> argument when emitting the\n<code translate="no" class="notranslate">bv::enable::popover</code> event.</p>\n<p>These events work for both the component and directive versions of popover.</p>\n<p>Note the <strong>trigger element</strong> must exist in the DOM in order for the popover to be enabled or\ndisabled.</p>\n<h2 id="see-also"><span class="bd-content-title">See also<a class="anchorjs-link" href="#see-also" aria-label="Anchor"></a></span></h2>\n<ul>\n<li><a href="/docs/directives/tooltip"><code translate="no" class="notranslate">v-b-tooltip</code> directive</a></li>\n<li><a href="/docs/components/popover"><code translate="no" class="notranslate">&lt;b-popover&gt;</code> component</a></li>\n<li><a href="/docs/components/tooltip"><code translate="no" class="notranslate">&lt;b-tooltip&gt;</code> component</a></li>\n</ul>\n\x3c!-- Directive reference section auto generated from directive package.json --\x3e\n'}}]);