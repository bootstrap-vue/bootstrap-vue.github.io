(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{359:function(n,t){n.exports='<h1 id="pagination-navigation" class="bv-no-focus-ring"><span class="bd-content-title">Pagination Navigation</span></h1>\n<p class="bd-lead">Quick first, previous, next, last, and page buttons for navigation based pagination, supporting\nregular links or router links.</p>\n<p><code translate="no" class="notranslate text-nowrap">b-pagination-nav</code> will try and auto-detect which page link is active page button based on the\ncurrent page&#39;s URL (via either <code translate="no" class="notranslate text-nowrap">$route</code> detection or, if no <code translate="no" class="notranslate text-nowrap">$router</code> detected, the browser location\nURL).</p>\n<p><strong>Note:</strong> <code translate="no" class="notranslate text-nowrap">&lt;b-pagination-nav&gt;</code> is used for navigating to new page URLs. For controlling in page\ncomponent pagination (such as table or list pagination), use the\n<a href="/docs/components/pagination" class="font-weight-bold"><code translate="no" class="notranslate text-nowrap">&lt;b-pagination&gt;</code></a> component instead.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"overflow-auto"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">:link-gen</span>=<span class="hljs-string">"linkGen"</span> <span class="hljs-attr">:number-of-pages</span>=<span class="hljs-string">"10"</span> <span class="hljs-attr">use-router</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-attr">methods</span>: {\n      linkGen(pageNum) {\n        <span class="hljs-keyword">return</span> pageNum === <span class="hljs-number">1</span> ? <span class="hljs-string">\'?\'</span> : <span class="hljs-string">`?page=<span class="hljs-subst">${pageNum}</span>`</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-pagination-nav-lead.vue --&gt;</span></pre><p><code translate="no" class="notranslate text-nowrap">&lt;b-pagination-nav&gt;</code> is a custom input component that provides navigational pagination. The total\nnumber of pages set with the <code translate="no" class="notranslate text-nowrap">number-of-pages</code> prop. Page numbers are indexed from 1 through\n<code translate="no" class="notranslate text-nowrap">number-of-pages</code>.</p>\n<h2 id="page-link-and-number-generation" class="bv-no-focus-ring"><span class="bd-content-title">Page link and number generation<a class="anchorjs-link" href="#page-link-and-number-generation" aria-labelledby="page-link-and-number-generation"></a></span></h2>\n<p>By default, <code translate="no" class="notranslate text-nowrap">&lt;b-pagination-nav&gt;</code> generates plain link tags, setting the HREF attribute to <code translate="no" class="notranslate text-nowrap">base-url</code>\nconcatenated with the page number. The <code translate="no" class="notranslate text-nowrap">base-url</code> prop defaults to &#39;/&#39;. The number of pages is\nspecified via the <code translate="no" class="notranslate text-nowrap">number-of-pages</code> prop. Pages are numbers from <code translate="no" class="notranslate text-nowrap">1</code> through to <code translate="no" class="notranslate text-nowrap">number-of-pages</code>.</p>\n<h3 id="router-links" class="bv-no-focus-ring"><span class="bd-content-title">Router links<a class="anchorjs-link" href="#router-links" aria-labelledby="router-links"></a></span></h3>\n<p>To generate page links as <a href="https://router.vuejs.org/api/#router-link" target="_blank" rel="noopener"><code translate="no" class="notranslate text-nowrap">&lt;router link&gt;</code></a> components\n(or <a href="https://nuxtjs.org/api/components-nuxt-link#the-lt-nuxt-link-gt-component" target="_blank" rel="noopener"><code translate="no" class="notranslate text-nowrap">&lt;nuxt-link&gt;</code></a> if\n<a href="https://nuxtjs.org/" target="_blank" rel="noopener">Nuxt.js</a> is detected), set the <code translate="no" class="notranslate text-nowrap">use-router</code> prop. The HREF will then become\nthe <code translate="no" class="notranslate text-nowrap">to</code> prop of the router link. Or, optionally, use a link generator function to return a\nrouter-link <a href="https://router.vuejs.org/api/#to" target="_blank" rel="noopener"><code translate="no" class="notranslate text-nowrap">to</code> location</a> object.</p>\n<p>If a <code translate="no" class="notranslate text-nowrap">$router</code> is not detected on your app, <code translate="no" class="notranslate text-nowrap">&lt;b-pagination-nav&gt;</code> will fallback to regular <code translate="no" class="notranslate text-nowrap">&lt;a&gt;</code>\nelements, and any <code translate="no" class="notranslate text-nowrap">to</code> location object will be converted to a standard URL (if possible).</p>\n<p>The following router link specific props are supported:</p>\n<ul>\n<li><code translate="no" class="notranslate text-nowrap">active-class</code></li>\n<li><code translate="no" class="notranslate text-nowrap">exact</code></li>\n<li><code translate="no" class="notranslate text-nowrap">exact-active-class</code></li>\n<li><code translate="no" class="notranslate text-nowrap">no-prefetch</code> (<code translate="no" class="notranslate text-nowrap">&lt;nuxt-link&gt;</code> specific prop)</li>\n</ul>\n<p>For details on the above props, refer to the <a href="/docs/reference/router-links" class="font-weight-bold">Router Link Support</a>\nreference section.</p>\n<h3 id="link-generator-function" class="bv-no-focus-ring"><span class="bd-content-title">Link generator function<a class="anchorjs-link" href="#link-generator-function" aria-labelledby="link-generator-function"></a></span></h3>\n<p>If you need finer grained control over the generated link URLs or <code translate="no" class="notranslate text-nowrap">&lt;router-link&gt;</code> <code translate="no" class="notranslate text-nowrap">to</code> props, you\nmay set the <code translate="no" class="notranslate text-nowrap">link-gen</code> prop to a function reference that receives two arguments: the page number,\nand an object containing two fields (<code translate="no" class="notranslate text-nowrap">link</code> and <code translate="no" class="notranslate text-nowrap">page</code>), where <code translate="no" class="notranslate text-nowrap">page</code> is the page number and <code translate="no" class="notranslate text-nowrap">link</code>\nis the internally generated link.</p>\n<p>The <code translate="no" class="notranslate text-nowrap">link-gen</code> function should return either a string (for HREF) or a router <code translate="no" class="notranslate text-nowrap">to</code> object. If the\nreturned value is an object, then a router-link will always be generated (if a <code translate="no" class="notranslate text-nowrap">$router</code> is\ndetected). If the return value is a string, a standard link is generated by default unless the\n<code translate="no" class="notranslate text-nowrap">use-router</code> prop is set. If a <code translate="no" class="notranslate text-nowrap">to</code> location object is used, then the <code translate="no" class="notranslate text-nowrap">base-url</code> prop will have no\neffect.</p>\n\x3c!-- eslint-disable no-dupe-keys --\x3e\n\n<pre class="hljs js text-monospace p-2 notranslate" translate="no"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-attr">methods</span>: {\n    <span class="hljs-comment">// For regular HREF (or string `to` prop if `use-router` is set)</span>\n    linkGen(pageNum) {\n      <span class="hljs-keyword">return</span> <span class="hljs-string">`/foo/page/<span class="hljs-subst">${pageNum}</span>`</span>\n    },\n\n    <span class="hljs-comment">// Returning a router-link `to` object</span>\n    linkGen(pageNum) {\n      <span class="hljs-keyword">return</span> { <span class="hljs-attr">path</span>: <span class="hljs-string">`/foo/page/<span class="hljs-subst">${pageNum}</span>`</span> }\n    },\n\n    <span class="hljs-comment">// Returning a router-link `to` object with query parameters</span>\n    linkGen(pageNum) {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">path</span>: <span class="hljs-string">\'/foo/\'</span>,\n        <span class="hljs-attr">query</span>: { <span class="hljs-attr">page</span>: pageNum }\n      }\n    },\n\n    <span class="hljs-comment">// Returning a router-link `to` object with named route and parameters</span>\n    linkGen(pageNum) {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">name</span>: <span class="hljs-string">\'posts\'</span>,\n        <span class="hljs-attr">params</span>: { <span class="hljs-attr">post</span>: pageNum }\n      }\n    }\n  }\n}</pre><p><strong>Note:</strong> when falling back from a <code translate="no" class="notranslate text-nowrap">to</code> location object to a standard link (when no <code translate="no" class="notranslate text-nowrap">$router</code> is\navailable), only the following location properties are used to generate the URL:</p>\n<ul>\n<li><code translate="no" class="notranslate text-nowrap">path</code> (if not provided defaults to the page&#39;s current URL path)</li>\n<li><code translate="no" class="notranslate text-nowrap">query</code></li>\n<li><code translate="no" class="notranslate text-nowrap">hash</code> (must include the leading <code translate="no" class="notranslate text-nowrap">#</code> if used)</li>\n</ul>\n<p>The conversion of <code translate="no" class="notranslate text-nowrap">name</code> routes and <code translate="no" class="notranslate text-nowrap">params</code> is not supported.</p>\n<h3 id="page-number-generation" class="bv-no-focus-ring"><span class="bd-content-title">Page number generation<a class="anchorjs-link" href="#page-number-generation" aria-labelledby="page-number-generation"></a></span></h3>\n<p>By default, <code translate="no" class="notranslate text-nowrap">&lt;b-pagination-nav&gt;</code> renders page numbers (1-N) in the page link buttons. You can\noverride this behaviour by supplying a function reference to the <code translate="no" class="notranslate text-nowrap">page-gen</code> property. The function\nreference should accept a single argument which is a page number (1-N). The <code translate="no" class="notranslate text-nowrap">page-gen</code> function\nshould return a string.</p>\n<p><strong>Note:</strong> HTML content in generated page number strings is <strong>not</strong> supported. For basic HTML, you\ncan use the scoped slot <code translate="no" class="notranslate text-nowrap">page</code> for finer-grained formatting.</p>\n<p><strong>Example: Using an array of links to generate pagination:</strong></p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"overflow-auto"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span>\n      <span class="hljs-attr">:link-gen</span>=<span class="hljs-string">"linkGen"</span>\n      <span class="hljs-attr">:page-gen</span>=<span class="hljs-string">"pageGen"</span>\n      <span class="hljs-attr">:number-of-pages</span>=<span class="hljs-string">"links.length"</span>\n    &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    data() {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">links</span>: [<span class="hljs-string">\'#foo\'</span>, <span class="hljs-string">\'#bar\'</span>, <span class="hljs-string">\'#baz\'</span>, <span class="hljs-string">\'#faz\'</span>]\n      }\n    },\n    <span class="hljs-attr">methods</span>: {\n      linkGen(pageNum) {\n        <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.links[pageNum - <span class="hljs-number">1</span>]\n      },\n      pageGen(pageNum) {\n        <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.links[pageNum - <span class="hljs-number">1</span>].slice(<span class="hljs-number">1</span>)\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-pagination-nav-links.vue --&gt;</span></pre><h3 id="providing-an-array-of-pages" class="bv-no-focus-ring"><span class="bd-content-title">Providing an array of pages<a class="anchorjs-link" href="#providing-an-array-of-pages" aria-labelledby="providing-an-array-of-pages"></a></span></h3>\n<p>Rather than using <code translate="no" class="notranslate text-nowrap">number-of-pages</code> to auto generate page links, you can pass an array of links via\nthe <code translate="no" class="notranslate text-nowrap">pages</code> prop. When the <code translate="no" class="notranslate text-nowrap">pages</code> prop has an array of length <code translate="no" class="notranslate text-nowrap">1</code> or greater, it will be used to\ngenerate the page links.</p>\n<p>The array can be one of two formats:</p>\n<ul>\n<li>Array of strings, where each entry is a link. in this mode, the page button numbers will\nautomatically be set to <code translate="no" class="notranslate text-nowrap">1</code> through to the number of entries in the array.</li>\n<li>Array of objects, where each object has two fields: <code translate="no" class="notranslate text-nowrap">link</code> (required) and <code translate="no" class="notranslate text-nowrap">text</code> (optional). Link\ncan be be either a string specifying the link, or a <code translate="no" class="notranslate text-nowrap">to</code> location object. <code translate="no" class="notranslate text-nowrap">text</code> will be the\ncontent of the page link buttons. If <code translate="no" class="notranslate text-nowrap">text</code> is omitted, page button content will default to the\npage number.</li>\n</ul>\n<p>When a string link is provided, <code translate="no" class="notranslate text-nowrap">&lt;b-pagination-nav&gt;</code> will use regular <code translate="no" class="notranslate text-nowrap">&lt;a&gt;</code> elements, unless the\n<code translate="no" class="notranslate text-nowrap">use-router</code> prop is set. When link (in the array of objects form) is a <code translate="no" class="notranslate text-nowrap">to</code> location object, then a\nrouter link will automatically be generated (if a <code translate="no" class="notranslate text-nowrap">$router</code> is detected).</p>\n<p>With the array format, link strings (and/or location objects) are used as-as and <code translate="no" class="notranslate text-nowrap">base-url</code> prop\nwill be ignored.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">:pages</span>=<span class="hljs-string">"pages1"</span> <span class="hljs-attr">use-router</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">:pages</span>=<span class="hljs-string">"pages2"</span> <span class="hljs-attr">use-router</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">:pages</span>=<span class="hljs-string">"pages3"</span> <span class="hljs-attr">use-router</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  data() {\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-comment">// Simple array of strings</span>\n      <span class="hljs-attr">pages1</span>: [<span class="hljs-string">\'?page=1\'</span>, <span class="hljs-string">\'?page=2\'</span>, <span class="hljs-string">\'?page=3\'</span>],\n      <span class="hljs-comment">// Array of objects with string links</span>\n      <span class="hljs-attr">pages2</span>: [\n        { <span class="hljs-attr">link</span>: <span class="hljs-string">\'?page=1\'</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">\'One\'</span> },\n        { <span class="hljs-attr">link</span>: <span class="hljs-string">\'?page=2\'</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">\'Two\'</span> },\n        { <span class="hljs-attr">link</span>: <span class="hljs-string">\'?page=3\'</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">\'Three\'</span> }\n      ],\n      <span class="hljs-comment">// Array of objects with router `to` locations</span>\n      <span class="hljs-attr">pages3</span>: [\n        { <span class="hljs-attr">link</span>: { <span class="hljs-attr">query</span>: { <span class="hljs-attr">page</span>: <span class="hljs-number">1</span> } }, <span class="hljs-attr">text</span>: <span class="hljs-string">\'Page 1\'</span> },\n        { <span class="hljs-attr">link</span>: { <span class="hljs-attr">query</span>: { <span class="hljs-attr">page</span>: <span class="hljs-number">2</span> } }, <span class="hljs-attr">text</span>: <span class="hljs-string">\'Page 2\'</span> },\n        { <span class="hljs-attr">link</span>: { <span class="hljs-attr">query</span>: { <span class="hljs-attr">page</span>: <span class="hljs-number">3</span> } }, <span class="hljs-attr">text</span>: <span class="hljs-string">\'Page 3\'</span> }\n      ]\n    }\n  }\n}\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- pagination-nav-array.vue --&gt;</span></pre><h2 id="customizing-appearance" class="bv-no-focus-ring"><span class="bd-content-title">Customizing appearance<a class="anchorjs-link" href="#customizing-appearance" aria-labelledby="customizing-appearance"></a></span></h2>\n<h3 id="limiting-the-number-of-displayed-buttons" class="bv-no-focus-ring"><span class="bd-content-title">Limiting the number of displayed buttons<a class="anchorjs-link" href="#limiting-the-number-of-displayed-buttons" aria-labelledby="limiting-the-number-of-displayed-buttons"></a></span></h3>\n<p>To restrict the number of page buttons (including the ellipsis, but excluding the first, prev, next,\nand last buttons) shown, use the <code translate="no" class="notranslate text-nowrap">limit</code> prop to specify the desired number of page buttons\n(including the ellipsis, if shown). The default <code translate="no" class="notranslate text-nowrap">limit</code> is <code translate="no" class="notranslate text-nowrap">5</code>. The minimum supported value is <code translate="no" class="notranslate text-nowrap">3</code>.\nWhen <code translate="no" class="notranslate text-nowrap">limit</code> is set to <code translate="no" class="notranslate text-nowrap">3</code>, no ellipsis indicators will be shown for practical purposes.</p>\n<p>The <code translate="no" class="notranslate text-nowrap">first</code> and <code translate="no" class="notranslate text-nowrap">last</code> buttons can be optionally hidden by setting the <code translate="no" class="notranslate text-nowrap">hide-goto-end-buttons</code> prop.</p>\n<p>The showing of the <code translate="no" class="notranslate text-nowrap">ellipsis</code> can be optionally disabled by setting the <code translate="no" class="notranslate text-nowrap">hide-ellipsis</code> prop.</p>\n<h4 id="small-screen-support" class="bv-no-focus-ring"><span class="bd-content-title">Small screen support<a class="anchorjs-link" href="#small-screen-support" aria-labelledby="small-screen-support"></a></span></h4>\n<p>On smaller screens (i.e. mobile), some of the <code translate="no" class="notranslate text-nowrap">&lt;b-pagination-nav&gt;</code> buttons will be hidden to\nminimize the potential of the pagination interface wrapping onto multiple lines:</p>\n<ul>\n<li>The ellipsis indicators will be hidden on screens <code translate="no" class="notranslate text-nowrap">xs</code> and smaller.</li>\n<li>Page number buttons will be limited to a maximum of 3 visible on <code translate="no" class="notranslate text-nowrap">xs</code> screens and smaller.</li>\n</ul>\n<p>This ensures that no more than 3 page number buttons are visible, along with the goto <em>first</em>,\n<em>prev</em>, <em>next</em>, and <em>last</em> buttons.</p>\n<h3 id="button-content" class="bv-no-focus-ring"><span class="bd-content-title">Button content<a class="anchorjs-link" href="#button-content" aria-labelledby="button-content"></a></span></h3>\n<p><code translate="no" class="notranslate text-nowrap">&lt;b-pagination-nav&gt;</code> supports several props/slots that allow you to customize the appearance. All\n<code translate="no" class="notranslate text-nowrap">*-text</code> props are text-only and strip out HTML but you can use their equally named slot\ncounterparts for that.</p>\n<p>For a full list of all available slots see the <a href="#comp-ref-b-pagination-nav-slots" class="font-weight-bold">Slots</a> section\nbelow.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"overflow-auto"</span>&gt;</span>\n    <span class="hljs-comment">&lt;!-- Use text in props --&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span>\n      <span class="hljs-attr">number-of-pages</span>=<span class="hljs-string">"10"</span>\n      <span class="hljs-attr">base-url</span>=<span class="hljs-string">"#"</span>\n      <span class="hljs-attr">first-text</span>=<span class="hljs-string">"First"</span>\n      <span class="hljs-attr">prev-text</span>=<span class="hljs-string">"Prev"</span>\n      <span class="hljs-attr">next-text</span>=<span class="hljs-string">"Next"</span>\n      <span class="hljs-attr">last-text</span>=<span class="hljs-string">"Last"</span>\n    &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n\n    <span class="hljs-comment">&lt;!-- Use emojis in props --&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span>\n      <span class="hljs-attr">number-of-pages</span>=<span class="hljs-string">"10"</span>\n      <span class="hljs-attr">base-url</span>=<span class="hljs-string">"#"</span>\n      <span class="hljs-attr">first-text</span>=<span class="hljs-string">"⏮"</span>\n      <span class="hljs-attr">prev-text</span>=<span class="hljs-string">"⏪"</span>\n      <span class="hljs-attr">next-text</span>=<span class="hljs-string">"⏩"</span>\n      <span class="hljs-attr">last-text</span>=<span class="hljs-string">"⏭"</span>\n      <span class="hljs-attr">class</span>=<span class="hljs-string">"mt-4"</span>\n    &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n\n    <span class="hljs-comment">&lt;!-- Use HTML and sub-components in slots --&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span>\n      <span class="hljs-attr">number-of-pages</span>=<span class="hljs-string">"10"</span>\n      <span class="hljs-attr">base-url</span>=<span class="hljs-string">"#"</span>\n      <span class="hljs-attr">class</span>=<span class="hljs-string">"mt-4"</span>\n    &gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:first-text</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"text-success"</span>&gt;</span>First<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:prev-text</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"text-danger"</span>&gt;</span>Prev<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:next-text</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"text-warning"</span>&gt;</span>Next<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:last-text</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"text-info"</span>&gt;</span>Last<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:ellipsis-text</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-spinner</span> <span class="hljs-attr">small</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"grow"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-spinner</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-spinner</span> <span class="hljs-attr">small</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"grow"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-spinner</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-spinner</span> <span class="hljs-attr">small</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"grow"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-spinner</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:page</span>=<span class="hljs-string">"{ page, active }"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">"active"</span>&gt;</span>{{ page }}<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">v-else</span>&gt;</span>{{ page }}<span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-pagination-nav-appearance.vue --&gt;</span></pre><p>The slot <code translate="no" class="notranslate text-nowrap">page</code> is always scoped, while the slots <code translate="no" class="notranslate text-nowrap">first-text</code>, <code translate="no" class="notranslate text-nowrap">prev-text</code>, <code translate="no" class="notranslate text-nowrap">next-text</code> and\n<code translate="no" class="notranslate text-nowrap">last-text</code> are optionally scoped. The <code translate="no" class="notranslate text-nowrap">ellipsis-text</code> slot is not scoped.</p>\n<p><strong>Scoped variables properties available to the <code translate="no" class="notranslate text-nowrap">page</code> slot:</strong></p>\n<div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table">\n<thead class="thead-default">\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code translate="no" class="notranslate text-nowrap">page</code></td>\n<td>Number</td>\n<td>Page number (from <code translate="no" class="notranslate text-nowrap">1</code> to <code translate="no" class="notranslate text-nowrap">numberOfPages</code>)</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate text-nowrap">index</code></td>\n<td>Number</td>\n<td>Page number (indexed from <code translate="no" class="notranslate text-nowrap">0</code> to <code translate="no" class="notranslate text-nowrap">numberOfPages -1</code>)</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate text-nowrap">active</code></td>\n<td>Boolean</td>\n<td>If the page is the active page</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate text-nowrap">disabled</code></td>\n<td>Boolean</td>\n<td>If the page button is disabled</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate text-nowrap">content</code></td>\n<td>String</td>\n<td>default content, or the result of the <code translate="no" class="notranslate text-nowrap">page-gen</code> function</td>\n</tr>\n</tbody></table>\n</div><p><strong>Scoped variables properties available to the <code translate="no" class="notranslate text-nowrap">first-text</code>, <code translate="no" class="notranslate text-nowrap">prev-text</code>, <code translate="no" class="notranslate text-nowrap">next-text</code> and\n<code translate="no" class="notranslate text-nowrap">last-text</code> slots:</strong></p>\n<div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table">\n<thead class="thead-default">\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code translate="no" class="notranslate text-nowrap">page</code></td>\n<td>Number</td>\n<td>Page number (from <code translate="no" class="notranslate text-nowrap">1</code> to <code translate="no" class="notranslate text-nowrap">numberOfPages</code>)</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate text-nowrap">index</code></td>\n<td>Number</td>\n<td>Page number (indexed from <code translate="no" class="notranslate text-nowrap">0</code> to <code translate="no" class="notranslate text-nowrap">numberOfPages -1</code>)</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate text-nowrap">disabled</code></td>\n<td>Boolean</td>\n<td>If the page button is disabled</td>\n</tr>\n</tbody></table>\n</div><h3 id="goto-firstlast-button-type" class="bv-no-focus-ring"><span class="bd-content-title">Goto first/last button type<a class="anchorjs-link" href="#goto-firstlast-button-type" aria-labelledby="goto-firstlast-button-type"></a></span></h3>\n<p>If you prefer to have buttons with the first and last page number to go to the corresponding page,\nuse the <code translate="no" class="notranslate text-nowrap">first-number</code> and <code translate="no" class="notranslate text-nowrap">last-number</code> props.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"overflow-auto"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>Goto first button number<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">"currentPage"</span>\n        <span class="hljs-attr">:number-of-pages</span>=<span class="hljs-string">"pages"</span>\n        <span class="hljs-attr">base-url</span>=<span class="hljs-string">"#"</span>\n        <span class="hljs-attr">first-number</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mt-3"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>Goto last button number<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">"currentPage"</span>\n        <span class="hljs-attr">:number-of-pages</span>=<span class="hljs-string">"pages"</span>\n        <span class="hljs-attr">base-url</span>=<span class="hljs-string">"#"</span>\n        <span class="hljs-attr">last-number</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mt-3"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>Goto first and last button number<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">"currentPage"</span>\n        <span class="hljs-attr">:number-of-pages</span>=<span class="hljs-string">"pages"</span>\n        <span class="hljs-attr">base-url</span>=<span class="hljs-string">"#"</span>\n        <span class="hljs-attr">first-number</span>\n        <span class="hljs-attr">last-number</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    data() {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">pages</span>: <span class="hljs-number">100</span>,\n        <span class="hljs-attr">currentPage</span>: <span class="hljs-number">5</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-pagination-nav-goto-first-last-number.vue --&gt;</span></pre><h3 id="button-size" class="bv-no-focus-ring"><span class="bd-content-title">Button size<a class="anchorjs-link" href="#button-size" aria-labelledby="button-size"></a></span></h3>\n<p>Optionally change from the default button size by setting the <code translate="no" class="notranslate text-nowrap">size</code> prop to either <code translate="no" class="notranslate text-nowrap">&#39;sm&#39;</code> for\nsmaller buttons or <code translate="no" class="notranslate text-nowrap">&#39;lg&#39;</code> for larger buttons.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"overflow-auto"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>Small<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"sm"</span> <span class="hljs-attr">number-of-pages</span>=<span class="hljs-string">"10"</span> <span class="hljs-attr">base-url</span>=<span class="hljs-string">"#"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mt-3"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>Default<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">number-of-pages</span>=<span class="hljs-string">"10"</span> <span class="hljs-attr">base-url</span>=<span class="hljs-string">"#"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mt-3"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>Large<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"lg"</span> <span class="hljs-attr">number-of-pages</span>=<span class="hljs-string">"10"</span> <span class="hljs-attr">base-url</span>=<span class="hljs-string">"#"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-pagination-nav-size.vue --&gt;</span></pre><h3 id="pill-style" class="bv-no-focus-ring"><span class="bd-content-title">Pill style<a class="anchorjs-link" href="#pill-style" aria-labelledby="pill-style"></a></span></h3>\n<p>Easily switch to pill style buttons by setting the <code translate="no" class="notranslate text-nowrap">pills</code> prop</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"overflow-auto"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>Small Pills<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">pills</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"sm"</span> <span class="hljs-attr">number-of-pages</span>=<span class="hljs-string">"10"</span> <span class="hljs-attr">base-url</span>=<span class="hljs-string">"#"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mt-3"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>Default Pills<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">pills</span> <span class="hljs-attr">number-of-pages</span>=<span class="hljs-string">"10"</span> <span class="hljs-attr">base-url</span>=<span class="hljs-string">"#"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mt-3"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>Large Pills<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">pills</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"lg"</span> <span class="hljs-attr">number-of-pages</span>=<span class="hljs-string">"10"</span> <span class="hljs-attr">base-url</span>=<span class="hljs-string">"#"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-pagination-nav-pills.vue --&gt;</span></pre><p><strong>Note:</strong> Pill styling requires BootstrapVue&#39;s custom CSS/SCSS.</p>\n<h3 id="alignment" class="bv-no-focus-ring"><span class="bd-content-title">Alignment<a class="anchorjs-link" href="#alignment" aria-labelledby="alignment"></a></span></h3>\n<p>By default the pagination component is left aligned. Change the alignment to <code translate="no" class="notranslate text-nowrap">center</code>, <code translate="no" class="notranslate text-nowrap">right</code>\n(<code translate="no" class="notranslate text-nowrap">right</code> is an alias for <code translate="no" class="notranslate text-nowrap">end</code>), or &#39;fill&#39; by setting the prop <code translate="no" class="notranslate text-nowrap">align</code> to the appropriate value.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"overflow-auto"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>Left alignment (default)<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">number-of-pages</span>=<span class="hljs-string">"10"</span> <span class="hljs-attr">base-url</span>=<span class="hljs-string">"#"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mt-3"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"text-center"</span>&gt;</span>Center alignment<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">number-of-pages</span>=<span class="hljs-string">"10"</span> <span class="hljs-attr">base-url</span>=<span class="hljs-string">"#"</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"center"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mt-3"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"text-right"</span>&gt;</span>Right (end) alignment<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">number-of-pages</span>=<span class="hljs-string">"10"</span> <span class="hljs-attr">base-url</span>=<span class="hljs-string">"#"</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"right"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mt-3"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"text-center"</span>&gt;</span>Fill alignment<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">number-of-pages</span>=<span class="hljs-string">"10"</span> <span class="hljs-attr">base-url</span>=<span class="hljs-string">"#"</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"fill"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-pagination-nav-alignment.vue --&gt;</span></pre><h2 id="auto-current-page-detection-and-v-model-support" class="bv-no-focus-ring"><span class="bd-content-title">Auto current page detection and <code translate="no" class="notranslate text-nowrap">v-model</code> support<a class="anchorjs-link" href="#auto-current-page-detection-and-v-model-support" aria-labelledby="auto-current-page-detection-and-v-model-support"></a></span></h2>\n<p><code translate="no" class="notranslate text-nowrap">&lt;b-pagination-nav&gt;</code> will try and automatically detect which page button should be active, based on\nthe page&#39;s current URL or <code translate="no" class="notranslate text-nowrap">$route</code> (if a router is detected). In cases where it cannot detect the\npage, no page number buttons will be in the active state, and the first, previous, next and last\nbuttons will be in the disabled state until a page button is clicked.</p>\n<p><code translate="no" class="notranslate text-nowrap">v-model</code> is optionally supported (updated by the <code translate="no" class="notranslate text-nowrap">input</code> event, and tied to the <code translate="no" class="notranslate text-nowrap">value</code> prop).\nSetting the <code translate="no" class="notranslate text-nowrap">v-model</code> to <code translate="no" class="notranslate text-nowrap">null</code> (the default) initially will trigger auto active page detection, and\nwill subsequently be updated with the current page number (indexed from <code translate="no" class="notranslate text-nowrap">1</code> to number of pages). If\nyou initially set the <code translate="no" class="notranslate text-nowrap">v-model</code> to a value of <code translate="no" class="notranslate text-nowrap">1</code> or greater, auto page detection will not occur\n(until after a user clicks a page button), and the page specified by the <code translate="no" class="notranslate text-nowrap">v-model</code> will be set as\n<code translate="no" class="notranslate text-nowrap">active</code>.</p>\n<p>To disable auto active page detection, set the <code translate="no" class="notranslate text-nowrap">no-page-detect</code> prop to <code translate="no" class="notranslate text-nowrap">true</code>.</p>\n<p><strong>Note:</strong> Auto page detection needs to loop through all possible page links until a match is\ndetected. For larger <code translate="no" class="notranslate text-nowrap">number-of-pages</code>, this check can take some time so you may want to manually\ncontrol which page is the active via the <code translate="no" class="notranslate text-nowrap">v-model</code> and the <code translate="no" class="notranslate text-nowrap">no-page-detect</code> prop.</p>\n<h2 id="accessibility" class="bv-no-focus-ring"><span class="bd-content-title">Accessibility<a class="anchorjs-link" href="#accessibility" aria-labelledby="accessibility"></a></span></h2>\n<p>The <code translate="no" class="notranslate text-nowrap">&lt;b-pagination-nav&gt;</code> component provides many features to support assistive technology users,\nsuch as <code translate="no" class="notranslate text-nowrap">aria-</code> attributes and keyboard navigation.</p>\n<h3 id="aria-labels" class="bv-no-focus-ring"><span class="bd-content-title">ARIA labels<a class="anchorjs-link" href="#aria-labels" aria-labelledby="aria-labels"></a></span></h3>\n<p><code translate="no" class="notranslate text-nowrap">&lt;b-pagination-nav&gt;</code> provides various <code translate="no" class="notranslate text-nowrap">*-label-*</code> props which are used to set the <code translate="no" class="notranslate text-nowrap">aria-label</code>\nattributes on the various elements within the component, which will help users of assistive\ntechnology.</p>\n<div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table">\n<thead class="thead-default">\n<tr>\n<th>Prop</th>\n<th><code translate="no" class="notranslate text-nowrap">aria-label</code> content default</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code translate="no" class="notranslate text-nowrap">label-first-page</code></td>\n<td>&quot;Goto first page&quot;</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate text-nowrap">label-prev-page</code></td>\n<td>&quot;Goto previous page&quot;</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate text-nowrap">label-next-page</code></td>\n<td>&quot;Goto next page&quot;</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate text-nowrap">label-last-page</code></td>\n<td>&quot;Goto last page&quot;</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate text-nowrap">label-page</code></td>\n<td>&quot;Goto page&quot;, appended with the page number</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate text-nowrap">aria-label</code></td>\n<td>&quot;Pagination&quot;, applied to the outer pagination container</td>\n</tr>\n</tbody></table>\n</div><p>The <code translate="no" class="notranslate text-nowrap">label-page</code> will optionally accept a function to generate the aria-label. The function is\npassed a single argument which is the page number (indexed from 1 to number of pages).</p>\n<p>You can remove any label by setting the prop to an empty string (<code translate="no" class="notranslate text-nowrap">&#39;&#39;</code>), although this is not\nrecommended unless the content of the button textually conveys its purpose.</p>\n<h3 id="keyboard-navigation" class="bv-no-focus-ring"><span class="bd-content-title">Keyboard navigation<a class="anchorjs-link" href="#keyboard-navigation" aria-labelledby="keyboard-navigation"></a></span></h3>\n<p><code translate="no" class="notranslate text-nowrap">&lt;b-pagination-nav&gt;</code> supports standard <kbd class="notranslate" translate="no">TAB</kbd> key navigation.</p>\n<h2 id="see-also" class="bv-no-focus-ring"><span class="bd-content-title">See also<a class="anchorjs-link" href="#see-also" aria-labelledby="see-also"></a></span></h2>\n<p>Refer to the <a href="/docs/reference/router-links" class="font-weight-bold">Router support</a> reference page for router-link specific\nprops.</p>\n<p>For pagination control of a component (such as <code translate="no" class="notranslate text-nowrap">&lt;b-table&gt;</code>) or a pagination list, use the\n<a href="/docs/components/pagination" class="font-weight-bold"><code translate="no" class="notranslate text-nowrap">&lt;b-pagination&gt;</code></a> component instead.</p>\n\x3c!-- Component reference added automatically from component package.json --\x3e\n'}}]);