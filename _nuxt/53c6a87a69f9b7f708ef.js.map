{"version":3,"sources":["webpack:///./docs/plugins/docs-mixin.js","webpack:///./docs/markdown/intro/README.md","webpack:///./docs/pages/docs/index.vue?b0c6","webpack:///./docs/pages/docs/index.vue?9acd","webpack:///docs/pages/docs/index.vue","webpack:///./docs/pages/docs/index.vue"],"names":["__webpack_exports__","data","scrollTimeout","computed","content","this","$route","params","slug","_content","head","title","concat","meta","mounted","clearTimeout","focusScroll","$root","$emit","readme","updated","beforeDestroy","methods","_this","hash","$nextTick","el","$el","querySelector","replace","scrollIntoView","tabIndex","focus","_this2","scroller","document","scrollingElement","documentElement","body","setTimeout","scrollTo","offsetTop","module","exports","render","_h","$createElement","_self","_c","staticClass","domProps","innerHTML","_s","_withStripped","pages_docsvue_type_script_lang_js_","mixins","layout","README_default","a","component","Object","componentNormalizer"],"mappings":"gHAMeA,EAAA,GACbC,KADa,WAEX,MAAO,CACLC,cAAe,OAInBC,SAAU,CACRC,QADQ,WAEN,OAAQC,KAAKC,OAAOC,OAAOC,MAAQH,KAAKI,SAASJ,KAAKC,OAAOC,OAAOC,OAAU,KAIlFE,KAba,WAcX,MAAO,CACLC,MAAK,GAAAC,OAAMP,KAAKQ,MAAQR,KAAKQ,KAAKF,OAAU,OAAvC,qBAITG,QAnBa,WAoBXC,aAAaV,KAAKH,eAClBG,KAAKH,cAAgB,KACrBG,KAAKW,cACLX,KAAKY,MAAMC,MAAM,SAAUb,KAAKc,OAAQd,KAAKQ,MAAQ,OAGvDO,QA1Ba,WA2BXL,aAAaV,KAAKH,eAClBG,KAAKH,cAAgB,KACrBG,KAAKW,eAGPK,cAhCa,WAiCXhB,KAAKY,MAAMC,MAAM,SAAU,KAG7BI,QAAS,CACPN,YADO,WACO,IAAAO,EAAAlB,KACRmB,EAAOnB,KAAKC,OAAOkB,KACvBnB,KAAKoB,UAAU,WACb,IAAIC,EACAF,IAGFE,EAAKH,EAAKI,IAAIC,cAAT,QAAAhB,OAA+BY,EAAKK,QAAQ,IAAK,IAAjD,OACLN,EAAKO,eAAeJ,IAEjBA,IACHA,EAAKH,EAAKI,IAAIC,cAAc,OAE1BF,IACFA,EAAGK,UAAY,EACfL,EAAGM,YAITF,eApBO,SAoBQJ,GAAI,IAAAO,EAAA5B,KACjB,GAAIqB,EAAI,CAEN,IAAMQ,EAAWC,SAASC,kBAAoBD,SAASE,iBAAmBF,SAASG,KAEnFjC,KAAKH,cAAgBqC,WAAW,WAE9BC,YAASN,EAAUO,YAAUf,GAAM,GAAI,KACvCO,EAAK/B,cAAgB,MACpB,4BCvEXwC,EAAAC,QAAA,q3oBCAA,IAAAC,EAAA,WACA,IACAC,EADAxC,KACAyC,eAEA,OAHAzC,KAEA0C,MAAAC,IAAAH,GACA,OACAI,YAAA,uBACAC,SAAA,CAAeC,UALf9C,KAKe+C,GALf/C,KAKec,YAIfyB,EAAAS,eAAA,wBCVgOC,ECQhO,CACAC,OAAA,WACAC,OAAA,OACArD,SAAA,CACAgB,OADA,WAEA,OAAAsC,EAAAC,aCNAC,UAAgBC,OAAAC,EAAA,EAAAD,CACdN,EACAV,EHAF,IGEA,EACA,KACA,KACA,MAIe5C,EAAA,QAAA2D","file":"53c6a87a69f9b7f708ef.js","sourcesContent":["/*\n * docs-mixin: used by any page under /docs path\n */\nimport { scrollTo, offsetTop } from '~/utils'\n\n// @vue/component\nexport default {\n  data() {\n    return {\n      scrollTimeout: null\n    }\n  },\n\n  computed: {\n    content() {\n      return (this.$route.params.slug && this._content[this.$route.params.slug]) || {}\n    }\n  },\n\n  head() {\n    return {\n      title: `${(this.meta && this.meta.title) || 'Docs'} - BootstrapVue`\n    }\n  },\n\n  mounted() {\n    clearTimeout(this.scrollTimeout)\n    this.scrollTimeout = null\n    this.focusScroll()\n    this.$root.$emit('setTOC', this.readme, this.meta || null)\n  },\n\n  updated() {\n    clearTimeout(this.scrollTimeout)\n    this.scrollTimeout = null\n    this.focusScroll()\n  },\n\n  beforeDestroy() {\n    this.$root.$emit('setTOC', '')\n  },\n\n  methods: {\n    focusScroll() {\n      let hash = this.$route.hash\n      this.$nextTick(() => {\n        let el\n        if (hash) {\n          // We use an attribute querySelector rather than getElementByID, as some auto\n          // generated ID's are invalid, and some may appear more than once\n          el = this.$el.querySelector(`[id=\"${hash.replace('#', '')}\"]`)\n          this.scrollIntoView(el)\n        }\n        if (!el) {\n          el = this.$el.querySelector('h1')\n        }\n        if (el) {\n          el.tabIndex = -1\n          el.focus()\n        }\n      })\n    },\n    scrollIntoView(el) {\n      if (el) {\n        // Get the document scrolling element\n        const scroller = document.scrollingElement || document.documentElement || document.body\n        // Allow time for v-play to finish rendering\n        this.scrollTimeout = setTimeout(() => {\n          // scroll heading into view (minus offset to account for nav top height\n          scrollTo(scroller, offsetTop(el) - 70, 100)\n          this.scrollTimeout = null\n        }, 100)\n      }\n    }\n  }\n}\n","module.exports = \"<h1 id=\\\"getting-started\\\"><span class=\\\"bd-content-title\\\">Getting Started</span></h1>\\n<h2 id=\\\"general\\\"><span class=\\\"bd-content-title\\\">General<a class=\\\"anchorjs-link\\\" href=\\\"#general\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<p>If you are using module bundlers like <a href=\\\"https://webpack.js.org/\\\">webpack</a>,\\n<a href=\\\"https://rollupjs.org\\\">rollup.js</a>, etc you may prefer to directly include the package into your\\nproject. To get started, use <code>yarn</code> or <code>npm</code> to get the latest version of Vue, BootstrapVue and\\nBootstrap 4:</p>\\n<pre class=\\\"hljs bash text-monospace p-2\\\"><span class=\\\"hljs-comment\\\"># With npm</span>\\nnpm i vue bootstrap-vue bootstrap\\n\\n<span class=\\\"hljs-comment\\\"># With yarn</span>\\nyarn add vue bootstrap-vue bootstrap</pre><p>Then, register BootstrapVue plugin in your app entry point:</p>\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-comment\\\">// app.js</span>\\n<span class=\\\"hljs-keyword\\\">import</span> Vue <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'vue'</span>\\n<span class=\\\"hljs-keyword\\\">import</span> BootstrapVue <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'bootstrap-vue'</span>\\n\\nVue.use(BootstrapVue)</pre><p>And import Bootstrap and BootstrapVue <code>css</code> files:</p>\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-comment\\\">// app.js</span>\\n<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'bootstrap/dist/css/bootstrap.css'</span>\\n<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'bootstrap-vue/dist/bootstrap-vue.css'</span></pre><p>Or import Bootstrap and BootstrapVue <code>scss</code> files via a custom SCSS file:</p>\\n<pre class=\\\"hljs scss text-monospace p-2\\\"><span class=\\\"hljs-comment\\\">// custom.scss</span>\\n@<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'node_modules/bootstrap/scss/bootstrap'</span>;\\n@<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'node_modules/bootstrap-vue/src/index.scss'</span>;</pre><pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-comment\\\">// app.js</span>\\n<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'custom.scss'</span></pre><p>Be sure to include your custom variables before <code>bootstrap.scss</code> and include BootstrapVue SCSS\\n<em>after</em> Bootstrap SCSS to ensure variables are set up correctly.</p>\\n<p><strong>Note</strong>: <em>Requires webpack configuration to load CSS/SCSS files\\n(<a href=\\\"https://webpack.js.org/guides/asset-management/#loading-css\\\">official guide</a>)</em>.</p>\\n<h2 id=\\\"nuxtjs-plugin-module\\\"><span class=\\\"bd-content-title\\\">Nuxt.js plugin module<a class=\\\"anchorjs-link\\\" href=\\\"#nuxtjs-plugin-module\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<p>Install dependencies:</p>\\n<pre class=\\\"hljs bash text-monospace p-2\\\"><span class=\\\"hljs-comment\\\"># With npm</span>\\nnpm i bootstrap-vue\\n\\n<span class=\\\"hljs-comment\\\"># With yarn</span>\\nyarn add bootstrap-vue</pre><p>Add <code>bootstrap-vue/nuxt</code> to modules section of <strong>nuxt.config.js</strong>.</p>\\n<p>This will include both <code>boostrap.css</code> and <code>bootstrap-vue.css</code> default CSS.</p>\\n<pre class=\\\"hljs js text-monospace p-2\\\">{\\n  <span class=\\\"hljs-attr\\\">modules</span>: [<span class=\\\"hljs-string\\\">'bootstrap-vue/nuxt'</span>]\\n}</pre><p>If you are using custom Bootstrap SCSS, you can disable automatic inclusion of Bootstrap and\\nBootstrapVue pre-compiled CSS files by setting the following option(s) to <code>false</code>:</p>\\n<pre class=\\\"hljs js text-monospace p-2\\\">{\\n  <span class=\\\"hljs-attr\\\">modules</span>: [<span class=\\\"hljs-string\\\">'bootstrap-vue/nuxt'</span>],\\n  <span class=\\\"hljs-attr\\\">bootstrapVue</span>: {\\n    <span class=\\\"hljs-attr\\\">bootstrapCSS</span>: <span class=\\\"hljs-literal\\\">false</span>, <span class=\\\"hljs-comment\\\">// or `css`</span>\\n    bootstrapVueCSS: <span class=\\\"hljs-literal\\\">false</span> <span class=\\\"hljs-comment\\\">// or `bvCSS`</span>\\n  }\\n}</pre><p>BootstrapVue&#39;s custom CSS relies on some Bootstrap SCSS variables. You can include Bootstrap and\\nBootstrapVue SCSS in your project&#39;s custom SCSS file:</p>\\n<pre class=\\\"hljs scss text-monospace p-2\\\"><span class=\\\"hljs-comment\\\">// custom.scss</span>\\n\\n<span class=\\\"hljs-comment\\\">// Custom overrides go first</span>\\n<span class=\\\"hljs-variable\\\">$grid-breakpoints</span>: (\\n  xs: <span class=\\\"hljs-number\\\">0</span>,\\n  sm: <span class=\\\"hljs-number\\\">480px</span>,\\n  md: <span class=\\\"hljs-number\\\">640px</span>,\\n  lg: <span class=\\\"hljs-number\\\">992px</span>,\\n  xl: <span class=\\\"hljs-number\\\">1300px</span>\\n);\\n\\n<span class=\\\"hljs-comment\\\">// Then include the following</span>\\n@<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'bootstrap/scss/bootstrap.scss'</span>;\\n@<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'bootstrap-vue/src/index.scss'</span>;</pre><p>In your app main entry point include the single custom SCSS file (when using <code>sass-loader</code>):</p>\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-comment\\\">// app.js</span>\\n<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'custom.scss'</span></pre><h3 id=\\\"tree-shaking-with-nuxtjs\\\"><span class=\\\"bd-content-title\\\">Tree shaking with Nuxt.js<a class=\\\"anchorjs-link\\\" href=\\\"#tree-shaking-with-nuxtjs\\\" aria-label=\\\"Anchor\\\"></a></span></h3>\\n<p>If you wish to reduce your bundle size because you only use a subset of the available BootstrapVue\\nplugins, you can configure the list of BootstrapVue <code>componentPlugins</code> or <code>directivePlugins</code> you\\nwant to globally install in your Nuxt.js project.</p>\\n<pre class=\\\"hljs js text-monospace p-2\\\">{\\n  <span class=\\\"hljs-attr\\\">modules</span>: [<span class=\\\"hljs-string\\\">'bootstrap-vue/nuxt'</span>],\\n  <span class=\\\"hljs-attr\\\">bootstrapVue</span>: {\\n    <span class=\\\"hljs-attr\\\">componentPlugins</span>: [\\n      <span class=\\\"hljs-string\\\">'Form'</span>,\\n      <span class=\\\"hljs-string\\\">'FormCheckbox'</span>,\\n      <span class=\\\"hljs-string\\\">'FormInput'</span>,\\n      <span class=\\\"hljs-string\\\">'FormRadio'</span>\\n    ],\\n    <span class=\\\"hljs-attr\\\">directivePlugins</span>: [\\n      <span class=\\\"hljs-string\\\">'Popover'</span>\\n    ]\\n  }\\n}</pre><h2 id=\\\"vue-cli-2\\\"><span class=\\\"bd-content-title\\\">Vue CLI 2<a class=\\\"anchorjs-link\\\" href=\\\"#vue-cli-2\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<p>BootstrapVue has two Vue CLI templates available:</p>\\n<ul>\\n<li><a href=\\\"https://github.com/bootstrap-vue/webpack-simple\\\">webpack-simple</a>: Quick scaffold for a proof of\\nconcept or small app</li>\\n<li><a href=\\\"https://github.com/bootstrap-vue/webpack\\\">webpack</a>: Larger, production ready template with more\\noptions</li>\\n</ul>\\n<pre class=\\\"hljs bash text-monospace p-2\\\"><span class=\\\"hljs-comment\\\"># Ensure Vue CLI is installed and up to date</span>\\nnpm i -g vue-cli\\n\\n<span class=\\\"hljs-comment\\\"># Initialize a BootstrapVue project in the directory 'my-project'</span>\\nvue init bootstrap-vue/webpack-simple my-project\\n\\n<span class=\\\"hljs-comment\\\"># Change into the directory</span>\\n<span class=\\\"hljs-built_in\\\">cd</span> my-project\\n\\n<span class=\\\"hljs-comment\\\"># Install dependencies</span>\\nnpm i\\n\\n<span class=\\\"hljs-comment\\\"># Fire up the dev server with HMR</span>\\nnpm run dev</pre><p>You can repeat the commands above replacing <code>bootstrap-vue/webpack-simple</code> with\\n<code>bootstrap-vue/webpack</code> for the webpack template.</p>\\n<h2 id=\\\"vue-cli-3\\\"><span class=\\\"bd-content-title\\\">Vue CLI 3<a class=\\\"anchorjs-link\\\" href=\\\"#vue-cli-3\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<p>Unlike V2, Vue CLI 3 doesn&#39;t use templates.</p>\\n<p>Create a new project in the directory <code>my-project</code>:</p>\\n<pre class=\\\"hljs bash text-monospace p-2\\\">npx @vue/cli create my-project</pre><p>Enter the <code>my-project</code> directory and install <code>bootstrap-vue</code>:</p>\\n<pre class=\\\"hljs bash text-monospace p-2\\\">npm i bootstrap-vue</pre><p>Under the hood, Vue CLI uses webpack, so we can register the BootstrapVue plugin as with the webpack\\ninstructions.</p>\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-keyword\\\">import</span> Vue <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'vue'</span>\\n<span class=\\\"hljs-keyword\\\">import</span> BootstrapVue <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'bootstrap-vue'</span>\\n\\nVue.use(BootstrapVue)\\n\\n<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'bootstrap/dist/css/bootstrap.css'</span>\\n<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'bootstrap-vue/dist/bootstrap-vue.css'</span></pre><p>Optionally, you can import components individually, as\\n<a href=\\\"#individual-components-and-directives\\\">below</a>. To shorten import paths, we can add a webpack alias\\nvia <code>vue.config.js</code>.</p>\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-keyword\\\">const</span> path = <span class=\\\"hljs-built_in\\\">require</span>(<span class=\\\"hljs-string\\\">'path'</span>)\\n\\n<span class=\\\"hljs-built_in\\\">module</span>.exports = {\\n  <span class=\\\"hljs-attr\\\">configureWebpack</span>: {\\n    <span class=\\\"hljs-attr\\\">resolve</span>: {\\n      <span class=\\\"hljs-attr\\\">alias</span>: {\\n        <span class=\\\"hljs-string\\\">'bootstrap-components'</span>: path.resolve(__dirname, <span class=\\\"hljs-string\\\">'node_modules/bootstrap-vue/es/components'</span>)\\n      }\\n    }\\n  }\\n}</pre><p>For additional configuration for Vue CLI 3 for using project relative paths for image src props on\\nvarious BootstrapVue components, refer to the Vue CLI 3 section of the\\n<a href=\\\"/docs/reference/images#vue-cli-3-support\\\">Image Src Resolving</a> reference page.</p>\\n<h2 id=\\\"individual-components-and-directives\\\"><span class=\\\"bd-content-title\\\">Individual components and directives<a class=\\\"anchorjs-link\\\" href=\\\"#individual-components-and-directives\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<p>If you would like to only pull in a specific component or set of components, you can do this by\\ndirectly importing those components.</p>\\n<p>To cherry pick a component/directive, start by importing it in the file where it is being used:</p>\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-keyword\\\">import</span> BModal <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'bootstrap-vue/es/components/modal/modal'</span>\\n<span class=\\\"hljs-keyword\\\">import</span> BModalDirective <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'bootstrap-vue/es/directives/modal/modal'</span></pre><p>Then add it to your component definition:</p>\\n<pre class=\\\"hljs js text-monospace p-2\\\">Vue.component(<span class=\\\"hljs-string\\\">'my-component'</span>, {\\n  <span class=\\\"hljs-attr\\\">components</span>: {\\n    <span class=\\\"hljs-string\\\">'b-modal'</span>: BModal\\n  },\\n  <span class=\\\"hljs-attr\\\">directives</span>: {\\n    <span class=\\\"hljs-string\\\">'b-modal'</span>: BModalDirective\\n  }\\n  <span class=\\\"hljs-comment\\\">// ...</span>\\n})</pre><p>Or register them globally:</p>\\n<pre class=\\\"hljs js text-monospace p-2\\\">Vue.component(<span class=\\\"hljs-string\\\">'b-modal'</span>, BModal)\\nVue.directive(<span class=\\\"hljs-string\\\">'b-modal'</span>, BModalDirective)</pre><p>Vue and ES2015 allow for various syntaxes here, so feel free to utilize kebab-casing (shown),\\ncamelCasing, PascalCasing, and/or object property shorthand.</p>\\n<h3 id=\\\"component-groups-and-directives-as-vue-plugins\\\"><span class=\\\"bd-content-title\\\">Component groups and Directives as Vue plugins<a class=\\\"anchorjs-link\\\" href=\\\"#component-groups-and-directives-as-vue-plugins\\\" aria-label=\\\"Anchor\\\"></a></span></h3>\\n<p>You can also import component groups and directives as Vue plugins by importing the component group\\nor directive directory:</p>\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-comment\\\">// This imports all the layout components such as &lt;b-container&gt;, &lt;b-row&gt;, &lt;b-col&gt;:</span>\\n<span class=\\\"hljs-keyword\\\">import</span> { Layout } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'bootstrap-vue/es/components'</span>\\nVue.use(Layout)\\n\\n<span class=\\\"hljs-comment\\\">// This imports &lt;b-modal&gt; as well as the v-b-modal directive as a plugin:</span>\\n<span class=\\\"hljs-keyword\\\">import</span> { Modal } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'bootstrap-vue/es/components'</span>\\nVue.use(Modal)\\n\\n<span class=\\\"hljs-comment\\\">// This imports &lt;b-card&gt; along with all the &lt;b-card-*&gt; sub-components as a plugin:</span>\\n<span class=\\\"hljs-keyword\\\">import</span> { Card } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'bootstrap-vue/es/components'</span>\\nVue.use(Card)\\n\\n<span class=\\\"hljs-comment\\\">// This imports directive v-b-scrollspy as a plugin:</span>\\n<span class=\\\"hljs-keyword\\\">import</span> { Scrollspy } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'bootstrap-vue/es/directives'</span>\\nVue.use(Scrollspy)</pre><p>When importing as plugins, all subcomponents and related directives are imported in most cases. i.e.\\nWhen importing <code>&lt;b-nav&gt;</code>, all the <code>&lt;nav-*&gt;</code> sub components are also included, as well all dropdown\\nsub components. Component shorthand aliases (if any) are also included in the plugin.</p>\\n<p>Refer to the component and directive documentation for details.</p>\\n<h3 id=\\\"webpack--babel\\\"><span class=\\\"bd-content-title\\\">webpack + Babel<a class=\\\"anchorjs-link\\\" href=\\\"#webpack--babel\\\" aria-label=\\\"Anchor\\\"></a></span></h3>\\n<p>When importing components/directives individually, you must configure your app to properly build the\\nBootstrapVue library source code. This commonly involves white-listing the node module for your\\nbabel loader rule in webpack.</p>\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-comment\\\">// webpack.config.js</span>\\n<span class=\\\"hljs-keyword\\\">const</span> webpack = <span class=\\\"hljs-built_in\\\">require</span>(<span class=\\\"hljs-string\\\">'webpack'</span>)\\n<span class=\\\"hljs-keyword\\\">const</span> path = <span class=\\\"hljs-built_in\\\">require</span>(<span class=\\\"hljs-string\\\">'path'</span>)\\n\\n<span class=\\\"hljs-built_in\\\">module</span>.exports = {\\n  <span class=\\\"hljs-attr\\\">entry</span>: <span class=\\\"hljs-string\\\">'./app.js'</span>,\\n  <span class=\\\"hljs-attr\\\">output</span>: {\\n    <span class=\\\"hljs-attr\\\">filename</span>: <span class=\\\"hljs-string\\\">'bundle.js'</span>\\n  },\\n  <span class=\\\"hljs-attr\\\">module</span>: {\\n    <span class=\\\"hljs-attr\\\">rules</span>: [\\n      {\\n        <span class=\\\"hljs-attr\\\">test</span>: <span class=\\\"hljs-regexp\\\">/\\\\.js$/</span>,\\n        <span class=\\\"hljs-attr\\\">include</span>: [\\n          <span class=\\\"hljs-comment\\\">// Use `include` vs `exclude` to whitelist vs blacklist</span>\\n          path.resolve(__dirname, <span class=\\\"hljs-string\\\">'src'</span>), <span class=\\\"hljs-comment\\\">// Whitelist your app source files</span>\\n          <span class=\\\"hljs-built_in\\\">require</span>.resolve(<span class=\\\"hljs-string\\\">'bootstrap-vue'</span>) <span class=\\\"hljs-comment\\\">// Whitelist bootstrap-vue</span>\\n        ],\\n        <span class=\\\"hljs-attr\\\">loader</span>: <span class=\\\"hljs-string\\\">'babel-loader'</span>\\n      }\\n    ]\\n  }\\n}</pre><h2 id=\\\"browser\\\"><span class=\\\"bd-content-title\\\">Browser<a class=\\\"anchorjs-link\\\" href=\\\"#browser\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<pre class=\\\"hljs html text-monospace p-2\\\"><span class=\\\"hljs-comment\\\">&lt;!-- Add this to &lt;head&gt; --&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">link</span> <span class=\\\"hljs-attr\\\">type</span>=<span class=\\\"hljs-string\\\">\\\"text/css\\\"</span> <span class=\\\"hljs-attr\\\">rel</span>=<span class=\\\"hljs-string\\\">\\\"stylesheet\\\"</span> <span class=\\\"hljs-attr\\\">href</span>=<span class=\\\"hljs-string\\\">\\\"//unpkg.com/bootstrap/dist/css/bootstrap.min.css\\\"</span> /&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">link</span>\\n  <span class=\\\"hljs-attr\\\">type</span>=<span class=\\\"hljs-string\\\">\\\"text/css\\\"</span>\\n  <span class=\\\"hljs-attr\\\">rel</span>=<span class=\\\"hljs-string\\\">\\\"stylesheet\\\"</span>\\n  <span class=\\\"hljs-attr\\\">href</span>=<span class=\\\"hljs-string\\\">\\\"//unpkg.com/bootstrap-vue@latest/dist/bootstrap-vue.min.css\\\"</span>\\n/&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span> <span class=\\\"hljs-attr\\\">src</span>=<span class=\\\"hljs-string\\\">\\\"//unpkg.com/@babel/polyfill@latest/dist/polyfill.min.js\\\"</span>&gt;</span><span class=\\\"undefined\\\"></span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span> <span class=\\\"hljs-attr\\\">src</span>=<span class=\\\"hljs-string\\\">\\\"//unpkg.com/vue@latest/dist/vue.min.js\\\"</span>&gt;</span><span class=\\\"undefined\\\"></span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span> <span class=\\\"hljs-attr\\\">src</span>=<span class=\\\"hljs-string\\\">\\\"//unpkg.com/bootstrap-vue@latest/dist/bootstrap-vue.min.js\\\"</span>&gt;</span><span class=\\\"undefined\\\"></span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span></pre><h2 id=\\\"build-variants\\\"><span class=\\\"bd-content-title\\\">Build Variants<a class=\\\"anchorjs-link\\\" href=\\\"#build-variants\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<p>Choosing the best variant for your build environment / packager helps less bundle sizes. If your\\nbundler supports es modules, it will automatically prefer it over commonjs.</p>\\n<table class=\\\"table b-table table-striped\\\">\\n<thead class=\\\"thead-default\\\">\\n<tr>\\n<th>Variant</th>\\n<th>Environments</th>\\n<th>Package path</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td><strong>ES Module</strong></td>\\n<td>webpack 2 / rollup.js</td>\\n<td><code>es/index.js</code></td>\\n</tr>\\n<tr>\\n<td><strong>ESM Module</strong></td>\\n<td>webpack 2 / rollup.js</td>\\n<td><code>dist/bootstrap-vue.esm.js</code> <em>or</em> <code>dist/bootstrap-vue.esm.min.js</code></td>\\n</tr>\\n<tr>\\n<td>commonjs2</td>\\n<td>webpack 1 / ...</td>\\n<td><code>dist/bootstrap-vue.common.js</code> <em>or</em> <code>dist/bootstrap-vue.common.min.js</code></td>\\n</tr>\\n<tr>\\n<td>UMD</td>\\n<td>Browser</td>\\n<td><code>dist/bootstrap-vue.js</code> <em>or</em> <code>dist/bootstrap-vue.min.js</code></td>\\n</tr>\\n</tbody></table>\\n<h2 id=\\\"migrating-a-project-already-using-bootstrap\\\"><span class=\\\"bd-content-title\\\">Migrating a project already using Bootstrap<a class=\\\"anchorjs-link\\\" href=\\\"#migrating-a-project-already-using-bootstrap\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<p>If you&#39;ve already been using Bootstrap 4, there are a couple adjustments you may need to make to\\nyour project:</p>\\n<ul>\\n<li>Remove the bootstrap.js file from your page scripts or build pipeline</li>\\n<li>If Bootstrap is the only thing relying on jQuery, you can safely remove it — BootstrapVue <strong>does\\nnot</strong> depend on jQuery</li>\\n<li>Convert your native Bootstrap HTML markup into the simplified BootstrapVue custom component markup</li>\\n</ul>\\n<h2 id=\\\"browser-support\\\"><span class=\\\"bd-content-title\\\">Browser Support<a class=\\\"anchorjs-link\\\" href=\\\"#browser-support\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<h3 id=\\\"css\\\"><span class=\\\"bd-content-title\\\">CSS<a class=\\\"anchorjs-link\\\" href=\\\"#css\\\" aria-label=\\\"Anchor\\\"></a></span></h3>\\n<p>BootstrapVue is to be used with Bootstrap 4 CSS/SCSS. Please see\\n<a href=\\\"https://getbootstrap.com/docs/4.3/getting-started/browsers-devices\\\">Browsers and devices</a> for more\\ninformation about browsers currently supported by Bootstrap 4.</p>\\n<h3 id=\\\"js\\\"><span class=\\\"bd-content-title\\\">JS<a class=\\\"anchorjs-link\\\" href=\\\"#js\\\" aria-label=\\\"Anchor\\\"></a></span></h3>\\n<p>BootstrapVue is written in Vue! So this is up to your project and bundler which browsers are\\nsupported.</p>\\n<p>If you want to support older IE, Android and IOS devices, you may want to use\\n<a href=\\\"https://babeljs.io/docs/usage/polyfill\\\">Babel Polyfill</a>:</p>\\n<ul>\\n<li><code>npm install @babel/polyfill</code></li>\\n<li>Import it in your app main entry point with <code>import &#39;@babel/polyfill&#39;</code></li>\\n</ul>\\n<h2 id=\\\"tooling-support\\\"><span class=\\\"bd-content-title\\\">Tooling Support<a class=\\\"anchorjs-link\\\" href=\\\"#tooling-support\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<h3 id=\\\"vs-code--vetur\\\"><span class=\\\"bd-content-title\\\">VS Code + Vetur<a class=\\\"anchorjs-link\\\" href=\\\"#vs-code--vetur\\\" aria-label=\\\"Anchor\\\"></a></span></h3>\\n<p>If you are using <a href=\\\"https://code.visualstudio.com/\\\">VS Code</a> as your text editor, BootstrapVue has\\nintellisense autocompletion for component attributes available when using the\\n<a href=\\\"https://marketplace.visualstudio.com/items?itemName=octref.vetur\\\">Vetur extension</a>.</p>\\n<p><a href=\\\"https://twitter.com/AlexSashaRegan/status/912769997776158723\\\">Twitter: Vetur + BootstrapVue</a></p>\\n\";","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", {\n    staticClass: \"container bd-content\",\n    domProps: { innerHTML: _vm._s(_vm.readme) }\n  })\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../node_modules/@nuxt/webpack/node_modules/babel-loader/lib/index.js??ref--2-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/@nuxt/webpack/node_modules/babel-loader/lib/index.js??ref--2-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","<template>\n  <div class=\"container bd-content\" v-html=\"readme\" />\n</template>\n\n<script>\nimport readme from '~/markdown/intro/README.md'\nimport docsMixin from '~/plugins/docs-mixin'\n\nexport default {\n  mixins: [docsMixin],\n  layout: 'docs',\n  computed: {\n    readme() {\n      return readme\n    }\n  }\n}\n</script>\n","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=00416f12&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}