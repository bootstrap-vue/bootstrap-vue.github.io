(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{250:function(n,e,t){"use strict";var o=t(7);e.a={name:"BVMain",functional:!0,props:{tag:{type:String,default:"main"}},render(n,e){var{props:t,data:data,children:l}=e;return n(t.tag,Object(o.a)(data,{staticClass:"bd-main"}),[l])}}},251:function(n,e,t){"use strict";t(17);var o=t(7),l=t(21),r=n=>{if(n&&"click"===n.type){var e=n.target&&n.target.closest?n.target.closest("a[href]"):null;if(!(!e||"click"!==n.type||e.__vue__||e.closest(".bd-example")||e.closest("pre")||n.defaultPrevented)){var t=e.getAttribute("href");t&&0===t.indexOf("/")&&0!==t.indexOf("//")?(n.preventDefault(),"undefined"!=typeof window&&window.$nuxt&&window.$nuxt.$router.push(t)):t&&0===t.indexOf("#")&&((n,e)=>{n.preventDefault(),n.stopPropagation();var t=(e||"").replace(/#/g,""),o=document.body.querySelector('[id="'.concat(t,'"]'));if(o){var r=document.scrollingElement||document.documentElement||document.body;Object(l.h)(r,Object(l.d)(o)-70,100,()=>{o.tabIndex=-1,o.focus()})}})(n,t)}}};e.a={name:"BVSection",functional:!0,props:{tag:{type:String,default:"section"},play:{type:Boolean,default:!1}},render(n,e){var{props:t,data:data,children:l}=e,c=[];return t.play&&c.push({name:"play"}),n(t.tag,Object(o.a)(data,{class:["bd-content"],directives:c,on:{click:r}}),[l])}}},252:function(n,e,t){"use strict";t(17),t(23);var o=t(21),l=t(44),r={};e.a={data:()=>({scrollTimeout:null}),computed:{content(){return this.$route.params.slug&&this._content[this.$route.params.slug]||{}},headTitle(){var n=this.$route.name,title="",section="";return this.meta&&this.meta.title&&(title=this.meta.title),/^docs-components/.test(n)?section="Components":/^docs-directives/.test(n)?section="Directives":/^docs-reference/.test(n)?section="Reference":/^docs-misc/.test(n)&&(section="Miscellaneous"),[title,section,"BootstrapVue"].filter(Boolean).join(" | ")},headMeta(){var section=this.$route.name.split("-")[1],n=section?l.i.find(n=>n.base==="".concat(section,"/")):null,e=this.meta&&this.meta.description?this.meta.description:n&&n.description?n.description:l.c,meta=[{hid:"og:title",name:"og:title",property:"og:title",content:this.headTitle}];return e&&(meta.push({hid:"description",name:"description",content:e}),meta.push({hid:"og:description",name:"og:description",property:"og:description",content:e})),meta}},mounted(){this.clearScrollTimeout(),this.focusScroll(),this.$nextTick(()=>{setTimeout(()=>{var n="".concat(this.$route.path,"_").concat(this.$route.params.slug||""),e=r[n]||(r[n]=Object(o.c)(this.readme||"",this.meta||null));this.$root.$emit("docs-set-toc",e)},1)})},updated(){this.clearScrollTimeout(),this.focusScroll()},beforeDestroy(){this.clearScrollTimeout(),this.$root.$emit("docs-set-toc",{})},methods:{clearScrollTimeout(){this.scrollTimeout&&(clearTimeout(this.scrollTimeout),this.scrollTimeout=null)},focusScroll(){var n=this.$route.hash;this.$nextTick(()=>{var e;n&&(e=this.$el.querySelector('[id="'.concat(n.replace("#",""),'"]')),this.scrollIntoView(e)),e||(e=this.$el.querySelector("h1")),e&&(e.tabIndex=-1,e.focus())})},scrollIntoView(n){if(n){var e=document.scrollingElement||document.documentElement||document.body;this.scrollTimeout=setTimeout(()=>{this.clearScrollTimeout(),Object(o.h)(e,Object(o.d)(n)-70,100)},100)}}},head(){return{title:this.headTitle,meta:this.headMeta}}}},274:function(n,e){n.exports='<h1 id="getting-started" class="bv-no-focus-ring"><span class="bd-content-title">Getting Started</span></h1>\n<p class="bd-lead">Get started with BootstrapVue, based on the world&#39;s most popular framework - Bootstrap\nv{{ bootstrapVersionMajor }}, for building responsive, mobile-first sites using Vue.js.</p>\n<ul>\n<li><a href="https://vuejs.org/" target="_blank" rel="noopener">Vue.js</a> <code class="text-nowrap" translate="no">v{{ vueVersionMinor }}</code> is required, <code class="text-nowrap" translate="no">v{{ vueVersion }}</code> is\nrecommended</li>\n<li><a href="https://getbootstrap.com/" target="_blank" rel="noopener">Bootstrap</a> <code class="text-nowrap" translate="no">4.3.1</code> is required, <code class="text-nowrap" translate="no">v{{ bootstrapVersion }}</code> is\nrecommended</li>\n<li><a href="https://portal-vue.linusb.org/" target="_blank" rel="noopener">PortalVue</a> <code class="text-nowrap" translate="no">v{{ portalVueVersionMinor }}</code> is required by\n<a href="/docs/components/toast" class="font-weight-bold">Toasts</a>, <code class="text-nowrap" translate="no">v{{ portalVueVersion }}</code> is recommended</li>\n<li><a href="https://jquery.com/" target="_blank" rel="noopener">jQuery</a> is <strong>not</strong> required</li>\n</ul>\n<p>Check out what is new in <a href="/docs/misc/changelog" class="font-weight-bold">BootstrapVue release v{{ version }}</a>.</p>\n<p>If you are migrating from a previous <code class="text-nowrap" translate="no">v2.0.0-rc.##</code> release, please see the\n<a href="/docs/misc/changelog#v200" class="font-weight-bold"><code class="text-nowrap" translate="no">v2.0.0</code> migration guide</a>.</p>\n<h2 id="documentation-sections" class="bv-no-focus-ring"><span class="bd-content-title">Documentation sections<a class="anchorjs-link" href="#documentation-sections" aria-labelledby="documentation-sections"></a></span></h2>\n<p>The online documentation is comprised of the following sections:</p>\n<ul>\n<li><a href="/docs/components" class="font-weight-bold">Components</a> - Components and component plugin documentation</li>\n<li><a href="/docs/directives" class="font-weight-bold">Directives</a> - Directives and directive plugin documentation</li>\n<li><a href="/docs/icons" class="font-weight-bold">Icons</a> - Icons and icon plugin documentation <b-badge>v2.2.0+</b-badge></li>\n<li><a href="/docs/reference" class="font-weight-bold">Reference</a> - Reference information and documentation</li>\n<li><a href="/docs/misc" class="font-weight-bold">Miscellaneous</a> - Miscellaneous information</li>\n<li><a href="/play" class="font-weight-bold">Playground</a> - Online playground</li>\n</ul>\n<h2 id="prerequisites" class="bv-no-focus-ring"><span class="bd-content-title">Prerequisites<a class="anchorjs-link" href="#prerequisites" aria-labelledby="prerequisites"></a></span></h2>\n<p>Before getting started with BootstrapVue, you should have general familiarity with Vue functionality\nand Bootstrap v{{ bootstrapVersionMajor }} CSS. If you are unfamiliar with Vue and/or Bootstrap,\nsome good starting points would be:</p>\n<ul>\n<li><a href="https://vuejs.org/v2/guide/" target="_blank" rel="noopener">Vue Guide</a></li>\n<li><a href="https://vuejs.org/v2/api/" target="_blank" rel="noopener">Vue API</a></li>\n<li><a href="https://getbootstrap.com/" target="_blank" rel="noopener">Bootstrap v{{bootstrapVersionMinor}} documentation</a></li>\n<li><a href="https://vue-loader.vuejs.org/guide/scoped-css.html" target="_blank" rel="noopener">Vue loader scoped CSS</a>, if using scoped\nstyles in SFC (Single File Component) <code class="text-nowrap" translate="no">.vue</code> files</li>\n</ul>\n<h2 id="documentation-information" class="bv-no-focus-ring"><span class="bd-content-title">Documentation information<a class="anchorjs-link" href="#documentation-information" aria-labelledby="documentation-information"></a></span></h2>\n<p>In many of the examples shown in BootstrapVue&#39;s documentation, you may see the use of CSS classes\nsuch as <code class="text-nowrap">ml-2</code>, <code class="text-nowrap">py-1</code>, etc. These are\nBootstrap v{{bootstrapVersionMinor}} utility classes that help control padding, margins, positioning\nand more. You can find information on these classes in the\n<a href="/docs/reference/utility-classes" class="font-weight-bold">Utility Classes</a> reference section.</p>\n<p>Many of the examples in this documentation are <em>live</em> and can be edited in-place for an enhanced\nlearning experience (note some examples may not work in IE 11 due to use of ES6 JavaScript code in\nthe <code class="text-nowrap" translate="no">&lt;template&gt;</code> sections).</p>\n<p>BootstrapVue also provides an <a href="/play" class="font-weight-bold">interactive playground</a> where you can experiment with the\nvarious components and export your results to JSFiddle, CodePen, and/or CodeSandbox.</p>\n<h2 id="important-html-globals" class="bv-no-focus-ring"><span class="bd-content-title">Important HTML globals<a class="anchorjs-link" href="#important-html-globals" aria-labelledby="important-html-globals"></a></span></h2>\n<p>Bootstrap v{{bootstrapVersionMajor}} CSS employs a handful of important global styles and settings\nthat you&#39;ll need to be aware of when using it, all of which are almost exclusively geared towards\nthe normalization of cross browser styles. Refer to the following sub-sections for details.</p>\n<h3 id="html5-doctype" class="bv-no-focus-ring"><span class="bd-content-title">HTML5 doctype<a class="anchorjs-link" href="#html5-doctype" aria-labelledby="html5-doctype"></a></span></h3>\n<p>Bootstrap requires the use of the <code class="text-nowrap" translate="no">HTML5</code> doctype. Without it, you <em>may</em> see some funky incomplete\nstyling, but including it shouldn&#39;t cause any considerable hiccups.</p>\n<div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-meta">&lt;!doctype <span class="hljs-meta-keyword">html</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">"en"</span>&gt;</span>\n  ...\n<span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></pre></div><h3 id="responsive-meta-tag" class="bv-no-focus-ring"><span class="bd-content-title">Responsive meta tag<a class="anchorjs-link" href="#responsive-meta-tag" aria-labelledby="responsive-meta-tag"></a></span></h3>\n<p>Bootstrap is developed for mobile first, a strategy in which code is optimized for mobile devices\nfirst and then scales up components as necessary using CSS media queries. To ensure proper rendering\nand touch zooming for all devices, <strong>add the responsive viewport meta</strong> tag to your <code class="text-nowrap" translate="no">&lt;head&gt;</code>.</p>\n<div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"viewport"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"width=device-width, initial-scale=1, shrink-to-fit=no"</span>&gt;</span></pre></div><h3 id="css-box-sizing" class="bv-no-focus-ring"><span class="bd-content-title">CSS box-sizing<a class="anchorjs-link" href="#css-box-sizing" aria-labelledby="css-box-sizing"></a></span></h3>\n<p>For more straightforward sizing in CSS, the global <code class="text-nowrap" translate="no">box-sizing</code> value is switched from <code class="text-nowrap" translate="no">content-box</code>\nto <code class="text-nowrap" translate="no">border-box</code>. This ensures <code class="text-nowrap" translate="no">padding</code> does not affect the final computed width of an element, but\nit can cause problems with some third party software like Google Maps and Google Custom Search\nEngine.</p>\n<p>On the rare occasion you need to override it, use something like the following:</p>\n<div class="bd-code"><pre class="hljs css p-2" translate="no"><span class="hljs-selector-class">.selector-for-some-widget</span> {\n  <span class="hljs-attribute">box-sizing</span>: content-box;\n}</pre></div><p>With the above snippet, nested elements — including generated content via <code class="text-nowrap" translate="no">::before</code> and <code class="text-nowrap" translate="no">::after</code> —\nwill all inherit the specified <code class="text-nowrap" translate="no">box-sizing</code> for that <code class="text-nowrap" translate="no">.selector-for-some-widget</code>.</p>\n<p>Learn more about <a href="https://css-tricks.com/box-sizing/" target="_blank" rel="noopener">box model and sizing at CSS Tricks</a>.</p>\n<h3 id="style-reboot" class="bv-no-focus-ring"><span class="bd-content-title">Style reboot<a class="anchorjs-link" href="#style-reboot" aria-labelledby="style-reboot"></a></span></h3>\n<p>For improved cross-browser rendering, Bootstrap v{{ bootstrapVersionMinor }} uses\n<a href="https://getbootstrap.com/docs/4.3/content/reboot/" target="_blank" rel="noopener">Reboot</a> to correct inconsistencies across\nbrowsers and devices while providing slightly more opinionated resets to common\n<abbr title="Hyper Text markup Language">HTML</abbr> elements.</p>\n<h2 id="using-module-bundlers" class="bv-no-focus-ring"><span class="bd-content-title">Using module bundlers<a class="anchorjs-link" href="#using-module-bundlers" aria-labelledby="using-module-bundlers"></a></span></h2>\n<p>If you are using module bundlers like <a href="https://webpack.js.org/" target="_blank" rel="noopener">Webpack</a>,\n<a href="https://parceljs.org/" target="_blank" rel="noopener">Parcel</a> or <a href="https://rollupjs.org/" target="_blank" rel="noopener">rollup.js</a>, you may prefer to directly\ninclude the package into your project. To get started, use <code class="text-nowrap" translate="no">yarn</code> or <code class="text-nowrap" translate="no">npm</code> to get the latest version\nof Vue.js, BootstrapVue and Bootstrap v4:</p>\n<div class="bd-code"><pre class="hljs bash p-2" translate="no"><span class="hljs-comment"># With npm</span>\nnpm install vue bootstrap-vue bootstrap\n\n<span class="hljs-comment"># With yarn</span>\nyarn add vue bootstrap-vue bootstrap</pre></div><p>Then, register BootstrapVue in your app entry point:</p>\n<div class="bd-code"><pre class="hljs js p-2" translate="no" data-filename="app.js"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">\'vue\'</span>\n<span class="hljs-keyword">import</span> { BootstrapVue, IconsPlugin } <span class="hljs-keyword">from</span> <span class="hljs-string">\'bootstrap-vue\'</span>\n\n<span class="hljs-comment">// Install BootstrapVue</span>\nVue.use(BootstrapVue)\n<span class="hljs-comment">// Optionally install the BootstrapVue icon components plugin</span>\nVue.use(IconsPlugin)</pre></div><p>And import Bootstrap and BootstrapVue <code class="text-nowrap" translate="no">css</code> files:</p>\n<div class="bd-code"><pre class="hljs js p-2" translate="no" data-filename="app.js"><span class="hljs-keyword">import</span> <span class="hljs-string">\'bootstrap/dist/css/bootstrap.css\'</span>\n<span class="hljs-keyword">import</span> <span class="hljs-string">\'bootstrap-vue/dist/bootstrap-vue.css\'</span></pre></div><p><strong>Alternatively</strong> you can import Bootstrap and BootstrapVue <code class="text-nowrap" translate="no">scss</code> files in a custom SCSS file:</p>\n<div class="bd-code"><pre class="hljs scss p-2" translate="no" data-filename="custom.scss"><span class="hljs-keyword">@import</span> <span class="hljs-string">\'node_modules/bootstrap/scss/bootstrap\'</span>;\n<span class="hljs-keyword">@import</span> <span class="hljs-string">\'node_modules/bootstrap-vue/src/index.scss\'</span>;</pre></div><p>Make sure to import the <code class="text-nowrap" translate="no">custom.scss</code> file in your app entry point:</p>\n<div class="bd-code"><pre class="hljs js p-2" translate="no" data-filename="app.js"><span class="hljs-keyword">import</span> <span class="hljs-string">\'./custom.scss\'</span></pre></div><p>Be sure to <code class="text-nowrap" translate="no">@import</code> or define your custom variable values <em>before</em> including Bootstrap SCSS\n(<code class="text-nowrap" translate="no">bootstrap.scss</code>), and include BootstrapVue SCSS (<code class="text-nowrap" translate="no">bootstrap-vue.scss</code>) <em>after that</em> to ensure\nvariables are set up correctly.</p>\n<p>Place all of the SCSS <code class="text-nowrap" translate="no">@import</code>s into a <strong>single SCSS file</strong>, and import that single file into your\nproject. Importing individual SCSS files into your project will <strong>not</strong> share variable values and\nfunctions between files by default.</p>\n<p>Webpack and Parcel support prepending the <code class="text-nowrap" translate="no">scss</code> modules with tilde paths (<code class="text-nowrap" translate="no">~</code>) when importing from\na <code class="text-nowrap" translate="no">scss</code> file:</p>\n<div class="bd-code"><pre class="hljs scss p-2" translate="no"><span class="hljs-comment">// Webpack example</span>\n<span class="hljs-keyword">@import</span> <span class="hljs-string">\'~bootstrap\'</span>;\n<span class="hljs-keyword">@import</span> <span class="hljs-string">\'~bootstrap-vue\'</span>;</pre></div><div class="bd-code"><pre class="hljs scss p-2" translate="no"><span class="hljs-comment">// Parcel example</span>\n<span class="hljs-keyword">@import</span> <span class="hljs-string">\'~bootstrap/scss/bootstrap\'</span>;\n<span class="hljs-keyword">@import</span> <span class="hljs-string">\'~bootstrap-vue/src/index.scss\'</span>;</pre></div><p>For more details how to configure asset loading and how modules are resolved, please consult the\nmodule bundlers documentation.</p>\n<p><strong>Notes</strong>:</p>\n<ul>\n<li>Webpack configuration to load CSS files\n(<a href="https://webpack.js.org/guides/asset-management/#loading-css" target="_blank" rel="noopener">official guide</a>)</li>\n<li>Webpack Loader for SASS/SCSS files (<a href="https://webpack.js.org/loaders/sass-loader/" target="_blank" rel="noopener">official guide</a>)</li>\n<li>Parcel CSS (<a href="https://parceljs.org/css.html" target="_blank" rel="noopener">official guide</a>)</li>\n<li>Parcel SCSS (<a href="https://parceljs.org/scss.html" target="_blank" rel="noopener">official guide</a>)</li>\n</ul>\n<p>For information on theming Bootstrap, check out the <a href="/docs/reference/theming" class="font-weight-bold">Theming</a> reference\nsection.</p>\n<h3 id="aliasing-vue-import" class="bv-no-focus-ring"><span class="bd-content-title">Aliasing Vue import<a class="anchorjs-link" href="#aliasing-vue-import" aria-labelledby="aliasing-vue-import"></a></span></h3>\n<p>BootstrapVue and PortalVue require access to the global <code class="text-nowrap" translate="no">Vue</code> reference (via\n<code class="text-nowrap" translate="no">import Vue from &#39;vue&#39;</code>).</p>\n<div class="alert alert-info mb-3">\n  <p class="mb-0">\n    If you are using a specific build of Vue (i.e. runtime-only vs. compiler + runtime), you will\n    need to set up an alias to <code class="notranslate" translate="no">\'vue\'</code> in your bundler config to ensure that your\n    project, BootstrapVue and PortalVue are all using the same build version of Vue. If you are\n    seeing an error such as <code class="notranslate" translate="no">"$attr and $listeners is readonly"</code>, or\n    <code class="notranslate" translate="no">"Multiple instances of Vue detected"</code>, then you will need to set up an alias.\n  </p>\n</div>\n\n<p><strong>Example: Vue alias in webpack.config.js</strong></p>\n<div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-comment">// ...</span>\n  <span class="hljs-attr">resolve</span>: {\n    <span class="hljs-attr">alias</span>: {\n      <span class="hljs-comment">// If using the runtime only build</span>\n      <span class="hljs-attr">vue$</span>: <span class="hljs-string">\'vue/dist/vue.runtime.esm.js\'</span> <span class="hljs-comment">// \'vue/dist/vue.runtime.common.js\' for webpack 1</span>\n      <span class="hljs-comment">// Or if using full build of Vue (runtime + compiler)</span>\n      <span class="hljs-comment">// vue$: \'vue/dist/vue.esm.js\'      // \'vue/dist/vue.common.js\' for webpack 1</span>\n    }\n  }\n}</pre></div><p><strong>Note:</strong> If your project has multiple webpack config files (i.e. <code class="text-nowrap" translate="no">webpack.config.js</code>,\n<code class="text-nowrap" translate="no">webpack.renderer.config.js</code>, <code class="text-nowrap" translate="no">webpack.vendor.config.js</code>, <code class="text-nowrap" translate="no">webpack.server.config.js</code>,\n<code class="text-nowrap" translate="no">webpack.client.config.js</code>, etc), you will need to set the appropriate alias in <em>all</em> of them.</p>\n<p>See the <a href="https://vuejs.org/v2/guide/installation.html#Runtime-Compiler-vs-Runtime-only" target="_blank" rel="noopener">Vue.js</a>\nGuide for full details on setting up aliases for <a href="https://webpack.js.org/" target="_blank" rel="noopener">webpack</a>,\n<a href="https://rollupjs.org/" target="_blank" rel="noopener">rollup.js</a>, <a href="https://parceljs.org/" target="_blank" rel="noopener">Parcel</a>, etc.</p>\n<h2 id="tree-shaking-with-module-bundlers" class="bv-no-focus-ring"><span class="bd-content-title">Tree shaking with module bundlers<a class="anchorjs-link" href="#tree-shaking-with-module-bundlers" aria-labelledby="tree-shaking-with-module-bundlers"></a></span></h2>\n<p>When using a module bundler you can optionally import only specific components groups (plugins),\ncomponents and/or directives. Note that tree shaking only applies to the JavaScript code and not\nCSS/SCSS.</p>\n<div class="alert alert-info">\n  <p class="mb-0">\n    <b>Note:</b> Optimal tree shaking only works when webpack 4 is in\n    <a href="https://webpack.js.org/guides/tree-shaking"><code class="notranslate" translate="no">production</code></a> mode and\n    javascript minification is enabled.\n  </p>\n</div>\n\n<h3 id="component-groups-and-directives-as-vue-plugins" class="bv-no-focus-ring"><span class="bd-content-title">Component groups and directives as Vue plugins<a class="anchorjs-link" href="#component-groups-and-directives-as-vue-plugins" aria-labelledby="component-groups-and-directives-as-vue-plugins"></a></span></h3>\n<p>You can import component groups and directives as Vue plugins by importing from the <code class="text-nowrap" translate="no">bootstrap-vue</code>:</p>\n\x3c!-- eslint-disable import/first, import/no-duplicates --\x3e\n\n<div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-comment">// This imports all the layout components such as &lt;b-container&gt;, &lt;b-row&gt;, &lt;b-col&gt;:</span>\n<span class="hljs-keyword">import</span> { LayoutPlugin } <span class="hljs-keyword">from</span> <span class="hljs-string">\'bootstrap-vue\'</span>\nVue.use(LayoutPlugin)\n\n<span class="hljs-comment">// This imports &lt;b-modal&gt; as well as the v-b-modal directive as a plugin:</span>\n<span class="hljs-keyword">import</span> { ModalPlugin } <span class="hljs-keyword">from</span> <span class="hljs-string">\'bootstrap-vue\'</span>\nVue.use(ModalPlugin)\n\n<span class="hljs-comment">// This imports &lt;b-card&gt; along with all the &lt;b-card-*&gt; sub-components as a plugin:</span>\n<span class="hljs-keyword">import</span> { CardPlugin } <span class="hljs-keyword">from</span> <span class="hljs-string">\'bootstrap-vue\'</span>\nVue.use(CardPlugin)\n\n<span class="hljs-comment">// This imports directive v-b-scrollspy as a plugin:</span>\n<span class="hljs-keyword">import</span> { VBScrollspyPlugin } <span class="hljs-keyword">from</span> <span class="hljs-string">\'bootstrap-vue\'</span>\nVue.use(VBScrollspyPlugin)\n\n<span class="hljs-comment">// This imports the dropdown and table plugins</span>\n<span class="hljs-keyword">import</span> { DropdownPlugin, TablePlugin } <span class="hljs-keyword">from</span> <span class="hljs-string">\'bootstrap-vue\'</span>\nVue.use(DropdownPlugin)\nVue.use(TablePlugin)</pre></div><p>When importing as plugins, all subcomponents and related directives are imported in most cases. i.e.\nWhen importing <code class="text-nowrap" translate="no">&lt;b-nav&gt;</code>, all the <code class="text-nowrap" translate="no">&lt;nav-*&gt;</code> sub components are also included, as well all dropdown\nsub components. Component shorthand aliases (if any) are also included in the plugin. Refer to the\ncomponent and directive documentation for details.</p>\n<p>There are two additional helper plugins for providing the <code class="text-nowrap" translate="no">$bvModal</code> and <code class="text-nowrap" translate="no">$bvToast</code> injections (if\nyou are not using the <code class="text-nowrap" translate="no">ModalPlugin</code> or <code class="text-nowrap" translate="no">ToastPlugin</code> plugins) which are available for import from\n<code class="text-nowrap" translate="no">&#39;bootstrap-vue&#39;</code>:</p>\n<ul>\n<li><code class="text-nowrap" translate="no">BVModalPlugin</code> - provides the injection <code class="text-nowrap" translate="no">$bvModal</code> for generating\n<a href="/docs/components/modal#modal-message-boxes" class="font-weight-bold">message boxes</a>.</li>\n<li><code class="text-nowrap" translate="no">BVToastPlugin</code> - provides the injection <code class="text-nowrap" translate="no">$bvToast</code> for generating\n<a href="/docs/components/toast#toasts-on-demand" class="font-weight-bold">on demand toasts</a>.</li>\n</ul>\n<p>When importing multiple component group and/or directive group plugins, include all imports in a\nsingle <code class="text-nowrap" translate="no">import</code> statement for optimal tree shaking.</p>\n<h3 id="individual-components-and-directives" class="bv-no-focus-ring"><span class="bd-content-title">Individual components and directives<a class="anchorjs-link" href="#individual-components-and-directives" aria-labelledby="individual-components-and-directives"></a></span></h3>\n<p>If you would like to only pull in a specific component or set of components, you can do this by\ndirectly importing those components.</p>\n<p>To cherry pick a component/directive, start by importing it in the file where it is being used:</p>\n\x3c!-- eslint-disable no-unused-vars --\x3e\n\n<div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-comment">// Place all imports from \'bootstrap-vue\' in a single import</span>\n<span class="hljs-comment">// statement for optimal bundle sizes</span>\n<span class="hljs-keyword">import</span> { BModal, VBModal } <span class="hljs-keyword">from</span> <span class="hljs-string">\'bootstrap-vue\'</span></pre></div><p>Then add it to your component definition:</p>\n\x3c!-- eslint-disable no-undef --\x3e\n\n<div class="bd-code"><pre class="hljs js p-2" translate="no">Vue.component(<span class="hljs-string">\'my-component\'</span>, {\n  <span class="hljs-attr">components</span>: {\n    <span class="hljs-string">\'b-modal\'</span>: BModal\n  },\n  <span class="hljs-attr">directives</span>: {\n    <span class="hljs-comment">// Note that Vue automatically prefixes directive names with `v-`</span>\n    <span class="hljs-string">\'b-modal\'</span>: VBModal\n  }\n  <span class="hljs-comment">// ...</span>\n})</pre></div><p>Or register them globally:</p>\n\x3c!-- eslint-disable no-undef --\x3e\n\n<div class="bd-code"><pre class="hljs js p-2" translate="no">Vue.component(<span class="hljs-string">\'b-modal\'</span>, BModal)\n<span class="hljs-comment">// Note that Vue automatically prefixes directive names with `v-`</span>\nVue.directive(<span class="hljs-string">\'b-modal\'</span>, VBModal)</pre></div><p>Vue allows for various component and directive name syntaxes here, so feel free to utilize\n<samp class="notranslate" translate="no">kebab-casing</samp> (shown), <samp class="notranslate" translate="no">camelCasing</samp>, <samp class="notranslate" translate="no">PascalCasing</samp>, and/or\nobject property shorthand (components only).</p>\n<h3 id="using-bootstrapvue-source-code-for-smaller-bundles" class="bv-no-focus-ring"><span class="bd-content-title">Using BootstrapVue source code for smaller bundles<a class="anchorjs-link" href="#using-bootstrapvue-source-code-for-smaller-bundles" aria-labelledby="using-bootstrapvue-source-code-for-smaller-bundles"></a></span></h3>\n<p>When using module bundlers, they will usually default to using the <code class="text-nowrap" translate="no">esm/</code> modular build, which has\nbeen pre-transpiled by Babel for our\n<a href="https://github.com/bootstrap-vue/bootstrap-vue/blob/master/.browserslistrc" target="_blank" rel="noopener">supported browsers</a>.</p>\n<p>You can override the use of the <code class="text-nowrap" translate="no">esm/</code> build by aliasing <code class="text-nowrap" translate="no">&#39;bootstrap-vue&#39;</code> to use the BootstrapVue\nsource files, and whitelisting <code class="text-nowrap" translate="no">node_modules/bootstrap-vue/src/*</code> for transpilation by your build\nprocess, in your module bundler config. This will allow you to transpile BootstrapVue for your\ntarget browsers/environments and potentially reduce bundle sizes (and will only include the babel\nhelper utils once) at the expense of slightly longer build times.</p>\n<p><strong>Example webpack.config.js for Babel transpilation:</strong></p>\n<div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-attr">resolve</span>: {\n    <span class="hljs-attr">alias</span>: {\n      <span class="hljs-comment">// Alias for using source of BootstrapVue</span>\n      <span class="hljs-string">\'bootstrap-vue$\'</span>: <span class="hljs-string">\'bootstrap-vue/src/index.js\'</span>\n    }\n  },\n  <span class="hljs-attr">module</span>: {\n    <span class="hljs-attr">rules</span>: [\n      {\n        <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\\.js$/</span>,\n        <span class="hljs-comment">// Exclude transpiling `node_modules`, except `bootstrap-vue/src`</span>\n        <span class="hljs-attr">exclude</span>: <span class="hljs-regexp">/node_modules\\/(?!bootstrap-vue\\/src\\/)/</span>,\n        <span class="hljs-attr">use</span>: {\n          <span class="hljs-attr">loader</span>: <span class="hljs-string">\'babel-loader\'</span>,\n          <span class="hljs-attr">options</span>: {\n            <span class="hljs-attr">presets</span>: [<span class="hljs-string">\'env\'</span>]\n          }\n        }\n      }\n    ]\n  }\n}</pre></div><p>You may need to install <code class="text-nowrap" translate="no">babel-core</code>, <code class="text-nowrap" translate="no">babel-loader</code>, and <code class="text-nowrap" translate="no">babel-preset-env</code>:</p>\n<div class="bd-code"><pre class="hljs bash p-2" translate="no"><span class="hljs-comment"># If using npm</span>\nnpm install babel-core babel-loader babel-preset-env --save-dev\n\n<span class="hljs-comment"># If using yarn</span>\nyarn add babel-core babel-loader babel-preset-env --dev</pre></div><p>For more details see:</p>\n<ul>\n<li><a href="https://webpack.js.org/configuration/resolve/" target="_blank" rel="noopener">Webpack <code class="text-nowrap" translate="no">resolve.alias</code></a></li>\n<li><a href="https://webpack.js.org/configuration/module/#rule" target="_blank" rel="noopener">Webpack <code class="text-nowrap" translate="no">rule</code></a></li>\n<li><a href="https://rollupjs.org/" target="_blank" rel="noopener">rollup.js</a></li>\n<li><a href="https://parceljs.org/" target="_blank" rel="noopener">Parcel</a></li>\n</ul>\n<h2 id="nuxtjs-module" class="bv-no-focus-ring"><span class="bd-content-title">Nuxt.js module<a class="anchorjs-link" href="#nuxtjs-module" aria-labelledby="nuxtjs-module"></a></span></h2>\n<p>BootstrapVue provides a Nuxt.js module for easily importing BootstrapVue (or portions of\nBootstrapVue) into your Nuxt.js app.</p>\n<h3 id="getting-started-with-nuxtjs" class="bv-no-focus-ring"><span class="bd-content-title">Getting started with Nuxt.js<a class="anchorjs-link" href="#getting-started-with-nuxtjs" aria-labelledby="getting-started-with-nuxtjs"></a></span></h3>\n<p><a href="https://nuxtjs.org/" target="_blank" rel="noopener">Nuxt.js</a> version <code class="notranslate" translate="no">{{ nuxtVersion }}</code> (or greater) is recommended.</p>\n<p>Install dependencies:</p>\n<div class="bd-code"><pre class="hljs bash p-2" translate="no"><span class="hljs-comment"># With npm</span>\nnpm install bootstrap-vue\n\n<span class="hljs-comment"># With yarn</span>\nyarn add bootstrap-vue</pre></div><p>Add <code class="text-nowrap" translate="no">bootstrap-vue/nuxt</code> to modules section of your <strong><code class="text-nowrap" translate="no">nuxt.config.js</code></strong> file.</p>\n<p>This will include both <code class="text-nowrap" translate="no">bootstrap.css</code> and <code class="text-nowrap" translate="no">bootstrap-vue.css</code> default pre-compiled CSS.</p>\n<div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-attr">modules</span>: [<span class="hljs-string">\'bootstrap-vue/nuxt\'</span>]\n}</pre></div><p>Note that this will <strong>not</strong> install the Icons components. To see how to include icons via the\nNuxt.js module, refer to the <a href="#icons" class="font-weight-bold">Icons section</a> below.</p>\n<h3 id="using-custom-bootstrap-scss" class="bv-no-focus-ring"><span class="bd-content-title">Using custom Bootstrap SCSS<a class="anchorjs-link" href="#using-custom-bootstrap-scss" aria-labelledby="using-custom-bootstrap-scss"></a></span></h3>\n<p>If you are using custom Bootstrap SCSS, you can disable automatic inclusion of Bootstrap and\nBootstrapVue pre-compiled CSS files by setting the following option(s) to <code class="text-nowrap" translate="no">false</code>:</p>\n<div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-attr">modules</span>: [<span class="hljs-string">\'bootstrap-vue/nuxt\'</span>],\n  <span class="hljs-attr">bootstrapVue</span>: {\n    <span class="hljs-attr">bootstrapCSS</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">// Or `css: false`</span>\n    <span class="hljs-attr">bootstrapVueCSS</span>: <span class="hljs-literal">false</span> <span class="hljs-comment">// Or `bvCSS: false`</span>\n  }\n}</pre></div><p>BootstrapVue&#39;s custom SCSS relies on Bootstrap SCSS variables and mixins, and any variable overrides\nyou may have set. You can include Bootstrap and BootstrapVue SCSS in your project&#39;s custom SCSS\nfile:</p>\n<div class="bd-code"><pre class="hljs scss p-2" translate="no" data-filename="custom.scss">\n<span class="hljs-comment">// Custom Bootstrap variable overrides go first</span>\n<span class="hljs-variable">$grid-breakpoints</span>: (\n  xs: <span class="hljs-number">0</span>,\n  sm: <span class="hljs-number">480px</span>,\n  md: <span class="hljs-number">640px</span>,\n  lg: <span class="hljs-number">992px</span>,\n  xl: <span class="hljs-number">1300px</span>\n);\n<span class="hljs-variable">$enable-rounded</span>: false;\n\n<span class="hljs-comment">// Then include the following</span>\n<span class="hljs-keyword">@import</span> <span class="hljs-string">\'bootstrap/scss/bootstrap.scss\'</span>;\n<span class="hljs-keyword">@import</span> <span class="hljs-string">\'bootstrap-vue/src/index.scss\'</span>;\n\n<span class="hljs-comment">// And define any of your custom or additional CSS/SCSS here,</span>\n<span class="hljs-comment">// or via an @import</span></pre></div><p>In your app main entry point include the <em>single</em> custom SCSS file (when using <code class="text-nowrap" translate="no">sass-loader</code>):</p>\n<div class="bd-code"><pre class="hljs js p-2" translate="no" data-filename="app.js"><span class="hljs-keyword">import</span> <span class="hljs-string">\'custom.scss\'</span></pre></div><h3 id="transformasseturls-with-nuxtjs" class="bv-no-focus-ring"><span class="bd-content-title"><code class="text-nowrap" translate="no">transformAssetUrls</code> with Nuxt.js<a class="anchorjs-link" href="#transformasseturls-with-nuxtjs" aria-labelledby="transformasseturls-with-nuxtjs"></a></span></h3>\n<p>The BootstrapVue Nuxt plugin module will automatically add in the BootstrapVue specific\n<a href="/docs/reference/images" class="font-weight-bold"><code class="text-nowrap" translate="no">transformAssetUrls</code></a> image <code class="text-nowrap" translate="no">src</code> prop configuration for you.</p>\n<h3 id="tree-shaking-with-nuxtjs" class="bv-no-focus-ring"><span class="bd-content-title">Tree shaking with Nuxt.js<a class="anchorjs-link" href="#tree-shaking-with-nuxtjs" aria-labelledby="tree-shaking-with-nuxtjs"></a></span></h3>\n<p>If you wish to reduce your production bundle size because you only use a subset of the available\nBootstrapVue plugins, you can configure the list of BootstrapVue <code class="text-nowrap" translate="no">componentPlugins</code> or\n<code class="text-nowrap" translate="no">directivePlugins</code> you want to globally install in your Nuxt.js project. Note tree shaking only\napplies to the JavaScript code and not CSS/SCSS.</p>\n<div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-attr">modules</span>: [<span class="hljs-string">\'bootstrap-vue/nuxt\'</span>],\n  <span class="hljs-attr">bootstrapVue</span>: {\n    <span class="hljs-attr">componentPlugins</span>: [\n      <span class="hljs-string">\'LayoutPlugin\'</span>,\n      <span class="hljs-string">\'FormPlugin\'</span>,\n      <span class="hljs-string">\'FormCheckboxPlugin\'</span>,\n      <span class="hljs-string">\'FormInputPlugin\'</span>,\n      <span class="hljs-string">\'FormRadioPlugin\'</span>,\n      <span class="hljs-string">\'ToastPlugin\'</span>,\n      <span class="hljs-string">\'ModalPlugin\'</span>\n    ],\n    <span class="hljs-attr">directivePlugins</span>: [<span class="hljs-string">\'VBPopoverPlugin\'</span>, <span class="hljs-string">\'VBTooltipPlugin\'</span>, <span class="hljs-string">\'VBScrollspyPlugin\'</span>]\n  }\n}</pre></div><p>There are two additional helper plugins for providing the <code class="text-nowrap" translate="no">$bvModal</code> and <code class="text-nowrap" translate="no">$bvToast</code> injections (if\nyou are not using the <code class="text-nowrap" translate="no">ModalPlugin</code> or <code class="text-nowrap" translate="no">ToastPlugin</code> plugins) that are available in the\n<code class="text-nowrap" translate="no">componentPlugins</code> option:</p>\n<ul>\n<li><code class="text-nowrap" translate="no">BVModalPlugin</code> - provides the injection <code class="text-nowrap" translate="no">$bvModal</code> for generating\n<a href="/docs/components/modal#modal-message-boxes" class="font-weight-bold">message boxes</a>.</li>\n<li><code class="text-nowrap" translate="no">BVToastPlugin</code> - provides the injection <code class="text-nowrap" translate="no">$bvToast</code> for generating\n<a href="/docs/components/toast#toasts-on-demand" class="font-weight-bold">on demand toasts</a>.</li>\n</ul>\n<p>You can also optionally import individual components and/or directives, by configuring the list of\nBootstrapVue <code class="text-nowrap" translate="no">components</code> or <code class="text-nowrap" translate="no">directives</code> you want to globally install in your Nuxt.js project.</p>\n<div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-attr">modules</span>: [<span class="hljs-string">\'bootstrap-vue/nuxt\'</span>],\n  <span class="hljs-attr">bootstrapVue</span>: {\n    <span class="hljs-attr">components</span>: [<span class="hljs-string">\'BContainer\'</span>, <span class="hljs-string">\'BRow\'</span>, <span class="hljs-string">\'BCol\'</span>, <span class="hljs-string">\'BFormInput\'</span>, <span class="hljs-string">\'BButton\'</span>, <span class="hljs-string">\'BTable\'</span>, <span class="hljs-string">\'BModal\'</span>],\n    <span class="hljs-attr">directives</span>: [<span class="hljs-string">\'VBModal\'</span>, <span class="hljs-string">\'VBPopover\'</span>, <span class="hljs-string">\'VBTooltip\'</span>, <span class="hljs-string">\'VBScrollspy\'</span>]\n  }\n}</pre></div><p>Feel free to mix and match plugin imports with individual component and directive imports.</p>\n<p>Refer to the reference section at the bottom of each of the <a href="/docs/components" class="font-weight-bold">component</a> and\n<a href="/docs/directives" class="font-weight-bold">directive</a> docs for details on the plugin names available (and which components\nand directives are included in each plugin) and component and/or directive import names.</p>\n<p>Note that when importing individual components, any component aliases will <strong>not</strong> be available.</p>\n<div class="alert alert-info">\n  <p class="mb-0">\n    <b>Note:</b> Optimal tree shaking only works when your Nuxt.js app is in <code class="notranslate" translate="no">production</code>\n    mode. You may notice larger bundle sizes when not in <code class="notranslate" translate="no">production</code> mode (i.e.\n    <code class="notranslate" translate="no">dev</code> mode).\n  </p>\n</div>\n\n<p>If you want to import individual BootstrapVue components into <em>specific</em> pages and/or components of\nyour Nuxt app, you may want to bypass the Nuxt.js module and, instead, follow the\n<a href="#using-module-bundlers" class="font-weight-bold">module bundlers</a> and\n<a href="#tree-shaking-with-module-bundlers" class="font-weight-bold">Tree shaking with module bundlers</a> sections above.\nAlternatively you may want to to just import a few plugins (such as <code class="text-nowrap" translate="no">LayoutPlugin</code>) in your Nuxt.js\nmodule config, and then import additional components or plugins in the pages where needed.</p>\n<h3 id="icons" class="bv-no-focus-ring"><span class="bd-content-title">Icons<a class="anchorjs-link" href="#icons" aria-labelledby="icons"></a></span></h3>\n<p>The <a href="/docs/icons" class="font-weight-bold">icons plugin</a> is <strong>not</strong> automatically installed when using the Nuxt.js module.\nYou must either explicitly enable the <code class="text-nowrap" translate="no">IconsPlugin</code>, or specify which icon components you wish to\nimport.</p>\n<p>All Icons:</p>\n<div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-attr">modules</span>: [<span class="hljs-string">\'bootstrap-vue/nuxt\'</span>],\n  <span class="hljs-attr">bootstrapVue</span>: {\n    <span class="hljs-attr">icons</span>: <span class="hljs-literal">true</span> <span class="hljs-comment">// Install the IconsPlugin (in addition to BootStrapVue plugin</span>\n  }\n}</pre></div><p>Specific icons:</p>\n<div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-attr">modules</span>: [<span class="hljs-string">\'bootstrap-vue/nuxt\'</span>],\n  <span class="hljs-attr">bootstrapVue</span>: {\n    <span class="hljs-comment">// Add the desired icon components to the `components` array</span>\n    <span class="hljs-attr">components</span>: [<span class="hljs-string">\'BIcon\'</span>, <span class="hljs-string">\'BIconAlertFill\'</span>, <span class="hljs-string">\'BIconCalendar\'</span>, <span class="hljs-string">\'BIconGears\'</span>]\n  }\n}</pre></div><p>Icons plugin:</p>\n<div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-attr">modules</span>: [<span class="hljs-string">\'bootstrap-vue/nuxt\'</span>],\n  <span class="hljs-attr">bootstrapVue</span>: {\n    <span class="hljs-comment">// Add the icon plugin to the `componentsPlugins` array</span>\n    <span class="hljs-attr">componentPlugins</span>: [<span class="hljs-string">\'IconsPlugin\'</span>]\n  }\n}</pre></div><h3 id="passing-custom-bootstrapvue-config-with-nuxtjs" class="bv-no-focus-ring"><span class="bd-content-title">Passing custom BootstrapVue config with Nuxt.js<a class="anchorjs-link" href="#passing-custom-bootstrapvue-config-with-nuxtjs" aria-labelledby="passing-custom-bootstrapvue-config-with-nuxtjs"></a></span></h3>\n<p>If you need to pass a custom\n<a href="/docs/misc/settings#default-bootstrapvue-configuration" class="font-weight-bold">BootstrapVue configuration</a>, you may do so\nby setting the <code class="text-nowrap" translate="no">config</code> property in your <code class="text-nowrap" translate="no">nuxt.config.js</code>:</p>\n<div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-attr">modules</span>: [<span class="hljs-string">\'bootstrap-vue/nuxt\'</span>],\n  <span class="hljs-attr">bootstrapVue</span>: {\n    <span class="hljs-attr">config</span>: {\n      <span class="hljs-comment">// Custom config options here</span>\n    }\n  }\n}</pre></div><h3 id="using-pretranspiled-version-of-bootstrapvue-for-nuxtjs" class="bv-no-focus-ring"><span class="bd-content-title">Using pretranspiled version of BootstrapVue for Nuxt.js<a class="anchorjs-link" href="#using-pretranspiled-version-of-bootstrapvue-for-nuxtjs" aria-labelledby="using-pretranspiled-version-of-bootstrapvue-for-nuxtjs"></a></span></h3>\n<p>Nuxt.js module uses the pre-transpiled versions of BootstrapVue for faster development builds and\nthe source (<code class="text-nowrap" translate="no">src/</code>) of BootstrapVue for higher quality and smaller production builds.</p>\n<p>You can override this option using <code class="text-nowrap" translate="no">usePretranspiled</code> option. Setting to <code class="text-nowrap" translate="no">true</code> always uses the\npre-transpiled versions, while setting it to <code class="text-nowrap" translate="no">false</code> will always use <code class="text-nowrap" translate="no">src/</code>. By default\n<code class="text-nowrap" translate="no">usePretranspiled</code> is enabled in development mode only. You should not need to use this option as\nthe default is most optimal for performance.</p>\n<h2 id="vue-cli-3" class="bv-no-focus-ring"><span class="bd-content-title">Vue CLI 3<a class="anchorjs-link" href="#vue-cli-3" aria-labelledby="vue-cli-3"></a></span></h2>\n<p>Unlike V2, Vue CLI 3 doesn&#39;t use templates.</p>\n<p>Create a new project in the directory <code class="text-nowrap" translate="no">my-project</code>:</p>\n<div class="bd-code"><pre class="hljs bash p-2" translate="no">npx @vue/cli create my-project</pre></div><p>Enter the <code class="text-nowrap" translate="no">my-project</code> directory and install <code class="text-nowrap" translate="no">bootstrap-vue</code>:</p>\n<div class="bd-code"><pre class="hljs bash p-2" translate="no">npm install bootstrap-vue</pre></div><p>Under the hood, Vue CLI uses webpack, so we can register the BootstrapVue plugin as with the webpack\ninstructions.</p>\n<div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">\'vue\'</span>\n<span class="hljs-keyword">import</span> { BootstrapVue, BootstrapVueIcons } <span class="hljs-keyword">from</span> <span class="hljs-string">\'bootstrap-vue\'</span>\n\n<span class="hljs-keyword">import</span> <span class="hljs-string">\'bootstrap/dist/css/bootstrap.css\'</span>\n<span class="hljs-keyword">import</span> <span class="hljs-string">\'bootstrap-vue/dist/bootstrap-vue.css\'</span>\n\nVue.use(BootstrapVue)\nVue.use(BootstrapVueIcons)</pre></div><p>For additional configuration for Vue CLI 3 for using project relative paths for image src props on\nvarious BootstrapVue components, refer to the Vue CLI 3 section of the\n<a href="/docs/reference/images#vue-cli-3-support" class="font-weight-bold">Image Src Resolving</a> reference page.</p>\n<h3 id="vue-cli-3-plugin" class="bv-no-focus-ring"><span class="bd-content-title">Vue CLI 3 plugin<a class="anchorjs-link" href="#vue-cli-3-plugin" aria-labelledby="vue-cli-3-plugin"></a></span></h3>\n<p>As an alternative, you can use the\n<a href="https://github.com/GregYankovoy/vue-cli-plugin-bootstrap-vue" target="_blank" rel="noopener">Bootstrap-Vue Vue CLI 3 plugin</a> to\nhelp you configure your app.</p>\n<div class="bd-code"><pre class="hljs bash p-2" translate="no">vue create my-app\n<span class="hljs-built_in">cd</span> my-app\nvue add bootstrap-vue</pre></div><p>This will create a new app with basic BootstrapVue settings to get your project started.</p>\n<p>In the future this plugin will provide options for more advanced configurations and templates.</p>\n<p>For Icons support, you may need to edit the resultant config file.</p>\n<h2 id="browser" class="bv-no-focus-ring"><span class="bd-content-title">Browser<a class="anchorjs-link" href="#browser" aria-labelledby="browser"></a></span></h2>\n<p>If not using a module bundler or compile process, you can instead add the Bootstrap and BootstrapVue\nCSS URLs in your HTML <code class="text-nowrap" translate="no">&lt;head&gt;</code> section, followed by the required JavaScript files.</p>\n<p>When supporting older browsers (see <a href="#browser-support" class="font-weight-bold">Browser Support</a> below), you will need to\ninclude a polyfill for handling modern JavaScript features before loading Vue and BootstrapVue\nJavaScript files.</p>\n<div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-comment">&lt;!-- Add this to &lt;head&gt; --&gt;</span>\n\n<span class="hljs-comment">&lt;!-- Load required Bootstrap and BootstrapVue CSS --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/css"</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"stylesheet"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"//unpkg.com/bootstrap/dist/css/bootstrap.min.css"</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/css"</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"stylesheet"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"//unpkg.com/bootstrap-vue@latest/dist/bootstrap-vue.min.css"</span> /&gt;</span>\n\n<span class="hljs-comment">&lt;!-- Load polyfills to support older browsers --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"//polyfill.io/v3/polyfill.min.js?features=es2015%2CIntersectionObserver"</span> <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">"anonymous"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- Load Vue followed by BootstrapVue --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"//unpkg.com/vue@latest/dist/vue.min.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"//unpkg.com/bootstrap-vue@latest/dist/bootstrap-vue.min.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- Load the following for BootstrapVueIcons support --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"//unpkg.com/bootstrap-vue@latest/dist/bootstrap-vue-icons.min.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></pre></div><h2 id="build-variants" class="bv-no-focus-ring"><span class="bd-content-title">Build variants<a class="anchorjs-link" href="#build-variants" aria-labelledby="build-variants"></a></span></h2>\n<p>Choosing the best variant for your build environment / packager helps reduce bundle sizes. If your\nbundler supports esm modules, it will automatically prefer it over commonjs.</p>\n<div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table">\n<thead class="thead-default">\n<tr>\n<th>Variant</th>\n<th>Environments</th>\n<th>Tree Shake</th>\n<th>Package path</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>ESM module</strong></td>\n<td>webpack 2+ / rollup.js</td>\n<td>Yes</td>\n<td><code class="text-nowrap" translate="no">esm/index.js</code></td>\n</tr>\n<tr>\n<td>ESM bundle</td>\n<td>webpack 2+ / rollup.js</td>\n<td>Yes</td>\n<td><code class="text-nowrap" translate="no">dist/bootstrap-vue.esm.js</code></td>\n</tr>\n<tr>\n<td>commonjs2</td>\n<td>webpack 1 / ...</td>\n<td>No</td>\n<td><code class="text-nowrap" translate="no">dist/bootstrap-vue.common.js</code> <em>or</em> <code class="text-nowrap" translate="no">dist/bootstrap-vue.common.min.js</code></td>\n</tr>\n<tr>\n<td>UMD</td>\n<td>Browser</td>\n<td>No</td>\n<td><code class="text-nowrap" translate="no">dist/bootstrap-vue.js</code> <em>or</em> <code class="text-nowrap" translate="no">dist/bootstrap-vue.min.js</code></td>\n</tr>\n</tbody></table>\n</div><p>Note the UMD (browser) variant <strong>does not</strong> include BootstrapVue <a href="/docs/icons" class="font-weight-bold">icons</a> support. All\nother variants listed above <em>do include</em> the <code class="text-nowrap" translate="no">BootstrapVueIcons</code> (<code class="text-nowrap" translate="no">IconsPlugin</code>) plugin (note the\nicons plugin is not automatically installed, and must explicitly installed via <code class="text-nowrap" translate="no">Vue.use()</code>. See the\n<a href="/docs/icons#usage" class="font-weight-bold">Icons usage</a> section for more details.</p>\n<p>Icons only modules:</p>\n<div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table">\n<thead class="thead-default">\n<tr>\n<th>Variant</th>\n<th>Environments</th>\n<th>Tree Shake</th>\n<th>Package path</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>ESM bundle</strong></td>\n<td>webpack 2+ / rollup.js</td>\n<td>Yes</td>\n<td><code class="text-nowrap" translate="no">dist/bootstrap-vue-icons.esm.js</code></td>\n</tr>\n<tr>\n<td>commonjs2</td>\n<td>webpack 1 / ...</td>\n<td>No</td>\n<td><code class="text-nowrap" translate="no">dist/bootstrap-vue-icons.common.js</code> <em>or</em> <code class="text-nowrap" translate="no">dist/bootstrap-vue-icons.common.min.js</code></td>\n</tr>\n<tr>\n<td>UMD</td>\n<td>Browser</td>\n<td>No</td>\n<td><code class="text-nowrap" translate="no">dist/bootstrap-vue-icons.js</code> <em>or</em> <code class="text-nowrap" translate="no">dist/bootstrap-vue-icons.min.js</code></td>\n</tr>\n</tbody></table>\n</div><p>The <code class="text-nowrap" translate="no">ESM</code> module build and the <code class="text-nowrap" translate="no">ESM</code> bundles (single file) are\n<a href="#tree-shaking-with-module-bundlers" class="font-weight-bold">tree-shakeable</a>, but you will experience smaller final bundle\nsizes when using the <code class="text-nowrap" translate="no">ESM</code> module <em>vs.</em> the <code class="text-nowrap" translate="no">ESM</code> bundle.</p>\n<p>All of the build variants listed above have been pre-transpiled targeting the\n<a href="https://github.com/bootstrap-vue/bootstrap-vue/blob/master/.browserslistrc" target="_blank" rel="noopener">browsers</a> supported by\nBootstrapVue. However, if you are targeting only modern browsers, you may want to import\n<code class="text-nowrap" translate="no">BootstrapVue</code> from <code class="text-nowrap" translate="no">src/index.js</code>, (by aliasing <code class="text-nowrap" translate="no">bootstrap-vue</code> to <code class="text-nowrap" translate="no">bootstrap-vue/src/index.js</code>)\nand whitelisting <code class="text-nowrap" translate="no">bootstrap-vue/src</code> for transpilation via your own project. This can potentially\nreduce final project bundle sizes. See the\n<a href="#using-bootstrapvue-source-code-for-smaller-bundles" class="font-weight-bold">Using BootstrapVue source code for smaller bundles</a>\nsection above for more details.</p>\n<h3 id="dependencies" class="bv-no-focus-ring"><span class="bd-content-title">Dependencies<a class="anchorjs-link" href="#dependencies" aria-labelledby="dependencies"></a></span></h3>\n<p>BootstrapVue relies on <code class="text-nowrap" translate="no">Popper.js</code> (for Tooltip, Popover, and Dropdown positioning), <code class="text-nowrap" translate="no">PortalVue</code>\n(for toasts) and\n<a href="https://github.com/alexsasharegan/vue-functional-data-merge" target="_blank" rel="noopener"><code class="text-nowrap" translate="no">vue-functional-data-merge</code></a> (used by\nour functional components). These three dependencies are included in the BootstrapVue <code class="text-nowrap" translate="no">UMD</code> bundle,\nwhile the UMD (browser) icons only bundle includes <code class="text-nowrap" translate="no">vue-functional-data-merge</code>.</p>\n<h2 id="migrating-a-project-already-using-bootstrap" class="bv-no-focus-ring"><span class="bd-content-title">Migrating a project already using Bootstrap<a class="anchorjs-link" href="#migrating-a-project-already-using-bootstrap" aria-labelledby="migrating-a-project-already-using-bootstrap"></a></span></h2>\n<p>If you&#39;ve already been using Bootstrap v{{bootstrapVersionMajor}}, there are a couple adjustments\nyou may need to make to your project:</p>\n<ul>\n<li>Remove the <code class="text-nowrap" translate="no">bootstrap.js</code> file from your page scripts or build pipeline</li>\n<li>If Bootstrap is the only thing relying on <code class="text-nowrap" translate="no">jQuery</code>, you can safely remove it — BootstrapVue <strong>does\nnot</strong> depend on <code class="text-nowrap" translate="no">jQuery</code></li>\n<li>Convert your native Bootstrap HTML markup into the simplified BootstrapVue custom component markup</li>\n<li>Start by converting only the interactive controls that require Bootstrap&#39;s javascript first.</li>\n</ul>\n<h2 id="browser-support" class="bv-no-focus-ring"><span class="bd-content-title">Browser support<a class="anchorjs-link" href="#browser-support" aria-labelledby="browser-support"></a></span></h2>\n<h3 id="css" class="bv-no-focus-ring"><span class="bd-content-title">CSS<a class="anchorjs-link" href="#css" aria-labelledby="css"></a></span></h3>\n<p>BootstrapVue is to be used with Bootstrap v{{bootstrapVersionMinor}} CSS/SCSS. Please see\n<b-link :href="hrefBootstrapBrowserDevices" target="_blank">Browsers and devices</b-link> for more\ninformation about browsers currently supported by Bootstrap v{{bootstrapVersionMajor}}.</p>\n<h3 id="js" class="bv-no-focus-ring"><span class="bd-content-title">JS<a class="anchorjs-link" href="#js" aria-labelledby="js"></a></span></h3>\n<p>BootstrapVue is written in Vue.js! So it is up to your project and bundler which browsers are\nsupported.</p>\n<p>Following features and APIs are used by BootstrapVue:</p>\n<ul>\n<li>ES6 (e.g. <code class="text-nowrap" translate="no">Array.from()</code>, <code class="text-nowrap" translate="no">Array.isArray()</code>, <code class="text-nowrap" translate="no">Object.assign()</code>, <code class="text-nowrap" translate="no">Object.is()</code>, etc.)</li>\n<li><code class="text-nowrap" translate="no">Promise</code></li>\n<li><code class="text-nowrap" translate="no">MutationObserver</code></li>\n<li><code class="text-nowrap" translate="no">IntersectionObserver</code> (optional)</li>\n</ul>\n<p>If you want to support older IE, Android, and iOS device web browsers, you may want to use\n<a href="https://github.com/zloirock/core-js" target="_blank" rel="noopener">core-js</a> and\n<a href="https://www.npmjs.com/package/intersection-observer" target="_blank" rel="noopener">intersection-observer</a>:</p>\n<div class="bd-code"><pre class="hljs bash p-2" translate="no">npm install core-js regenerator-runtime intersection-observer</pre></div><p>Then import the polyfills in your app main entry point:</p>\n\x3c!-- eslint-disable no-unused-vars --\x3e\n\n<div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-keyword">import</span> <span class="hljs-string">\'core-js/stable\'</span>\n<span class="hljs-keyword">import</span> <span class="hljs-string">\'regenerator-runtime/runtime\'</span>\n<span class="hljs-keyword">import</span> <span class="hljs-string">\'intersection-observer\'</span> <span class="hljs-comment">// Optional</span>\n<span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">\'vue\'</span>\n<span class="hljs-keyword">import</span> BootstrapVue <span class="hljs-keyword">from</span> <span class="hljs-string">\'bootstrap-vue\'</span></pre></div><p>If using deprecated <a href="https://babeljs.io/docs/en/babel-polyfill/" target="_blank" rel="noopener">@babel/polyfill</a>:</p>\n<div class="bd-code"><pre class="hljs bash p-2" translate="no">npm install @babel/polyfill intersection-observer</pre></div><p>Then import the polyfills in your app main entry point:</p>\n\x3c!-- eslint-disable no-unused-vars --\x3e\n\n<div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-keyword">import</span> <span class="hljs-string">\'@babel/polyfill\'</span>\n<span class="hljs-keyword">import</span> <span class="hljs-string">\'intersection-observer\'</span> <span class="hljs-comment">// Optional</span>\n<span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">\'vue\'</span>\n<span class="hljs-keyword">import</span> BootstrapVue <span class="hljs-keyword">from</span> <span class="hljs-string">\'bootstrap-vue\'</span></pre></div><p>Alternatively, use <a href="https://polyfill.io/" target="_blank" rel="noopener">Polyfill.io</a> to dynamically serve browser specific\npolyfills via <code class="text-nowrap" translate="no">&lt;script&gt;</code> tags in the HTML <code class="text-nowrap" translate="no">&lt;head&gt;</code> section. See the <a href="#browser" class="font-weight-bold">Browser</a> section\nabove for an example.</p>\n<h2 id="tooling-support" class="bv-no-focus-ring"><span class="bd-content-title">Tooling support<a class="anchorjs-link" href="#tooling-support" aria-labelledby="tooling-support"></a></span></h2>\n<p>BootstrapVue provides additional helper files for auto completion in popular IDE editors.</p>\n<h3 id="vs-code--vetur" class="bv-no-focus-ring"><span class="bd-content-title">VS Code + Vetur<a class="anchorjs-link" href="#vs-code--vetur" aria-labelledby="vs-code--vetur"></a></span></h3>\n<p>If you are using <a href="https://code.visualstudio.com/" target="_blank" rel="noopener">VS Code</a> as your text editor, BootstrapVue has\nintellisense autocompletion for component attributes and directives available via the\n<code class="text-nowrap" translate="no">dist/vetur-tags.json</code> and <code class="text-nowrap" translate="no">dist/vetur-attributes.json</code> files.</p>\n<h3 id="jetbrains-webstorm-and-compatible" class="bv-no-focus-ring"><span class="bd-content-title">JetBrains WebStorm (and compatible)<a class="anchorjs-link" href="#jetbrains-webstorm-and-compatible" aria-labelledby="jetbrains-webstorm-and-compatible"></a></span></h3>\n<p>For <a href="https://www.jetbrains.com/webstorm/" target="_blank" rel="noopener">WebStorm</a> editor (or web-types compatible), BootstrapVue\nprovides the file <code class="text-nowrap" translate="no">dist/web-types.json</code> for component attribute and directive auto-completion.</p>\n'},390:function(n,e,t){"use strict";t.r(e);t(17);var o=t(250),l=t(251),r=t(252),c=t(44),d=t(38),h=t(274),m=t.n(h),f=/^(\d+\.\d+)(\..+)$/,j=/^(\d+)(\.\d+\..+)$/;e.default={name:"BDVDocs",layout:"docs",template:"<Main><Section>".concat(m.a,"</Section></Main>"),components:{Main:o.a,Section:l.a},mixins:[r.a],data:()=>({bootstrapVersion:c.b,bootstrapVersionMinor:c.b.replace(f,"$1"),bootstrapVersionMajor:c.b.replace(j,"$1"),defaultConfig:c.e,nuxtVersion:c.j,nuxtVersionMinor:c.j.replace(f,"$1"),nuxtVersionMajor:c.j.replace(j,"$1"),portalVueVersion:c.k,portalVueVersionMinor:c.k.replace(f,"$1"),portalVueVersionMajor:c.k.replace(j,"$1"),readme:m(),version:d.d,vueVersion:c.m,vueVersionMinor:c.m.replace(f,"$1"),vueVersionMajor:c.m.replace(j,"$1")}),computed:{hrefBootstrapBrowserDevices(){var n=this.bootstrapVersionMinor;return"//getbootstrap.com/docs/".concat(n,"/getting-started/browsers-devices")},meta:()=>({title:"Getting started",description:"Get started with BootstrapVue, based on the world's most popular framework - Bootstrap v4, for building responsive, mobile-first sites using Vue.js"})}}}}]);