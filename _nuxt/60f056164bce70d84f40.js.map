{"version":3,"sources":["webpack:///./src/components/form-select/README.md"],"names":["module","exports"],"mappings":"4EAAAA,EAAAC,QAAA","file":"60f056164bce70d84f40.js","sourcesContent":["module.exports = \"<h1 id=\\\"form-select\\\"><span class=\\\"bd-content-title\\\">Form Select</span></h1>\\n<p class=\\\"bd-lead\\\">Bootstrap custom <code>&lt;select&gt;</code> using custom styles. Optionally specify options based on an array,\\narray of objects, or an object.</p>\\n<p>Generate your select options by passing an array or object to the <code>options</code> props:</p>\\n<pre class=\\\"hljs html text-monospace p-2\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-form-select</span> <span class=\\\"hljs-attr\\\">v-model</span>=<span class=\\\"hljs-string\\\">\\\"selected\\\"</span> <span class=\\\"hljs-attr\\\">:options</span>=<span class=\\\"hljs-string\\\">\\\"options\\\"</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-form-select</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-form-select</span> <span class=\\\"hljs-attr\\\">v-model</span>=<span class=\\\"hljs-string\\\">\\\"selected\\\"</span> <span class=\\\"hljs-attr\\\">:options</span>=<span class=\\\"hljs-string\\\">\\\"options\\\"</span> <span class=\\\"hljs-attr\\\">size</span>=<span class=\\\"hljs-string\\\">\\\"sm\\\"</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"mt-3\\\"</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-form-select</span>&gt;</span>\\n\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"mt-3\\\"</span>&gt;</span>Selected: <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">strong</span>&gt;</span>{{ selected }}<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">strong</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span>&gt;</span><span class=\\\"javascript\\\">\\n  <span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">default</span> {\\n    data() {\\n      <span class=\\\"hljs-keyword\\\">return</span> {\\n        <span class=\\\"hljs-attr\\\">selected</span>: <span class=\\\"hljs-literal\\\">null</span>,\\n        <span class=\\\"hljs-attr\\\">options</span>: [\\n          { <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-literal\\\">null</span>, <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'Please select an option'</span> },\\n          { <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'a'</span>, <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'This is First option'</span> },\\n          { <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'b'</span>, <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'Selected Option'</span> },\\n          { <span class=\\\"hljs-attr\\\">value</span>: { <span class=\\\"hljs-attr\\\">C</span>: <span class=\\\"hljs-string\\\">'3PO'</span> }, <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'This is an option with object value'</span> },\\n          { <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'d'</span>, <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'This one is disabled'</span>, <span class=\\\"hljs-attr\\\">disabled</span>: <span class=\\\"hljs-literal\\\">true</span> }\\n        ]\\n      }\\n    }\\n  }\\n</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span>\\n\\n<span class=\\\"hljs-comment\\\">&lt;!-- b-form-select-options.vue --&gt;</span></pre><p>Or manually provide your options and optgroups:</p>\\n<pre class=\\\"hljs html text-monospace p-2\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-form-select</span> <span class=\\\"hljs-attr\\\">v-model</span>=<span class=\\\"hljs-string\\\">\\\"selected\\\"</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"mb-3\\\"</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">option</span> <span class=\\\"hljs-attr\\\">:value</span>=<span class=\\\"hljs-string\\\">\\\"null\\\"</span>&gt;</span>Please select an option<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">option</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">option</span> <span class=\\\"hljs-attr\\\">value</span>=<span class=\\\"hljs-string\\\">\\\"a\\\"</span>&gt;</span>Option A<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">option</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">option</span> <span class=\\\"hljs-attr\\\">value</span>=<span class=\\\"hljs-string\\\">\\\"b\\\"</span> <span class=\\\"hljs-attr\\\">disabled</span>&gt;</span>Option B (disabled)<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">option</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">optgroup</span> <span class=\\\"hljs-attr\\\">label</span>=<span class=\\\"hljs-string\\\">\\\"Grouped Options\\\"</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">option</span> <span class=\\\"hljs-attr\\\">:value</span>=<span class=\\\"hljs-string\\\">\\\"{ C: '3PO' }\\\"</span>&gt;</span>Option with object value<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">option</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">option</span> <span class=\\\"hljs-attr\\\">:value</span>=<span class=\\\"hljs-string\\\">\\\"{ R: '2D2' }\\\"</span>&gt;</span>Another option with object value<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">option</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">optgroup</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-form-select</span>&gt;</span>\\n\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"mt-2\\\"</span>&gt;</span>Selected: <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">strong</span>&gt;</span>{{ selected }}<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">strong</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span>&gt;</span><span class=\\\"javascript\\\">\\n  <span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">default</span> {\\n    data() {\\n      <span class=\\\"hljs-keyword\\\">return</span> {\\n        <span class=\\\"hljs-attr\\\">selected</span>: <span class=\\\"hljs-literal\\\">null</span>\\n      }\\n    }\\n  }\\n</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span>\\n\\n<span class=\\\"hljs-comment\\\">&lt;!-- b-form-select-manual.vue --&gt;</span></pre><p>Feel free to mix the <code>options</code> prop with <code>&lt;option&gt;</code> and <code>&lt;optgroup&gt;</code>. Manually placed options and\\noptgroups will appear <em>below</em> the options generated via the <code>options</code> prop. To place manual options\\nand optgroups <em>above</em> the options specified by the <code>options</code> prop, use the named slot <code>first</code>.</p>\\n<pre class=\\\"hljs html text-monospace p-2\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-form-select</span> <span class=\\\"hljs-attr\\\">v-model</span>=<span class=\\\"hljs-string\\\">\\\"selected\\\"</span> <span class=\\\"hljs-attr\\\">:options</span>=<span class=\\\"hljs-string\\\">\\\"options\\\"</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"mb-3\\\"</span>&gt;</span>\\n      <span class=\\\"hljs-comment\\\">&lt;!-- This slot appears above the options from 'options' prop --&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span> <span class=\\\"hljs-attr\\\">slot</span>=<span class=\\\"hljs-string\\\">\\\"first\\\"</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">option</span> <span class=\\\"hljs-attr\\\">:value</span>=<span class=\\\"hljs-string\\\">\\\"null\\\"</span> <span class=\\\"hljs-attr\\\">disabled</span>&gt;</span>-- Please select an option --<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">option</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n\\n      <span class=\\\"hljs-comment\\\">&lt;!-- These options will appear after the ones from 'options' prop --&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">option</span> <span class=\\\"hljs-attr\\\">value</span>=<span class=\\\"hljs-string\\\">\\\"C\\\"</span>&gt;</span>Option C<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">option</span>&gt;</span> <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">option</span> <span class=\\\"hljs-attr\\\">value</span>=<span class=\\\"hljs-string\\\">\\\"D\\\"</span>&gt;</span>Option D<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">option</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-form-select</span>&gt;</span>\\n\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"mt-3\\\"</span>&gt;</span>Selected: <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">strong</span>&gt;</span>{{ selected }}<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">strong</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span>&gt;</span><span class=\\\"javascript\\\">\\n  <span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">default</span> {\\n    data() {\\n      <span class=\\\"hljs-keyword\\\">return</span> {\\n        <span class=\\\"hljs-attr\\\">selected</span>: <span class=\\\"hljs-literal\\\">null</span>,\\n        <span class=\\\"hljs-attr\\\">options</span>: [\\n          { <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'A'</span>, <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'Option A (from options prop)'</span> },\\n          { <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'B'</span>, <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'Option B (from options prop)'</span> }\\n        ]\\n      }\\n    }\\n  }\\n</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span>\\n\\n<span class=\\\"hljs-comment\\\">&lt;!-- b-form-select-both.vue --&gt;</span></pre><h2 id=\\\"options-property\\\"><span class=\\\"bd-content-title\\\">Options property<a class=\\\"anchorjs-link\\\" href=\\\"#options-property\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<p><code>options</code> can be an array of strings or objects, or a key-value object. Available fields:</p>\\n<ul>\\n<li><strong><code>value</code></strong> The selected value which will be set on <code>v-model</code></li>\\n<li><strong><code>disabled</code></strong> Disables item for selection</li>\\n<li><strong><code>text</code></strong> Display text, or <strong><code>html</code></strong> Display basic inline html</li>\\n</ul>\\n<p><code>value</code> can be a string, number, or simple object. Avoid using complex types in values.</p>\\n<p>If both <code>html</code> and <code>text</code> are provided, <code>html</code> will take precedence. Only basic/native HTML is\\nsupported in the <code>html</code> field (components will not work). Note that not all browsers will render\\ninline html (i.e. <code>&lt;i&gt;</code>, <code>&lt;strong&gt;</code>, etc) inside <code>&lt;option&gt;</code> elements of a <code>&lt;select&gt;</code>.</p>\\n<p class=\\\"alert alert-danger\\\">\\n  <strong>Be cautious</strong> of placing user supplied content in the <code>html</code> field,\\n  as it may make you vulnerable to\\n  <a class=\\\"alert-link\\\" href=\\\"https://en.wikipedia.org/wiki/Cross-site_scripting\\\">\\n  <abbr title=\\\"Cross Site Scripting Attacks\\\">XSS attacks</abbr></a>, if you do not first\\n  <a class=\\\"alert-link\\\" href=\\\"https://en.wikipedia.org/wiki/HTML_sanitization\\\">sanitize</a> the\\n  user supplied string.\\n</p>\\n\\n<p>If you want to customize fields (for example using <code>name</code> field for display text) you can easily\\nchange them using <code>text-field</code>, <code>html-field</code>, <code>value-field</code>, and <code>disabled-field</code> props.</p>\\n<h3 id=\\\"array\\\"><span class=\\\"bd-content-title\\\">Array<a class=\\\"anchorjs-link\\\" href=\\\"#array\\\" aria-label=\\\"Anchor\\\"></a></span></h3>\\n<!-- eslint-disable no-unused-vars -->\\n\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-keyword\\\">const</span> options = [<span class=\\\"hljs-string\\\">'A'</span>, <span class=\\\"hljs-string\\\">'B'</span>, <span class=\\\"hljs-string\\\">'C'</span>, { <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'D'</span>, <span class=\\\"hljs-attr\\\">value</span>: { <span class=\\\"hljs-attr\\\">d</span>: <span class=\\\"hljs-number\\\">1</span> }, <span class=\\\"hljs-attr\\\">disabled</span>: <span class=\\\"hljs-literal\\\">true</span> }, <span class=\\\"hljs-string\\\">'E'</span>, <span class=\\\"hljs-string\\\">'F'</span>]</pre><p>If an array entry is a string, it will be used for both the generated <code>value</code> and <code>text</code> fields.</p>\\n<p>You can mix using strings and <a href=\\\"#objects\\\">objects</a> in the array.</p>\\n<p>Internally, BootstrapVue will convert the above array to the following array (the\\n<a href=\\\"#array-of-objects\\\">Array of Objects</a> format:</p>\\n<!-- eslint-disable no-unused-vars -->\\n\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-keyword\\\">const</span> options = [\\n  { <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'A'</span>, <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'A'</span>, <span class=\\\"hljs-attr\\\">disabled</span>: <span class=\\\"hljs-literal\\\">false</span> },\\n  { <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'B'</span>, <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'B'</span>, <span class=\\\"hljs-attr\\\">disabled</span>: <span class=\\\"hljs-literal\\\">false</span> },\\n  { <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'C'</span>, <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'C'</span>, <span class=\\\"hljs-attr\\\">disabled</span>: <span class=\\\"hljs-literal\\\">false</span> },\\n  { <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'D'</span>, <span class=\\\"hljs-attr\\\">value</span>: { <span class=\\\"hljs-attr\\\">d</span>: <span class=\\\"hljs-number\\\">1</span> }, <span class=\\\"hljs-attr\\\">disabled</span>: <span class=\\\"hljs-literal\\\">true</span> },\\n  { <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'E'</span>, <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'E'</span>, <span class=\\\"hljs-attr\\\">disabled</span>: <span class=\\\"hljs-literal\\\">false</span> },\\n  { <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'F'</span>, <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'F'</span>, <span class=\\\"hljs-attr\\\">disabled</span>: <span class=\\\"hljs-literal\\\">false</span> }\\n]</pre><h3 id=\\\"array-of-objects\\\"><span class=\\\"bd-content-title\\\">Array of objects<a class=\\\"anchorjs-link\\\" href=\\\"#array-of-objects\\\" aria-label=\\\"Anchor\\\"></a></span></h3>\\n<!-- eslint-disable no-unused-vars -->\\n\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-keyword\\\">const</span> options = [\\n  { <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'Item 1'</span>, <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'first'</span> },\\n  { <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'Item 2'</span>, <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'second'</span> },\\n  { <span class=\\\"hljs-attr\\\">html</span>: <span class=\\\"hljs-string\\\">'&lt;b&gt;Item&lt;/b&gt; 3'</span>, <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'third'</span>, <span class=\\\"hljs-attr\\\">disabled</span>: <span class=\\\"hljs-literal\\\">true</span> },\\n  { <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'Item 4'</span> },\\n  { <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'Item 5'</span>, <span class=\\\"hljs-attr\\\">value</span>: { <span class=\\\"hljs-attr\\\">foo</span>: <span class=\\\"hljs-string\\\">'bar'</span>, <span class=\\\"hljs-attr\\\">baz</span>: <span class=\\\"hljs-literal\\\">true</span> } }\\n]</pre><p>If <code>value</code> is missing, then <code>text</code> will be used as both the <code>value</code> and <code>text</code> fields. If you use\\nthe <code>html</code> property, you <strong>must</strong> supply a <code>value</code> property.</p>\\n<p>Internally, BootstrapVue will convert the above array to the following array (the\\n<a href=\\\"#array-of-objects\\\">Array of Objects</a> format:</p>\\n<!-- eslint-disable no-unused-vars -->\\n\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-keyword\\\">const</span> options = [\\n  { <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'Item 1'</span>, <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'first'</span>, <span class=\\\"hljs-attr\\\">disabled</span>: <span class=\\\"hljs-literal\\\">false</span> },\\n  { <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'Item 2'</span>, <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'second'</span>, <span class=\\\"hljs-attr\\\">disabled</span>: <span class=\\\"hljs-literal\\\">false</span> },\\n  { <span class=\\\"hljs-attr\\\">html</span>: <span class=\\\"hljs-string\\\">'&lt;b&gt;Item&lt;/b&gt; 3'</span>, <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'third'</span>, <span class=\\\"hljs-attr\\\">disabled</span>: <span class=\\\"hljs-literal\\\">true</span> },\\n  { <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'Item 4'</span>, <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'Item 4'</span>, <span class=\\\"hljs-attr\\\">disabled</span>: <span class=\\\"hljs-literal\\\">false</span> },\\n  { <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'Item 5'</span>, <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'E'</span>, <span class=\\\"hljs-attr\\\">disabled</span>: <span class=\\\"hljs-literal\\\">false</span> },\\n  { <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'F'</span>, <span class=\\\"hljs-attr\\\">value</span>: { <span class=\\\"hljs-attr\\\">foo</span>: <span class=\\\"hljs-string\\\">'bar'</span>, <span class=\\\"hljs-attr\\\">baz</span>: <span class=\\\"hljs-literal\\\">true</span> }, <span class=\\\"hljs-attr\\\">disabled</span>: <span class=\\\"hljs-literal\\\">false</span> }\\n]</pre><h3 id=\\\"object\\\"><span class=\\\"bd-content-title\\\">Object<a class=\\\"anchorjs-link\\\" href=\\\"#object\\\" aria-label=\\\"Anchor\\\"></a></span></h3>\\n<p>Keys are mapped to <code>value</code> and values are mapped to option <code>text</code>.</p>\\n<!-- eslint-disable no-unused-vars -->\\n\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-keyword\\\">const</span> options = {\\n  <span class=\\\"hljs-attr\\\">a</span>: <span class=\\\"hljs-string\\\">'Item A'</span>,\\n  <span class=\\\"hljs-attr\\\">b</span>: <span class=\\\"hljs-string\\\">'Item B'</span>,\\n  <span class=\\\"hljs-attr\\\">c</span>: { <span class=\\\"hljs-attr\\\">html</span>: <span class=\\\"hljs-string\\\">'Item C'</span>, <span class=\\\"hljs-attr\\\">disabled</span>: <span class=\\\"hljs-literal\\\">true</span> },\\n  <span class=\\\"hljs-attr\\\">d</span>: { <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'Item D'</span>, <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'overridden_value'</span> },\\n  <span class=\\\"hljs-attr\\\">e</span>: { <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'Item E'</span>, <span class=\\\"hljs-attr\\\">value</span>: { <span class=\\\"hljs-attr\\\">foo</span>: <span class=\\\"hljs-string\\\">'bar'</span>, <span class=\\\"hljs-attr\\\">baz</span>: <span class=\\\"hljs-literal\\\">true</span> } }\\n}</pre><p>Internally, BootstrapVue will convert the above object to the following array (the\\n<a href=\\\"#array-of-objects\\\">Array of Objects</a> format:</p>\\n<!-- eslint-disable no-unused-vars -->\\n\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-keyword\\\">const</span> options = [\\n  { <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'Item A'</span>, <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'a'</span>, <span class=\\\"hljs-attr\\\">disabled</span>: <span class=\\\"hljs-literal\\\">false</span> },\\n  { <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'Item B'</span>, <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'b'</span>, <span class=\\\"hljs-attr\\\">disabled</span>: <span class=\\\"hljs-literal\\\">false</span> },\\n  { <span class=\\\"hljs-attr\\\">html</span>: <span class=\\\"hljs-string\\\">'Item C'</span>, <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'c'</span>, <span class=\\\"hljs-attr\\\">disabled</span>: <span class=\\\"hljs-literal\\\">false</span> },\\n  { <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'Item D'</span>, <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'overridden_value'</span>, <span class=\\\"hljs-attr\\\">disabled</span>: <span class=\\\"hljs-literal\\\">true</span> },\\n  { <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'E'</span>, <span class=\\\"hljs-attr\\\">value</span>: { <span class=\\\"hljs-attr\\\">foo</span>: <span class=\\\"hljs-string\\\">'bar'</span>, <span class=\\\"hljs-attr\\\">baz</span>: <span class=\\\"hljs-literal\\\">true</span> }, <span class=\\\"hljs-attr\\\">disabled</span>: <span class=\\\"hljs-literal\\\">false</span> }\\n]</pre><p><strong>Note:</strong> When using the <a href=\\\"#object\\\">Object</a> format, the order of the final array is <strong>not</strong>\\nguaranteed. For this reason, it is recommended to use the above array formats.</p>\\n<h2 id=\\\"standard-single-select\\\"><span class=\\\"bd-content-title\\\">Standard (single) select<a class=\\\"anchorjs-link\\\" href=\\\"#standard-single-select\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<p>By default, Bootstrap v4&#39;s custom select styling is applied.</p>\\n<h3 id=\\\"value-in-single-mode\\\"><span class=\\\"bd-content-title\\\">Value in single mode<a class=\\\"anchorjs-link\\\" href=\\\"#value-in-single-mode\\\" aria-label=\\\"Anchor\\\"></a></span></h3>\\n<p>In non <code>multiple</code> mode, <code>&lt;b-form-select&gt;</code> returns the a single <code>value</code> of the currently selected\\noption.</p>\\n<pre class=\\\"hljs html text-monospace p-2\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-form-select</span> <span class=\\\"hljs-attr\\\">v-model</span>=<span class=\\\"hljs-string\\\">\\\"selected\\\"</span> <span class=\\\"hljs-attr\\\">:options</span>=<span class=\\\"hljs-string\\\">\\\"options\\\"</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-form-select</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"mt-3\\\"</span>&gt;</span>Selected: <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">strong</span>&gt;</span>{{ selected }}<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">strong</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span>&gt;</span><span class=\\\"javascript\\\">\\n  <span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">default</span> {\\n    data() {\\n      <span class=\\\"hljs-keyword\\\">return</span> {\\n        <span class=\\\"hljs-attr\\\">selected</span>: <span class=\\\"hljs-literal\\\">null</span>,\\n        <span class=\\\"hljs-attr\\\">options</span>: [\\n          { <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-literal\\\">null</span>, <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'Please select some item'</span> },\\n          { <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'a'</span>, <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'This is First option'</span> },\\n          { <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'b'</span>, <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'Default Selected Option'</span> },\\n          { <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'c'</span>, <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'This is another option'</span> },\\n          { <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'d'</span>, <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'This one is disabled'</span>, <span class=\\\"hljs-attr\\\">disabled</span>: <span class=\\\"hljs-literal\\\">true</span> }\\n        ]\\n      }\\n    }\\n  }\\n</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span>\\n\\n<span class=\\\"hljs-comment\\\">&lt;!-- b-form-select-single.vue --&gt;</span></pre><h3 id=\\\"select-sizing-displayed-rows\\\"><span class=\\\"bd-content-title\\\">Select sizing (displayed rows)<a class=\\\"anchorjs-link\\\" href=\\\"#select-sizing-displayed-rows\\\" aria-label=\\\"Anchor\\\"></a></span></h3>\\n<p>You can use the <code>select-size</code> prop to switch the custom select into a select list-box, rather than a\\ndropdown. Set the <code>select-size</code> prop to a numerical value greater than 1 to control how many rows of\\noptions are visible.</p>\\n<p>Note when <code>select-size</code> is set to a value greater than 1, the Bootstrap v4 custom styling will\\n<strong>not</strong> be applied, unless the <code>multiple</code> prop is also set.</p>\\n<p>Note: not all mobile browsers will show a the select as a list-box.</p>\\n<pre class=\\\"hljs html text-monospace p-2\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-form-select</span> <span class=\\\"hljs-attr\\\">v-model</span>=<span class=\\\"hljs-string\\\">\\\"selected\\\"</span> <span class=\\\"hljs-attr\\\">:options</span>=<span class=\\\"hljs-string\\\">\\\"options\\\"</span> <span class=\\\"hljs-attr\\\">:select-size</span>=<span class=\\\"hljs-string\\\">\\\"4\\\"</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-form-select</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"mt-3\\\"</span>&gt;</span>Selected: <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">strong</span>&gt;</span>{{ selected }}<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">strong</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span>&gt;</span><span class=\\\"javascript\\\">\\n  <span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">default</span> {\\n    data() {\\n      <span class=\\\"hljs-keyword\\\">return</span> {\\n        <span class=\\\"hljs-attr\\\">selected</span>: <span class=\\\"hljs-literal\\\">null</span>,\\n        <span class=\\\"hljs-attr\\\">options</span>: [\\n          { <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-literal\\\">null</span>, <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'Please select some item'</span> },\\n          { <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'a'</span>, <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'This is option a'</span> },\\n          { <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'b'</span>, <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'Default Selected Option b'</span> },\\n          { <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'c'</span>, <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'This is option c'</span> },\\n          { <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'d'</span>, <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'This one is disabled'</span>, <span class=\\\"hljs-attr\\\">disabled</span>: <span class=\\\"hljs-literal\\\">true</span> },\\n          { <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'e'</span>, <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'This is option e'</span> },\\n          { <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'e'</span>, <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'This is option f'</span> }\\n        ]\\n      }\\n    }\\n  }\\n</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span>\\n\\n<span class=\\\"hljs-comment\\\">&lt;!-- b-form-select-size.vue --&gt;</span></pre><h2 id=\\\"multiple-select-support\\\"><span class=\\\"bd-content-title\\\">Multiple select support<a class=\\\"anchorjs-link\\\" href=\\\"#multiple-select-support\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<p>Enable multiple select mode by setting the prop <code>multiple</code>, and control how many rows are displayed\\nin the multiple select list-box by setting <code>select-size</code> to the number of rows to display. The\\ndefault is to let the browser use it&#39;s default (typically 4).</p>\\n<h3 id=\\\"value-in-multiple-mode\\\"><span class=\\\"bd-content-title\\\">Value in multiple mode<a class=\\\"anchorjs-link\\\" href=\\\"#value-in-multiple-mode\\\" aria-label=\\\"Anchor\\\"></a></span></h3>\\n<p>In <code>multiple</code> mode, <code>&lt;b-form-select&gt;</code> always returns an array of option values. You <strong>must</strong> provide\\nan array reference as your <code>v-model</code> when in <code>multiple</code> mode.</p>\\n<pre class=\\\"hljs html text-monospace p-2\\\"><span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">b-form-select</span> <span class=\\\"hljs-attr\\\">v-model</span>=<span class=\\\"hljs-string\\\">\\\"selected\\\"</span> <span class=\\\"hljs-attr\\\">:options</span>=<span class=\\\"hljs-string\\\">\\\"options\\\"</span> <span class=\\\"hljs-attr\\\">multiple</span> <span class=\\\"hljs-attr\\\">:select-size</span>=<span class=\\\"hljs-string\\\">\\\"4\\\"</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">b-form-select</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">\\\"mt-3\\\"</span>&gt;</span>Selected: <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">strong</span>&gt;</span>{{ selected }}<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">strong</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span>&gt;</span><span class=\\\"javascript\\\">\\n  <span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">default</span> {\\n    data() {\\n      <span class=\\\"hljs-keyword\\\">return</span> {\\n        <span class=\\\"hljs-attr\\\">selected</span>: [<span class=\\\"hljs-string\\\">'b'</span>], <span class=\\\"hljs-comment\\\">// Array reference</span>\\n        options: [\\n          { <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'a'</span>, <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'This is First option'</span> },\\n          { <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'b'</span>, <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'Default Selected Option'</span> },\\n          { <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'c'</span>, <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'This is another option'</span> },\\n          { <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'d'</span>, <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'This one is disabled'</span>, <span class=\\\"hljs-attr\\\">disabled</span>: <span class=\\\"hljs-literal\\\">true</span> },\\n          { <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'e'</span>, <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'This is option e'</span> },\\n          { <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'f'</span>, <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'This is option f'</span> },\\n          { <span class=\\\"hljs-attr\\\">value</span>: <span class=\\\"hljs-string\\\">'g'</span>, <span class=\\\"hljs-attr\\\">text</span>: <span class=\\\"hljs-string\\\">'This is option g'</span> }\\n        ]\\n      }\\n    }\\n  }\\n</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span>\\n\\n<span class=\\\"hljs-comment\\\">&lt;!-- b-form-select-multiple-mode.vue --&gt;</span></pre><h2 id=\\\"control-sizing\\\"><span class=\\\"bd-content-title\\\">Control sizing<a class=\\\"anchorjs-link\\\" href=\\\"#control-sizing\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<p>Set the form-control text size using the <code>size</code> prop to <code>sm</code> or <code>lg</code> for small or large\\nrespectively.</p>\\n<p>By default <code>&lt;b-form-select&gt;</code> will occupy the full width of the container that it appears in. To\\ncontrol the select width, place the input inside standard Bootstrap grid column.</p>\\n<h2 id=\\\"autofocus\\\"><span class=\\\"bd-content-title\\\">Autofocus<a class=\\\"anchorjs-link\\\" href=\\\"#autofocus\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<p><span class=\\\"badge badge-info small\\\">NEW in 2.0.0-rc.21</span></p>\\n<p>When the <code>autofocus</code> prop is set on <code>&lt;b-form-select&gt;</code>, the select will be auto-focused when it is\\ninserted into the document or re-activated when inside a Vue <code>&lt;keep-alive&gt;</code> component. Note that\\nthis prop <strong>does not</strong> set the <code>autofocus</code> attribute on the select.</p>\\n<h2 id=\\\"contextual-states\\\"><span class=\\\"bd-content-title\\\">Contextual states<a class=\\\"anchorjs-link\\\" href=\\\"#contextual-states\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<p>Bootstrap includes validation styles for <code>valid</code> and <code>invalid</code> states on most form controls.</p>\\n<p>Generally speaking, you&#39;ll want to use a particular state for specific types of feedback:</p>\\n<ul>\\n<li><code>&#39;invalid&#39;</code> is great for when there&#39;s a blocking or required field. A user must fill in this field\\nproperly to submit the form.</li>\\n<li><code>&#39;valid&#39;</code> is ideal for situations when you have per-field validation throughout a form and want to\\nencourage a user through the rest of the fields.</li>\\n<li><code>null</code> Displays no validation state</li>\\n</ul>\\n<p>To apply one of the contextual states on <code>&lt;b-form-select&gt;</code>, set the <code>state</code> prop to <code>&#39;invalid&#39;</code> (or\\n<code>false</code>), <code>&#39;valid&#39;</code> (or <code>true</code>), or <code>null</code>.</p>\\n<h3 id=\\\"conveying-contextual-validation-state-to-assistive-technologies-and-colorblind-users\\\"><span class=\\\"bd-content-title\\\">Conveying contextual validation state to assistive technologies and colorblind users<a class=\\\"anchorjs-link\\\" href=\\\"#conveying-contextual-validation-state-to-assistive-technologies-and-colorblind-users\\\" aria-label=\\\"Anchor\\\"></a></span></h3>\\n<p>Using these contextual states to denote the state of a form control only provides a visual,\\ncolor-based indication, which will not be conveyed to users of assistive technologies - such as\\nscreen readers - or to colorblind users.</p>\\n<p>Ensure that an alternative indication of state is also provided. For instance, you could include a\\nhint about state in the form control&#39;s <code>&lt;label&gt;</code> text itself, or by providing an additional help\\ntext block (via <code>&lt;b-form-group&gt;</code> or <code>&lt;b-form-feedback&gt;</code>). Specifically for assistive technologies,\\ninvalid form controls can also be assigned an <code>aria-invalid=&quot;true&quot;</code> attribute (see below).</p>\\n<h3 id=\\\"aria-aria-invalid-attribute\\\"><span class=\\\"bd-content-title\\\">ARIA <code>aria-invalid</code> attribute:<a class=\\\"anchorjs-link\\\" href=\\\"#aria-aria-invalid-attribute\\\" aria-label=\\\"Anchor\\\"></a></span></h3>\\n<p>When <code>&lt;b-form-select&gt;</code> has an invalid contextual state (i.e. <code>invalid</code>) you may also want to set the\\n<code>&lt;b-form-select&gt;</code> prop <code>aria-invalid</code> to <code>true</code>.</p>\\n<p>Supported <code>invalid</code> values are:</p>\\n<ul>\\n<li><code>false</code> (default) No errors detected</li>\\n<li><code>true</code> The value has failed validation.</li>\\n</ul>\\n<p>When <code>state</code> is set to <code>invalid</code>, aria-invalid will also be set to true.</p>\\n<h2 id=\\\"non-custom-select\\\"><span class=\\\"bd-content-title\\\">Non custom select<a class=\\\"anchorjs-link\\\" href=\\\"#non-custom-select\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<p>Set the prop <code>plain</code> to have a native browser <code>&lt;select&gt;</code> rendered (although the class\\n<code>.form-control</code> will always be placed on the select).</p>\\n<p>A <code>plain</code> select will always be rendered for non <code>multiple</code> selects which have the <code>select-size</code>\\nprop set to a value greater than 1.</p>\\n<!-- Component reference added automatically from component package.json -->\\n\";"],"sourceRoot":""}