(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{421:function(n,t){n.exports='<h1 id="time" class="bv-no-focus-ring"><span class="bd-content-title">Time</span></h1>\n<p class="bd-lead">BootstrapVue&#39;s custom <code translate="no" class="notranslate text-nowrap">&lt;b-time&gt;</code> component generates a WAI-ARIA compliant time selection widget,\nwhich can be used to control other components, or can be used to create customized time picker\ninputs.</p>\n<p><code translate="no" class="notranslate text-nowrap">&lt;b-time&gt;</code> is WAI-ARIA accessibility compliant, optimized for keyboard control (arrow, page up/down,\nhome, and end keys). Internationalization is also supported, and default&#39;s to the browser&#39;s or\npage&#39;s locale, if no locale(s) are specified.</p>\n<p>If you need a time picker as a custom form control input, use the\n<a href="/docs/components/form-timepicker" class="font-weight-bold"><code translate="no" class="notranslate text-nowrap">&lt;b-form-timepicker&gt;</code></a> component instead.</p>\n<p>The component <code translate="no" class="notranslate text-nowrap">&lt;b-time&gt;</code> was introduced in BootstrapVue <code translate="no" class="notranslate text-nowrap">v2.6.0</code>.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">"auto"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-time</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"value"</span> <span class="hljs-attr">locale</span>=<span class="hljs-string">"en"</span> @<span class="hljs-attr">context</span>=<span class="hljs-string">"onContext"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-time</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Value: <span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>\'{{ value }}\'<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mb-0"</span>&gt;</span>Context:<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">pre</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"small"</span>&gt;</span>{{ context }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    data() {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">\'\'</span>,\n        <span class="hljs-attr">context</span>: <span class="hljs-literal">null</span>\n      }\n    },\n    <span class="hljs-attr">methods</span>: {\n      onContext(ctx) {\n        <span class="hljs-keyword">this</span>.context = ctx\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-time.vue --&gt;</span></pre><h2 id="v-model-return-value" class="bv-no-focus-ring"><span class="bd-content-title"><code translate="no" class="notranslate text-nowrap">v-model</code> return value<a class="anchorjs-link" href="#v-model-return-value" aria-labelledby="v-model-return-value"></a></span></h2>\n<p><code translate="no" class="notranslate text-nowrap">&lt;b-time&gt;</code> always returns a string in the format of <code translate="no" class="notranslate text-nowrap">HH:mm:ss</code> which is the same format returned by\nnative browser <code translate="no" class="notranslate text-nowrap">&lt;input type=&quot;time&quot;&gt;</code> controls. The value will be in the range of <code translate="no" class="notranslate text-nowrap">&#39;00:00:00&#39;</code> up to\n<code translate="no" class="notranslate text-nowrap">&#39;23:59:59&#39;</code> (24-hour clock using the <code translate="no" class="notranslate text-nowrap">&#39;h23&#39;</code> hour cycle syntax)</p>\n<p>If no time is selected, then <code translate="no" class="notranslate text-nowrap">&lt;b-time&gt;</code> returns an empty string (<code translate="no" class="notranslate text-nowrap">&#39;&#39;</code>).</p>\n<h2 id="disabled-and-readonly-states" class="bv-no-focus-ring"><span class="bd-content-title">Disabled and readonly states<a class="anchorjs-link" href="#disabled-and-readonly-states" aria-labelledby="disabled-and-readonly-states"></a></span></h2>\n<p>Setting the <code translate="no" class="notranslate text-nowrap">disabled</code> prop will remove all interactivity of the <code translate="no" class="notranslate text-nowrap">&lt;b-time&gt;</code> component. Setting the\n<code translate="no" class="notranslate text-nowrap">readonly</code> prop will disable selecting a time, but will keep the spinbuttons focusable.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"Select time interactive state"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"state"</span> <span class="hljs-attr">aria-controls</span>=<span class="hljs-string">"ex-disabled-readonly"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"disabled"</span>&gt;</span>Disabled<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"readonly"</span>&gt;</span>Readonly<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"normal"</span>&gt;</span>Normal<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-time</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"ex-disabled-readonly"</span> <span class="hljs-attr">:disabled</span>=<span class="hljs-string">"disabled"</span> <span class="hljs-attr">:readonly</span>=<span class="hljs-string">"readonly"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-time</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    data() {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">state</span>: <span class="hljs-string">\'disabled\'</span>\n      }\n    },\n    <span class="hljs-attr">computed</span>: {\n      disabled() {\n        <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.state === <span class="hljs-string">\'disabled\'</span>\n      },\n      readonly() {\n        <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.state === <span class="hljs-string">\'readonly\'</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-time-disabled-readonly.vue --&gt;</span></pre><h2 id="styling" class="bv-no-focus-ring"><span class="bd-content-title">Styling<a class="anchorjs-link" href="#styling" aria-labelledby="styling"></a></span></h2>\n<h3 id="enabling-of-seconds-spinbutton" class="bv-no-focus-ring"><span class="bd-content-title">Enabling of seconds spinbutton<a class="anchorjs-link" href="#enabling-of-seconds-spinbutton" aria-labelledby="enabling-of-seconds-spinbutton"></a></span></h3>\n<p>By default, the seconds spinbutton is not shown. To enable the section of seconds, set the\n<code translate="no" class="notranslate text-nowrap">show-seconds</code> prop to <code translate="no" class="notranslate text-nowrap">true</code> to enable the seconds selection spinbutton. When <code translate="no" class="notranslate text-nowrap">show-seconds</code> is\n<code translate="no" class="notranslate text-nowrap">false</code> (or not provided), the returned value will always have the seconds portion of the time\nstring set to <code translate="no" class="notranslate text-nowrap">00</code>.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-time</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"value"</span> <span class="hljs-attr">show-seconds</span> <span class="hljs-attr">locale</span>=<span class="hljs-string">"en"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-time</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mt-2"</span>&gt;</span>Value: \'{{ value }}\'<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    data() {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">\'\'</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-time-show-seconds.vue --&gt;</span></pre><h3 id="hiding-the-top-selected-time-header" class="bv-no-focus-ring"><span class="bd-content-title">Hiding the top selected time header<a class="anchorjs-link" href="#hiding-the-top-selected-time-header" aria-labelledby="hiding-the-top-selected-time-header"></a></span></h3>\n<p>By default, the current selected time will be displayed at the top of the time component, formatted\nin the locale&#39;s language.</p>\n<p>You can hide this header via the <code translate="no" class="notranslate text-nowrap">hide-header</code> prop. Note this only visually hides the selected\ntime, while keeping it available to screen reader users as an <code translate="no" class="notranslate text-nowrap">aria-live</code> region.</p>\n<h3 id="border-and-padding" class="bv-no-focus-ring"><span class="bd-content-title">Border and padding<a class="anchorjs-link" href="#border-and-padding" aria-labelledby="border-and-padding"></a></span></h3>\n<p>Fancy a time control with a border with padding? Use Bootstrap&#39;s border and padding utility classes\nto add borders and padding:</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-time</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"border rounded p-2"</span> <span class="hljs-attr">locale</span>=<span class="hljs-string">"en"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-time</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-time-border-padding.vue --&gt;</span></pre><h3 id="default-slot" class="bv-no-focus-ring"><span class="bd-content-title">Default slot<a class="anchorjs-link" href="#default-slot" aria-labelledby="default-slot"></a></span></h3>\n<p>Provide optional content at the bottom of the time interface via the use of <code translate="no" class="notranslate text-nowrap">default</code> slot. The slot\ncan be used to add buttons such as Now or Reset, etc.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-time</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"value"</span> <span class="hljs-attr">show-seconds</span> <span class="hljs-attr">locale</span>=<span class="hljs-string">"en"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"d-flex"</span> <span class="hljs-attr">dir</span>=<span class="hljs-string">"ltr"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span>\n        <span class="hljs-attr">size</span>=<span class="hljs-string">"sm"</span>\n        <span class="hljs-attr">variant</span>=<span class="hljs-string">"outline-danger"</span>\n        <span class="hljs-attr">v-if</span>=<span class="hljs-string">"value"</span>\n        @<span class="hljs-attr">click</span>=<span class="hljs-string">"clearTime"</span>\n      &gt;</span>\n        Clear time\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span>\n        <span class="hljs-attr">size</span>=<span class="hljs-string">"sm"</span>\n        <span class="hljs-attr">variant</span>=<span class="hljs-string">"outline-primary"</span>\n        <span class="hljs-attr">class</span>=<span class="hljs-string">"ml-auto"</span>\n        @<span class="hljs-attr">click</span>=<span class="hljs-string">"setNow"</span>\n      &gt;</span>\n        Set Now\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-time</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    data() {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">value</span>: <span class="hljs-literal">null</span>\n      }\n    },\n    <span class="hljs-attr">methods</span>: {\n      setNow() {\n        <span class="hljs-keyword">const</span> now = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>()\n        <span class="hljs-comment">// Grab the HH:mm:ss part of the time string</span>\n        <span class="hljs-keyword">this</span>.value = now.toTimeString().slice(<span class="hljs-number">0</span>, <span class="hljs-number">8</span>)\n      },\n      clearTime() {\n        <span class="hljs-keyword">this</span>.value = <span class="hljs-string">\'\'</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-time-default-slot.vue --&gt;</span></pre><h2 id="events" class="bv-no-focus-ring"><span class="bd-content-title">Events<a class="anchorjs-link" href="#events" aria-labelledby="events"></a></span></h2>\n<h3 id="input-event" class="bv-no-focus-ring"><span class="bd-content-title"><code translate="no" class="notranslate text-nowrap">input</code> event<a class="anchorjs-link" href="#input-event" aria-labelledby="input-event"></a></span></h3>\n<p>The <code translate="no" class="notranslate text-nowrap">&#39;input&#39;</code> event is emitted when updating the <code translate="no" class="notranslate text-nowrap">v-model</code>. The event has a single argument which is\nthe selected time as a string. The value is a string in the format of <code translate="no" class="notranslate text-nowrap">&#39;HH:mm:ss&#39;</code> (or an empty\nstring if no time is selected). Valid values are in the range of <code translate="no" class="notranslate text-nowrap">&#39;00:00:00&#39;</code> through <code translate="no" class="notranslate text-nowrap">23:59:59&#39;</code>.</p>\n<p>If fhe <code translate="no" class="notranslate text-nowrap">show-seconds</code> prop is not set, the seconds portion of the time value will always be <code translate="no" class="notranslate text-nowrap">&#39;00&#39;</code>.</p>\n<p>If the <code translate="no" class="notranslate text-nowrap">disabled</code> or <code translate="no" class="notranslate text-nowrap">readonly</code> props are set, the <code translate="no" class="notranslate text-nowrap">&#39;input&#39;</code> event will <strong>not</strong> be emitted.</p>\n<h3 id="context-event" class="bv-no-focus-ring"><span class="bd-content-title"><code translate="no" class="notranslate text-nowrap">context</code> event<a class="anchorjs-link" href="#context-event" aria-labelledby="context-event"></a></span></h3>\n<p>The <code translate="no" class="notranslate text-nowrap">&#39;context&#39;</code> event is emitted whenever a user selects a time, or the user changes a value of one\nof the spinbuttons. It will also be emitted when the component is created (just before insertion\ninto the DOM), or when the resolved locale has changed.</p>\n<p>The event will not be emitted when the <code translate="no" class="notranslate text-nowrap">disabled</code> or <code translate="no" class="notranslate text-nowrap">readonly</code> props are set (except for the\ninitial emit when the time component is created).</p>\n<p>The <code translate="no" class="notranslate text-nowrap">&#39;context&#39;</code> event is passed a context object as it&#39;s only argument, with the following\nproperties:</p>\n<div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table">\n<thead class="thead-default">\n<tr>\n<th>Property</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code translate="no" class="notranslate text-nowrap">value</code></td>\n<td>The current value as an <code translate="no" class="notranslate text-nowrap">HH:mm:ss</code> string or an empty string <code translate="no" class="notranslate text-nowrap">&#39;&#39;</code> if no time selected</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate text-nowrap">formatted</code></td>\n<td>The current value formatted in the resolved locale, or the <code translate="no" class="notranslate text-nowrap">label-no-time</code> prop value if no time selected</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate text-nowrap">hours</code></td>\n<td>The currently selected hour (always 24 hour, <code translate="no" class="notranslate text-nowrap">h23&#39;</code> format) as a number or <code translate="no" class="notranslate text-nowrap">null</code> if no hour</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate text-nowrap">minutes</code></td>\n<td>The currently selected minute value as a number or <code translate="no" class="notranslate text-nowrap">null</code> if no minute</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate text-nowrap">seconds</code></td>\n<td>The currently selected seconds value as a number or <code translate="no" class="notranslate text-nowrap">null</code> if no seconds</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate text-nowrap">locale</code></td>\n<td>The locale resolved by the time picker, this <em>may</em> be different than the requested locale</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate text-nowrap">isRTL</code></td>\n<td>Will be <code translate="no" class="notranslate text-nowrap">true</code> is the locale is RTL (right-to-left)</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate text-nowrap">hour12</code></td>\n<td>Boolean value indicating if the interface is using 12 hour format</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate text-nowrap">hourCycle</code></td>\n<td>A string representing the type of hour cycle used for the spinbuttons: <code translate="no" class="notranslate text-nowrap">&#39;h11&#39;</code>, <code translate="no" class="notranslate text-nowrap">&#39;h12&#39;</code>, <code translate="no" class="notranslate text-nowrap">&#39;h23&#39;</code> or <code translate="no" class="notranslate text-nowrap">&#39;h24&#39;</code></td>\n</tr>\n</tbody></table>\n</div><p>Refer to the <a href="#internationalization" class="font-weight-bold">Internationalization section</a> for information on the context\nproperties <code translate="no" class="notranslate text-nowrap">locale</code>, <code translate="no" class="notranslate text-nowrap">hour12</code> and <code translate="no" class="notranslate text-nowrap">hourCycle</code>.</p>\n<h2 id="internationalization" class="bv-no-focus-ring"><span class="bd-content-title">Internationalization<a class="anchorjs-link" href="#internationalization" aria-labelledby="internationalization"></a></span></h2>\n<p>Internationalization of the time interface is provided via\n<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat" target="_blank" rel="noopener"><code translate="no" class="notranslate text-nowrap">Intl.DateTimeFormat</code></a>\nand\n<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat" target="_blank" rel="noopener"><code translate="no" class="notranslate text-nowrap">Intl.NumberFormat</code></a>,\nexcept for the labels applied to elements of the time control (aria-labels, selected status, etc).\nYou must provide your own translations for these labels. The available locales will be browser\ndependant (not all browsers support all locales).</p>\n<p>By default <code translate="no" class="notranslate text-nowrap">&lt;b-time&gt;</code> will use the browser&#39;s default locale, but you can specify the locale (or\nlocales) to use via the <code translate="no" class="notranslate text-nowrap">locale</code> prop. The prop accepts either a single locale string, or an array\nof locale strings (listed in order of most preferred locale to least prefered).</p>\n<p>The emitted <code translate="no" class="notranslate text-nowrap">&#39;context&#39;</code> event will include which locale the time control has resolved to (which may\nnot be the same locale as requested, depending on the supported locales of <code translate="no" class="notranslate text-nowrap">Intl</code>).</p>\n<p>For server side rendering (SSR) when using Node.js, ensure that the Node.js runtime you are using\nsupports <code translate="no" class="notranslate text-nowrap">Intl</code> and the locales you will be using. Refer to the\n<a href="https://nodejs.org/api/intl.html" target="_blank" rel="noopener">Node Intl support documentation</a> for details.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">"12"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mb-3"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">"example-locales"</span>&gt;</span>Locale:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"example-locales"</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"locale"</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">"locales"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-select</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">"auto"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-time</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">"value"</span>\n        <span class="hljs-attr">v-bind</span>=<span class="hljs-string">"labels[locale] || {}"</span>\n        <span class="hljs-attr">:locale</span>=<span class="hljs-string">"locale"</span>\n        <span class="hljs-attr">show-seconds</span>\n        @<span class="hljs-attr">context</span>=<span class="hljs-string">"onContext"</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-time</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Value: <span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>\'{{ value }}\'<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mb-0"</span>&gt;</span>Context:<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">pre</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"small"</span>&gt;</span>{{ context }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n   <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    data() {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">\'\'</span>,\n        <span class="hljs-attr">context</span>: <span class="hljs-literal">null</span>,\n        <span class="hljs-attr">locale</span>: <span class="hljs-string">\'en-US\'</span>,\n        <span class="hljs-attr">locales</span>: [\n          { <span class="hljs-attr">value</span>: <span class="hljs-string">\'en-US\'</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">\'English US (en-US)\'</span> },\n          { <span class="hljs-attr">value</span>: <span class="hljs-string">\'de\'</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">\'German (de)\'</span> },\n          { <span class="hljs-attr">value</span>: <span class="hljs-string">\'ar-EG\'</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">\'Arabic Egyptian (ar-EG)\'</span> },\n          { <span class="hljs-attr">value</span>: <span class="hljs-string">\'zh\'</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">\'Chinese (zh)\'</span> }\n        ],\n        <span class="hljs-attr">labels</span>: {\n          <span class="hljs-attr">de</span>: {\n            <span class="hljs-attr">labelHours</span>: <span class="hljs-string">\'Stunden\'</span>,\n            <span class="hljs-attr">labelMinutes</span>: <span class="hljs-string">\'Minuten\'</span>,\n            <span class="hljs-attr">labelSeconds</span>: <span class="hljs-string">\'Sekunden\'</span>,\n            <span class="hljs-attr">labelIncrement</span>: <span class="hljs-string">\'Erhöhen\'</span>,\n            <span class="hljs-attr">labelDecrement</span>: <span class="hljs-string">\'Verringern\'</span>,\n            <span class="hljs-attr">labelSelected</span>: <span class="hljs-string">\'Ausgewählte Zeit\'</span>,\n            <span class="hljs-attr">labelNoTimeSelected</span>: <span class="hljs-string">\'Keine Zeit ausgewählt\'</span>\n          },\n          <span class="hljs-string">\'ar-EG\'</span>: {\n            <span class="hljs-attr">labelHours</span>: <span class="hljs-string">\'ساعات\'</span>,\n            <span class="hljs-attr">labelMinutes</span>: <span class="hljs-string">\'الدقائق\'</span>,\n            <span class="hljs-attr">labelSeconds</span>: <span class="hljs-string">\'ثواني\'</span>,\n            <span class="hljs-attr">labelAmpm</span>: <span class="hljs-string">\'صباحا مساء\'</span>,\n            <span class="hljs-attr">labelAm</span>: <span class="hljs-string">\'ص\'</span>,\n            <span class="hljs-attr">labelPm</span>: <span class="hljs-string">\'م\'</span>,\n            <span class="hljs-attr">labelIncrement</span>: <span class="hljs-string">\'زيادة\'</span>,\n            <span class="hljs-attr">labelDecrement</span>: <span class="hljs-string">\'إنقاص\'</span>,\n            <span class="hljs-attr">labelSelected</span>: <span class="hljs-string">\'الوقت المحدد\'</span>,\n            <span class="hljs-attr">labelNoTimeSelected</span>: <span class="hljs-string">\'لا وقت المختار\'</span>\n          },\n          <span class="hljs-attr">zh</span>: {\n            <span class="hljs-attr">labelHours</span>: <span class="hljs-string">\'小时\'</span>,\n            <span class="hljs-attr">labelMinutes</span>: <span class="hljs-string">\'分钟\'</span>,\n            <span class="hljs-attr">labelSeconds</span>: <span class="hljs-string">\'秒\'</span>,\n            <span class="hljs-attr">labelAmpm</span>: <span class="hljs-string">\'上午下午\'</span>,\n            <span class="hljs-attr">labelAm</span>: <span class="hljs-string">\'上午\'</span>,\n            <span class="hljs-attr">labelPm</span>: <span class="hljs-string">\'下午\'</span>,\n            <span class="hljs-attr">labelIncrement</span>: <span class="hljs-string">\'增量\'</span>,\n            <span class="hljs-attr">labelDecrement</span>: <span class="hljs-string">\'减量\'</span>,\n            <span class="hljs-attr">labelSelected</span>: <span class="hljs-string">\'选定时间\'</span>,\n            <span class="hljs-attr">labelNoTimeSelected</span>: <span class="hljs-string">\'没有选择时间\'</span>\n          }\n        }\n      }\n    },\n    <span class="hljs-attr">methods</span>: {\n      onContext(ctx) {\n        <span class="hljs-keyword">this</span>.context = ctx\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-time-i18n.vue --&gt;</span></pre><h3 id="understanding-the-hourcycle" class="bv-no-focus-ring"><span class="bd-content-title">Understanding the <code translate="no" class="notranslate text-nowrap">hourCycle</code><a class="anchorjs-link" href="#understanding-the-hourcycle" aria-labelledby="understanding-the-hourcycle"></a></span></h3>\n<p>There are 2 main types of time keeping conventions (clocks) used around the world: the 12-hour clock\nand the 24-hour clock. The <code translate="no" class="notranslate text-nowrap">hourCycle</code> property allows you to access the clock type used by a\nparticular locale. The hour cycle type can have several different values, which are listed in the\ntable below. The <code translate="no" class="notranslate text-nowrap">hourCycle</code> signals how the time <code translate="no" class="notranslate text-nowrap">&#39;00:00:00&#39;</code> (the start of the day) should be\npresented/formatted to a user of a particular locale. The <a href="#context-event" class="font-weight-bold"><code translate="no" class="notranslate text-nowrap">&#39;context&#39;</code> event</a>\nincludes the resolved <code translate="no" class="notranslate text-nowrap">hourCycle</code> value.</p>\n<div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table">\n<thead class="thead-default">\n<tr>\n<th><code translate="no" class="notranslate text-nowrap">hourCycle</code></th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code translate="no" class="notranslate text-nowrap">&#39;h12&#39;</code></td>\n<td>Hour system using <code translate="no" class="notranslate text-nowrap">1</code>–<code translate="no" class="notranslate text-nowrap">12</code>. The 12 hour clock, with midnight starting at 12:00 am</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate text-nowrap">&#39;h23&#39;</code></td>\n<td>Hour system using <code translate="no" class="notranslate text-nowrap">0</code>–<code translate="no" class="notranslate text-nowrap">23</code>. The 24 hour clock, with midnight starting at 0:00</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate text-nowrap">&#39;h11&#39;</code></td>\n<td>Hour system using <code translate="no" class="notranslate text-nowrap">0</code>–<code translate="no" class="notranslate text-nowrap">11</code>. The 12 hour clock, with midnight starting at 0:00 am</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate text-nowrap">&#39;h24&#39;</code></td>\n<td>Hour system using <code translate="no" class="notranslate text-nowrap">1</code>–<code translate="no" class="notranslate text-nowrap">24</code>. The 24 hour clock, with midnight starting at 24:00</td>\n</tr>\n</tbody></table>\n</div><p>Native HTML5 <code translate="no" class="notranslate text-nowrap">&lt;input type=&quot;date&quot;&gt;</code> returns the time value in the <code translate="no" class="notranslate text-nowrap">&#39;h23&#39;</code> format, and <code translate="no" class="notranslate text-nowrap">&lt;b-time&gt;</code> also\nreturns the v-model in the <code translate="no" class="notranslate text-nowrap">&#39;h23&#39;</code> format. This value may differ from what is presented to the user\nvia the GUI (spin buttons) of the <code translate="no" class="notranslate text-nowrap">&lt;b-time&gt;</code> component, dependant upon the\n<a href="#internationalization" class="font-weight-bold">locale selected</a>.</p>\n<p><strong>Note:</strong> IE 11 <em>does not support</em> resolving the <code translate="no" class="notranslate text-nowrap">hourCycle</code> value of a locale, so we assume either\n<code translate="no" class="notranslate text-nowrap">h12</code> or <code translate="no" class="notranslate text-nowrap">h23</code> based on the resolved <code translate="no" class="notranslate text-nowrap">hour12</code> value.</p>\n<h3 id="forcing-12-or-24-hour-interface" class="bv-no-focus-ring"><span class="bd-content-title">Forcing 12 or 24 hour interface<a class="anchorjs-link" href="#forcing-12-or-24-hour-interface" aria-labelledby="forcing-12-or-24-hour-interface"></a></span></h3>\n<p>12-hour versus 24-hour input is determined by the client browsers default locale (or the locale\nresolved from the <code translate="no" class="notranslate text-nowrap">locale</code> prop). To force a 12-hour user interface, set the prop <code translate="no" class="notranslate text-nowrap">hour12</code> to\n<code translate="no" class="notranslate text-nowrap">true</code>. To force a 24-hour user interface, set the prop <code translate="no" class="notranslate text-nowrap">hour12</code> to <code translate="no" class="notranslate text-nowrap">false</code>. The default for prop\n<code translate="no" class="notranslate text-nowrap">hour12</code> is <code translate="no" class="notranslate text-nowrap">null</code> which uses the resolved locale to determine which interface to use.</p>\n<p>The setting of the <code translate="no" class="notranslate text-nowrap">hour12</code> prop will affect which <a href="#understanding-the-hourcycle" class="font-weight-bold"><code translate="no" class="notranslate text-nowrap">hourCycle</code></a> is\nresolved for formatting the hours spinbutton. Note that while this may affect the format of the hour\nspinbutton, but the formatted time string result <em>may</em> show the <code translate="no" class="notranslate text-nowrap">&#39;h12</code> or <code translate="no" class="notranslate text-nowrap">&#39;h23&#39;</code> format due to\nlimitations in the client <code translate="no" class="notranslate text-nowrap">Intl.DateTimeFormat</code> support for a particular locale. It is therefore\n<strong>recommended to leave the <code translate="no" class="notranslate text-nowrap">hour12</code> prop set to <code translate="no" class="notranslate text-nowrap">null</code> (default)</strong>, so show the locale default\ntime/hour formatting.</p>\n<h2 id="accessibility" class="bv-no-focus-ring"><span class="bd-content-title">Accessibility<a class="anchorjs-link" href="#accessibility" aria-labelledby="accessibility"></a></span></h2>\n<p><code translate="no" class="notranslate text-nowrap">&lt;b-time&gt;</code> provides many accessibility features, such as <code translate="no" class="notranslate text-nowrap">aria-live</code> regions, roles, aria labeling,\nshortcut keys and full keyboard navigation to work with most screen readers.</p>\n<p>Keyboard navigation:</p>\n<ul>\n<li><kbd class="notranslate" translate="no">ArrowUp</kbd> Increments the currently selected spinbutton value</li>\n<li><kbd class="notranslate" translate="no">ArrowDown</kbd> Decrements the currently selected spinbutton value</li>\n<li><kbd class="notranslate" translate="no">Home</kbd> Sets the selected spinbutton to the minimum value</li>\n<li><kbd class="notranslate" translate="no">End</kbd> Sets the selected spinbutton to the maximum value</li>\n<li><kbd class="notranslate" translate="no">PageUp</kbd> Increases the selected spinbutton value by the spinbutton&#39;s step by a larger\nvalue</li>\n<li><kbd class="notranslate" translate="no">PageDown</kbd> Decreases the selected spinbutton value by the spinbutton&#39;s step by a larger\nvalue</li>\n<li><kbd class="notranslate" translate="no">ArrowRight</kbd> Moves focus to the next spin button in the component</li>\n<li><kbd class="notranslate" translate="no">ArrowLeft</kbd> Moves focus to the previous spin button in the component</li>\n</ul>\n<p>Several of the <code translate="no" class="notranslate text-nowrap">label-*</code> props are not visible on screen, but are used to label various elements\nwithin the calendar for screen reader users. e.g. the <code translate="no" class="notranslate text-nowrap">label-selected</code> prop is added to the element\nthat displays the selected value.</p>\n<p>When internationalizing the datepicker, it is important to also update the <code translate="no" class="notranslate text-nowrap">label-*</code> props with\nappropriate translated strings, so that international screen reader users will hear the correct\nprompts and descriptions.</p>\n<h2 id="implementation-notes" class="bv-no-focus-ring"><span class="bd-content-title">Implementation notes<a class="anchorjs-link" href="#implementation-notes" aria-labelledby="implementation-notes"></a></span></h2>\n<p>The <code translate="no" class="notranslate text-nowrap">&lt;b-time&gt;</code> component is based upon the custom BootstrapVue component\n<a href="/docs/components/form-spinbutton" class="font-weight-bold"><code translate="no" class="notranslate text-nowrap">&lt;b-form-spinbutton&gt;</code></a>.</p>\n<p><code translate="no" class="notranslate text-nowrap">&lt;b-time&gt;</code> uses Bootstrap&#39;s margin, padding, border, and flex utility classes, along with button\n(<code translate="no" class="notranslate text-nowrap">btn-*</code>) classes and the <code translate="no" class="notranslate text-nowrap">form-control</code> class. BootstrapVue&#39;s custom SCSS/CSS is also required for\nproper styling.</p>\n<h2 id="see-also" class="bv-no-focus-ring"><span class="bd-content-title">See also<a class="anchorjs-link" href="#see-also" aria-labelledby="see-also"></a></span></h2>\n<ul>\n<li><a href="/docs/components/form-timepicker" class="font-weight-bold"><code translate="no" class="notranslate text-nowrap">&lt;b-form-timepicker&gt;</code> Time picker custom form input</a></li>\n<li><a href="/docs/components/calendar" class="font-weight-bold"><code translate="no" class="notranslate text-nowrap">&lt;b-calendar&gt;</code> Calendar date selection widget</a></li>\n<li><a href="/docs/components/form-datepicker" class="font-weight-bold"><code translate="no" class="notranslate text-nowrap">&lt;b-form-datepicker&gt;</code> Date picker custom form input</a></li>\n</ul>\n'}}]);