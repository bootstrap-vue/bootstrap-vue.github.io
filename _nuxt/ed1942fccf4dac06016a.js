(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{361:function(n,t){n.exports='<h1 id="tabs" class="bv-no-focus-ring"><span class="bd-content-title">Tabs</span></h1>\n<p class="bd-lead">Create a widget of tabbable panes of <em>local content</em>. The tabs component is built upon navs and\ncards internally, and provides full keyboard navigation control of the tabs.</p>\n<p>For navigation based tabs (i.e. tabs that would change the URL), use the\n<a href="/docs/components/nav" class="font-weight-bold"><code translate="no" class="notranslate text-nowrap">&lt;b-nav&gt;</code></a> component instead.</p>\n<h2 id="basic-usage" class="bv-no-focus-ring"><span class="bd-content-title">Basic usage<a class="anchorjs-link" href="#basic-usage" aria-labelledby="basic-usage"></a></span></h2>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span> <span class="hljs-attr">content-class</span>=<span class="hljs-string">"mt-3"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"First"</span> <span class="hljs-attr">active</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I\'m the first tab<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Second"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I\'m the second tab<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Disabled"</span> <span class="hljs-attr">disabled</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I\'m a disabled tab!<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs.vue --&gt;</span></pre><p><strong>Tip:</strong> You should supply each child <code translate="no" class="notranslate text-nowrap">&lt;b-tab&gt;</code> component a unique <code translate="no" class="notranslate text-nowrap">key</code> value if dynamically adding\nor removing <code translate="no" class="notranslate text-nowrap">&lt;b-tab&gt;</code> components (i.e. <code translate="no" class="notranslate text-nowrap">v-if</code> or for loops). The <code translate="no" class="notranslate text-nowrap">key</code> attribute is a special Vue\nattribute, see <a href="https://vuejs.org/v2/api/#key" target="_blank" rel="noopener">https://vuejs.org/v2/api/#key</a>.</p>\n<h2 id="cards-integration" class="bv-no-focus-ring"><span class="bd-content-title">Cards integration<a class="anchorjs-link" href="#cards-integration" aria-labelledby="cards-integration"></a></span></h2>\n<p>Tabs support integrating with Bootstrap cards. Just add the <code translate="no" class="notranslate text-nowrap">card</code> property to <code translate="no" class="notranslate text-nowrap">&lt;b-tabs&gt;</code> and place\nit inside a <code translate="no" class="notranslate text-nowrap">&lt;b-card&gt;</code> component. Note that you should add the<code translate="no" class="notranslate text-nowrap">no-body</code> prop on the <code translate="no" class="notranslate text-nowrap">&lt;b-card&gt;</code>\ncomponent in order to properly decorate the card header and remove the extra padding introduced by\n<code translate="no" class="notranslate text-nowrap">card-body</code>.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-card</span> <span class="hljs-attr">no-body</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span> <span class="hljs-attr">card</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Tab 1"</span> <span class="hljs-attr">active</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>Tab contents 1<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Tab 2"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>Tab contents 2<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-card</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-card.vue --&gt;</span></pre><p>When <code translate="no" class="notranslate text-nowrap">&lt;b-tabs&gt;</code> is in <code translate="no" class="notranslate text-nowrap">card</code> mode, each <code translate="no" class="notranslate text-nowrap">&lt;b-tab&gt;</code> sub-component will automatically have the\n<code translate="no" class="notranslate text-nowrap">card-body</code> class applied (this class provides the padding around the tab content). To disable the\n<code translate="no" class="notranslate text-nowrap">card-body</code> class, set the <code translate="no" class="notranslate text-nowrap">no-body</code> prop on the <code translate="no" class="notranslate text-nowrap">&lt;b-tab&gt;</code> sub component.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-card</span> <span class="hljs-attr">no-body</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span> <span class="hljs-attr">card</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">no-body</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Picture 1"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-card-img</span> <span class="hljs-attr">bottom</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://picsum.photos/600/200/?image=21"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-card-img</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-card-footer</span>&gt;</span>Picture 1 footer<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-footer</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">no-body</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Picture 2"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-card-img</span> <span class="hljs-attr">bottom</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://picsum.photos/600/200/?image=25"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-card-img</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-card-footer</span>&gt;</span>Picture 2 footer<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-footer</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">no-body</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Picture 3"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-card-img</span> <span class="hljs-attr">bottom</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://picsum.photos/600/200/?image=26"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-card-img</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-card-footer</span>&gt;</span>Picture 3 footer<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-footer</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Text"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-card-title</span>&gt;</span>This tab does not have the <span class="hljs-tag">&lt;<span class="hljs-name">code</span>&gt;</span>no-body<span class="hljs-tag">&lt;/<span class="hljs-name">code</span>&gt;</span> prop set<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-title</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>\n          Quis magna Lorem anim amet ipsum do mollit sit cillum voluptate ex nulla tempor. Laborum\n          consequat non elit enim exercitation cillum aliqua consequat id aliqua. Esse ex\n          consectetur mollit voluptate est in duis laboris ad sit ipsum anim Lorem. Incididunt\n          veniam velit elit elit veniam Lorem aliqua quis ullamco deserunt sit enim elit aliqua\n          esse irure.\n        <span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-card</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-card-no-body.vue --&gt;</span></pre><p><strong>Note:</strong> Setting the <code translate="no" class="notranslate text-nowrap">no-body</code> prop on <code translate="no" class="notranslate text-nowrap">&lt;b-tab&gt;</code> will have no affect when <code translate="no" class="notranslate text-nowrap">&lt;b-tabs&gt;</code> is not in\n<code translate="no" class="notranslate text-nowrap">card</code> mode (as the <code translate="no" class="notranslate text-nowrap">card-body</code> class is only set when in <code translate="no" class="notranslate text-nowrap">card</code> mode).</p>\n<p>Refer to the <a href="/docs/components/card" class="font-weight-bold">Cards documentation</a> for more details on card components.</p>\n<h2 id="pills-variant" class="bv-no-focus-ring"><span class="bd-content-title">Pills variant<a class="anchorjs-link" href="#pills-variant" aria-labelledby="pills-variant"></a></span></h2>\n<p>Tabs use the <code translate="no" class="notranslate text-nowrap">tabs</code> styling by default. Just add <code translate="no" class="notranslate text-nowrap">pills</code> property to <code translate="no" class="notranslate text-nowrap">&lt;b-tabs&gt;</code> for the pill style\nvariant.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-card</span> <span class="hljs-attr">no-body</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span> <span class="hljs-attr">pills</span> <span class="hljs-attr">card</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Tab 1"</span> <span class="hljs-attr">active</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>Tab contents 1<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Tab 2"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>Tab contents 2<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-card</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-pills.vue --&gt;</span></pre><h2 id="fill-and-justify" class="bv-no-focus-ring"><span class="bd-content-title">Fill and justify<a class="anchorjs-link" href="#fill-and-justify" aria-labelledby="fill-and-justify"></a></span></h2>\n<p>Force your <code translate="no" class="notranslate text-nowrap">&lt;b-tabs&gt;</code> controls to extend the full available width.</p>\n<h3 id="fill" class="bv-no-focus-ring"><span class="bd-content-title">Fill<a class="anchorjs-link" href="#fill" aria-labelledby="fill"></a></span></h3>\n<p>To proportionately fill all available space with your tab controls, set the <code translate="no" class="notranslate text-nowrap">fill</code> prop. Notice that\nall horizontal space is occupied, but not every control has the same width.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span> <span class="hljs-attr">content-class</span>=<span class="hljs-string">"mt-3"</span> <span class="hljs-attr">fill</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"First"</span> <span class="hljs-attr">active</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I\'m the first tab<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Second"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I\'m the second tab<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Very, very long title"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I\'m the tab with the very, very long title<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Disabled"</span> <span class="hljs-attr">disabled</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I\'m a disabled tab!<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-fill.vue --&gt;</span></pre><h3 id="justified" class="bv-no-focus-ring"><span class="bd-content-title">Justified<a class="anchorjs-link" href="#justified" aria-labelledby="justified"></a></span></h3>\n<p>For equal-width controls, use the <code translate="no" class="notranslate text-nowrap">justified</code> prop instead. All horizontal space will be occupied by\nthe controls, but unlike using <code translate="no" class="notranslate text-nowrap">fill</code> above, every control will be the same width.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span> <span class="hljs-attr">content-class</span>=<span class="hljs-string">"mt-3"</span> <span class="hljs-attr">justified</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"First"</span> <span class="hljs-attr">active</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I\'m the first tab<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Second"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I\'m the second tab<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Very, very long title"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I\'m the tab with the very, very long title<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Disabled"</span> <span class="hljs-attr">disabled</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I\'m a disabled tab!<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-justified.vue --&gt;</span></pre><h2 id="alignment" class="bv-no-focus-ring"><span class="bd-content-title">Alignment<a class="anchorjs-link" href="#alignment" aria-labelledby="alignment"></a></span></h2>\n<p>To align your tab controls, use the <code translate="no" class="notranslate text-nowrap">align</code> prop. Available values are <code translate="no" class="notranslate text-nowrap">left</code>, <code translate="no" class="notranslate text-nowrap">center</code> and <code translate="no" class="notranslate text-nowrap">right</code>.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span> <span class="hljs-attr">content-class</span>=<span class="hljs-string">"mt-3"</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"center"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"First"</span> <span class="hljs-attr">active</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I\'m the first tab<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Second"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I\'m the second tab<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Disabled"</span> <span class="hljs-attr">disabled</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I\'m a disabled tab!<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-alignment.vue --&gt;</span></pre><h2 id="bottom-placement-of-tab-controls" class="bv-no-focus-ring"><span class="bd-content-title">Bottom placement of tab controls<a class="anchorjs-link" href="#bottom-placement-of-tab-controls" aria-labelledby="bottom-placement-of-tab-controls"></a></span></h2>\n<p>Visually move the tab controls to the bottom by setting the prop <code translate="no" class="notranslate text-nowrap">end</code>.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-card</span> <span class="hljs-attr">no-body</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span> <span class="hljs-attr">pills</span> <span class="hljs-attr">card</span> <span class="hljs-attr">end</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Tab 1"</span> <span class="hljs-attr">active</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>Tab contents 1<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Tab 2"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>Tab contents 2<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-card</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-bottom.vue --&gt;</span></pre><p><strong>Caveats:</strong></p>\n<ul>\n<li>Bottom placement visually works best with the <code translate="no" class="notranslate text-nowrap">pills</code> variant. When using the default <code translate="no" class="notranslate text-nowrap">tabs</code>\nvariant, you may want to provided your own custom styling classes, as Bootstrap v4 CSS assumes the\ntabs will always be placed on the top of the tabs content.</li>\n<li>To provide a better user experience with bottom placed controls, ensure that the content of each\ntab pane is the same height and fits completely within the visible viewport, otherwise the user\nwill need to scroll up to read the start of the tabbed content.</li>\n</ul>\n<h2 id="vertical-tabs" class="bv-no-focus-ring"><span class="bd-content-title">Vertical tabs<a class="anchorjs-link" href="#vertical-tabs" aria-labelledby="vertical-tabs"></a></span></h2>\n<p>Have the tab controls placed on the lefthand side by setting the <code translate="no" class="notranslate text-nowrap">vertical</code> prop to <code translate="no" class="notranslate text-nowrap">true</code>. Vertical\ntabs work with or without <code translate="no" class="notranslate text-nowrap">card</code> mode enabled.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-card</span> <span class="hljs-attr">no-body</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span> <span class="hljs-attr">pills</span> <span class="hljs-attr">card</span> <span class="hljs-attr">vertical</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Tab 1"</span> <span class="hljs-attr">active</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>Tab contents 1<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Tab 2"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>Tab contents 2<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Tab 3"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>Tab contents 3<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-card</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-vertical.vue --&gt;</span></pre><p>Visually move the tab controls to the right hand side by setting the <code translate="no" class="notranslate text-nowrap">end</code> prop:</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-card</span> <span class="hljs-attr">no-body</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span> <span class="hljs-attr">pills</span> <span class="hljs-attr">card</span> <span class="hljs-attr">vertical</span> <span class="hljs-attr">end</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Tab 1"</span> <span class="hljs-attr">active</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>Tab contents 1<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Tab 2"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>Tab contents 2<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Tab 3"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>Tab contents 3<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-card</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-vertical-end.vue --&gt;</span></pre><p>The width of the vertical tab controls will expand to fit the width of the tab title. To control the\nwidth, set a <a href="/docs/reference/size-props#sizing-utility-classes" class="font-weight-bold">width utility class</a> via the prop\n<code translate="no" class="notranslate text-nowrap">nav-wrapper-class</code>. You can use values such as <code translate="no" class="notranslate text-nowrap">w-25</code> (25% width), <code translate="no" class="notranslate text-nowrap">w-50</code> (50% width), etc., or\ncolumn classes such as <code translate="no" class="notranslate text-nowrap">col-2</code>, <code translate="no" class="notranslate text-nowrap">col-3</code>, etc.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-card</span> <span class="hljs-attr">no-body</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span> <span class="hljs-attr">pills</span> <span class="hljs-attr">card</span> <span class="hljs-attr">vertical</span> <span class="hljs-attr">nav-wrapper-class</span>=<span class="hljs-string">"w-50"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Tab 1"</span> <span class="hljs-attr">active</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>Tab contents 1<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Tab 2"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>Tab contents 2<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Tab 3"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>Tab contents 3<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-card</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-vertical-width.vue --&gt;</span></pre><p>Vertical placement visually works best with the <code translate="no" class="notranslate text-nowrap">pills</code> variant. When using the default <code translate="no" class="notranslate text-nowrap">tabs</code>\nvariant, you may want to provided your own custom styling classes, as Bootstrap v4 CSS assumes the\ntab controls will always be placed on the top of the tabs content.</p>\n<p><strong>Note:</strong> <em>overflowing text may occur if your width is narrower than the tab title. You may need\nadditional custom styling.</em></p>\n<h2 id="active-classes" class="bv-no-focus-ring"><span class="bd-content-title">Active classes<a class="anchorjs-link" href="#active-classes" aria-labelledby="active-classes"></a></span></h2>\n<p>To apply classes to the currently active control or tab use the <code translate="no" class="notranslate text-nowrap">active-nav-item-class</code> and\n<code translate="no" class="notranslate text-nowrap">active-tab-class</code> props.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span>\n    <span class="hljs-attr">active-nav-item-class</span>=<span class="hljs-string">"font-weight-bold text-uppercase text-danger"</span>\n    <span class="hljs-attr">active-tab-class</span>=<span class="hljs-string">"font-weight-bold text-success"</span>\n    <span class="hljs-attr">content-class</span>=<span class="hljs-string">"mt-3"</span>\n  &gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"First"</span> <span class="hljs-attr">active</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I\'m the first tab<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Second"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I\'m the second tab<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Disabled"</span> <span class="hljs-attr">disabled</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I\'m a disabled tab!<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-classes.vue --&gt;</span></pre><h2 id="fade-animation" class="bv-no-focus-ring"><span class="bd-content-title">Fade animation<a class="anchorjs-link" href="#fade-animation" aria-labelledby="fade-animation"></a></span></h2>\n<p>Fade is enabled by default when changing tabs. It can disabled with <code translate="no" class="notranslate text-nowrap">no-fade</code> property.</p>\n<h2 id="add-tabs-without-content" class="bv-no-focus-ring"><span class="bd-content-title">Add tabs without content<a class="anchorjs-link" href="#add-tabs-without-content" aria-labelledby="add-tabs-without-content"></a></span></h2>\n<p>If you want to add extra tabs that do not have any content, you can put them in <code translate="no" class="notranslate text-nowrap">tabs-start</code> or\n<code translate="no" class="notranslate text-nowrap">tabs-end</code> slot(s):</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span>&gt;</span>\n    <span class="hljs-comment">&lt;!-- Add your b-tab components here --&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:tabs-end</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">"() =&gt; {}"</span>&gt;</span>Another tab<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"nav-item align-self-center"</span>&gt;</span>Plain text<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-item-slot.vue --&gt;</span></pre><p>Use the <code translate="no" class="notranslate text-nowrap">tabs-start</code> slot to place extra tab buttons before the content tab buttons, and use the\n<code translate="no" class="notranslate text-nowrap">tabs-end</code> slot to place extra tab buttons after the content tab buttons.</p>\n<p><strong>Note:</strong> extra (contentless) tab buttons should be a <code translate="no" class="notranslate text-nowrap">&lt;b-nav-item&gt;</code> or have a root element of\n<code translate="no" class="notranslate text-nowrap">&lt;li&gt;</code> and class <code translate="no" class="notranslate text-nowrap">nav-item</code> for proper rendering and semantic markup.</p>\n<h2 id="add-custom-content-to-tab-title" class="bv-no-focus-ring"><span class="bd-content-title">Add custom content to tab title<a class="anchorjs-link" href="#add-custom-content-to-tab-title" aria-labelledby="add-custom-content-to-tab-title"></a></span></h2>\n<p>If you want to add custom content to tab title, like HTML code, icons, or another non-interactive\nVue component, this possible by using <code translate="no" class="notranslate text-nowrap">title</code> slot of <code translate="no" class="notranslate text-nowrap">&lt;b-tab&gt;</code>.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">active</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:title</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-spinner</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"grow"</span> <span class="hljs-attr">small</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-spinner</span>&gt;</span> I\'m <span class="hljs-tag">&lt;<span class="hljs-name">i</span>&gt;</span>custom<span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>title<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"p-3"</span>&gt;</span>Tab contents 1<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:title</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-spinner</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"border"</span> <span class="hljs-attr">small</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-spinner</span>&gt;</span> Tab 2\n      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"p-3"</span>&gt;</span>Tab contents 2<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-title-slot.vue --&gt;</span></pre><p><strong>Do not</strong> place interactive elements/components inside the title slot. The tab button is a link\nwhich does not support child interactive elements per the HTML5 spec.</p>\n<h2 id="apply-custom-classes-to-the-generated-nav-tabs-or-pills" class="bv-no-focus-ring"><span class="bd-content-title">Apply custom classes to the generated nav-tabs or pills<a class="anchorjs-link" href="#apply-custom-classes-to-the-generated-nav-tabs-or-pills" aria-labelledby="apply-custom-classes-to-the-generated-nav-tabs-or-pills"></a></span></h2>\n<p>The tab selectors are based on Bootstrap v4&#39;s <code translate="no" class="notranslate text-nowrap">nav</code> markup ( i.e.\n<code translate="no" class="notranslate text-nowrap">ul.nav &gt; li.nav-item &gt; a.nav-link</code>). In some situations, you may want to add classes to the <code translate="no" class="notranslate text-nowrap">&lt;li&gt;</code>\n(nav-item) and/or the <code translate="no" class="notranslate text-nowrap">&lt;a&gt;</code> (nav-link) on a per tab basis. To do so, simply supply the classname to\nthe <code translate="no" class="notranslate text-nowrap">title-item-class</code> prop (for the <code translate="no" class="notranslate text-nowrap">&lt;li&gt;</code> element) or <code translate="no" class="notranslate text-nowrap">title-link-class</code> prop (for the <code translate="no" class="notranslate text-nowrap">&lt;a&gt;</code>\nelement). Value&#39;s can be passed as a string or array of strings.</p>\n<p><strong>Note:</strong> <em>The <code translate="no" class="notranslate text-nowrap">active</code> class is automatically applied to the active tabs <code translate="no" class="notranslate text-nowrap">&lt;a&gt;</code> element. You may\nneed to accommodate your custom classes for this.</em></p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-card</span> <span class="hljs-attr">no-body</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"tabIndex"</span> <span class="hljs-attr">card</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Tab 1"</span> <span class="hljs-attr">:title-link-class</span>=<span class="hljs-string">"linkClass(0)"</span>&gt;</span>Tab contents 1<span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Tab 2"</span> <span class="hljs-attr">:title-link-class</span>=<span class="hljs-string">"linkClass(1)"</span>&gt;</span>Tab contents 2<span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Tab 3"</span> <span class="hljs-attr">:title-link-class</span>=<span class="hljs-string">"linkClass(2)"</span>&gt;</span>Tab contents 3<span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-card</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    data() {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">tabIndex</span>: <span class="hljs-number">0</span>\n      }\n    },\n    <span class="hljs-attr">methods</span>: {\n      linkClass(idx) {\n        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.tabIndex === idx) {\n          <span class="hljs-keyword">return</span> [<span class="hljs-string">\'bg-primary\'</span>, <span class="hljs-string">\'text-light\'</span>]\n        } <span class="hljs-keyword">else</span> {\n          <span class="hljs-keyword">return</span> [<span class="hljs-string">\'bg-light\'</span>, <span class="hljs-string">\'text-info\'</span>]\n        }\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-with-classes.vue --&gt;</span></pre><h2 id="lazy-loading-tab-content" class="bv-no-focus-ring"><span class="bd-content-title">Lazy loading tab content<a class="anchorjs-link" href="#lazy-loading-tab-content" aria-labelledby="lazy-loading-tab-content"></a></span></h2>\n<p>Sometimes it&#39;s preferred to load components &amp; data only when activating a tab, instead of loading\nall tabs (and associated data) when rendering the <code translate="no" class="notranslate text-nowrap">&lt;b-tabs&gt;</code> set.</p>\n<p>Individual <code translate="no" class="notranslate text-nowrap">&lt;b-tab&gt;</code> components can be lazy loaded via the <code translate="no" class="notranslate text-nowrap">lazy</code> prop, which when set doesn&#39;t mount\nthe content of the <code translate="no" class="notranslate text-nowrap">&lt;b-tab&gt;</code> until it is activated (shown), and will be un-mounted when the tab is\ndeactivated (hidden):</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span> <span class="hljs-attr">content-class</span>=<span class="hljs-string">"mt-3"</span>&gt;</span>\n  <span class="hljs-comment">&lt;!-- This tabs content will always be mounted --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Regular tab"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-alert</span> <span class="hljs-attr">show</span>&gt;</span>I\'m always mounted<span class="hljs-tag">&lt;/<span class="hljs-name">b-alert</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n\n  <span class="hljs-comment">&lt;!-- This tabs content will not be mounted until the tab is shown --&gt;</span>\n  <span class="hljs-comment">&lt;!-- and will be un-mounted when hidden --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Lazy tab"</span> <span class="hljs-attr">lazy</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-alert</span> <span class="hljs-attr">show</span>&gt;</span>I\'m lazy mounted!<span class="hljs-tag">&lt;/<span class="hljs-name">b-alert</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-lazy-tab.vue --&gt;</span></pre><p>One can also make all tab&#39;s lazy by setting the <code translate="no" class="notranslate text-nowrap">lazy</code> prop on the parent <code translate="no" class="notranslate text-nowrap">&lt;b-tabs&gt;</code> component:</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span> <span class="hljs-attr">content-class</span>=<span class="hljs-string">"mt-3"</span> <span class="hljs-attr">lazy</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Tab 1"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-alert</span> <span class="hljs-attr">show</span>&gt;</span>I\'m lazy mounted!<span class="hljs-tag">&lt;/<span class="hljs-name">b-alert</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Tab 2"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-alert</span> <span class="hljs-attr">show</span>&gt;</span>I\'m lazy mounted too!<span class="hljs-tag">&lt;/<span class="hljs-name">b-alert</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-lazy.vue --&gt;</span></pre><h2 id="keyboard-navigation" class="bv-no-focus-ring"><span class="bd-content-title">Keyboard navigation<a class="anchorjs-link" href="#keyboard-navigation" aria-labelledby="keyboard-navigation"></a></span></h2>\n<p>Keyboard navigation is enabled by default for ARIA compliance with tablists when a tab button has\nfocus.</p>\n<div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table">\n<thead class="thead-default">\n<tr>\n<th>Keypress</th>\n<th>Action</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><kbd class="notranslate" translate="no">LEFT</kbd> or <kbd class="notranslate" translate="no">UP</kbd></td>\n<td>Activate the previous non-disabled tab</td>\n</tr>\n<tr>\n<td><kbd class="notranslate" translate="no">RIGHT</kbd> or <kbd class="notranslate" translate="no">DOWN</kbd></td>\n<td>Activate the next non-disabled tab</td>\n</tr>\n<tr>\n<td><kbd class="notranslate" translate="no">SHIFT</kbd>+<kbd class="notranslate" translate="no">LEFT</kbd> or <kbd class="notranslate" translate="no">SHIFT</kbd>+<kbd class="notranslate" translate="no">UP</kbd></td>\n<td>Activate the first non-disabled tab</td>\n</tr>\n<tr>\n<td><kbd class="notranslate" translate="no">HOME</kbd></td>\n<td>Activate the first non-disabled tab</td>\n</tr>\n<tr>\n<td><kbd class="notranslate" translate="no">SHIFT</kbd>+<kbd class="notranslate" translate="no">RIGHT</kbd> or <kbd class="notranslate" translate="no">SHIFT</kbd>+<kbd class="notranslate" translate="no">DOWN</kbd></td>\n<td>Activate the last non-disabled tab</td>\n</tr>\n<tr>\n<td><kbd class="notranslate" translate="no">END</kbd></td>\n<td>Activate the last non-disabled tab</td>\n</tr>\n<tr>\n<td><kbd class="notranslate" translate="no">TAB</kbd></td>\n<td>Move focus to the active tab content</td>\n</tr>\n<tr>\n<td><kbd class="notranslate" translate="no">SHIFT</kbd>+<kbd class="notranslate" translate="no">TAB</kbd></td>\n<td>Move focus to the previous control on the page</td>\n</tr>\n</tbody></table>\n</div><p>Disable keyboard navigation by setting the prop <code translate="no" class="notranslate text-nowrap">no-key-nav</code>. Behavior will now default to regular\nbrowser navigation with TAB key.</p>\n<div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table">\n<thead class="thead-default">\n<tr>\n<th>Keypress</th>\n<th>Action</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><kbd class="notranslate" translate="no">TAB</kbd></td>\n<td>Move to the next tab button or control on the page</td>\n</tr>\n<tr>\n<td><kbd class="notranslate" translate="no">SHIFT</kbd>+<kbd class="notranslate" translate="no">TAB</kbd></td>\n<td>Move to the previous tab button or control on the page</td>\n</tr>\n<tr>\n<td><kbd class="notranslate" translate="no">ENTER</kbd> or <kbd class="notranslate" translate="no">SPACE</kbd></td>\n<td>Activate current focused button&#39;s tab</td>\n</tr>\n</tbody></table>\n</div><h2 id="programmatically-activating-and-deactivating-tabs" class="bv-no-focus-ring"><span class="bd-content-title">Programmatically activating and deactivating tabs<a class="anchorjs-link" href="#programmatically-activating-and-deactivating-tabs" aria-labelledby="programmatically-activating-and-deactivating-tabs"></a></span></h2>\n<p>Use the <code translate="no" class="notranslate text-nowrap">&lt;b-tabs&gt;</code> <code translate="no" class="notranslate text-nowrap">v-model</code> to control which tab is active by setting the <code translate="no" class="notranslate text-nowrap">v-model</code> to the index\n(zero-based) of the tab to be shown (see example below).</p>\n<p>Alternatively, you can use the <code translate="no" class="notranslate text-nowrap">active</code> prop on each <code translate="no" class="notranslate text-nowrap">&lt;b-tab&gt;</code> with the <code translate="no" class="notranslate text-nowrap">.sync</code> modifier to activate\nthe tab, or to detect if a particular tab is active.</p>\n<p>Each <code translate="no" class="notranslate text-nowrap">&lt;b-tab&gt;</code> instance also provides two public methods to activate or deactivate the tab. The\nmethods are <code translate="no" class="notranslate text-nowrap">.activate()</code> and <code translate="no" class="notranslate text-nowrap">.deactivate()</code>, respectively. If activation or deactivation fails\n(i.e. a tab is disabled or no tab is available to move activation to), then the currently active tab\nwill remain active and the method will return <code translate="no" class="notranslate text-nowrap">false</code>. You will need a reference to the <code translate="no" class="notranslate text-nowrap">&lt;b-tab&gt;</code> in\norder to use these methods.</p>\n<h2 id="preventing-a-b-tab-from-being-activated" class="bv-no-focus-ring"><span class="bd-content-title">Preventing a <code translate="no" class="notranslate text-nowrap">&lt;b-tab&gt;</code> from being activated<a class="anchorjs-link" href="#preventing-a-b-tab-from-being-activated" aria-labelledby="preventing-a-b-tab-from-being-activated"></a></span></h2>\n<p>To prevent a tab from activating, simply set the <code translate="no" class="notranslate text-nowrap">disabled</code> prop on the <code translate="no" class="notranslate text-nowrap">&lt;b-tab&gt;</code> component.</p>\n<p>Alternatively, you can listen for the <code translate="no" class="notranslate text-nowrap">activate-tab</code> event, which provides an option to prevent the\ntab from activating. The <code translate="no" class="notranslate text-nowrap">activate-tab</code> event is emitted with three arguments:</p>\n<ul>\n<li><code translate="no" class="notranslate text-nowrap">newTabIndex</code>: The index of the tab that is going to be activated</li>\n<li><code translate="no" class="notranslate text-nowrap">prevTabIndex</code>: The index of the currently active tab</li>\n<li><code translate="no" class="notranslate text-nowrap">bvEvent</code>: The <code translate="no" class="notranslate text-nowrap">BvEvent</code> object. Call <code translate="no" class="notranslate text-nowrap">bvEvt.preventDefault()</code> to prevent <code translate="no" class="notranslate text-nowrap">newTabIndex</code> from being\nactivated</li>\n</ul>\n<p>For accessibility reasons, when using the <code translate="no" class="notranslate text-nowrap">activate-tab</code> event to prevent a tab from activating, you\nshould provide some means of notification to the user as to why the tab is not able to be activated.\nIt is recommended to use the <code translate="no" class="notranslate text-nowrap">disabled</code> attribute on the <code translate="no" class="notranslate text-nowrap">&lt;b-tab&gt;</code> component instead of using the\n<code translate="no" class="notranslate text-nowrap">activate-tab</code> event (as <code translate="no" class="notranslate text-nowrap">disabled</code> is more intuitive for screen reader users).</p>\n<h2 id="advanced-examples" class="bv-no-focus-ring"><span class="bd-content-title">Advanced examples<a class="anchorjs-link" href="#advanced-examples" aria-labelledby="advanced-examples"></a></span></h2>\n<h3 id="external-controls-using-v-model" class="bv-no-focus-ring"><span class="bd-content-title">External controls using <code translate="no" class="notranslate text-nowrap">v-model</code><a class="anchorjs-link" href="#external-controls-using-v-model" aria-labelledby="external-controls-using-v-model"></a></span></h3>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-comment">&lt;!-- Tabs with card integration --&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-card</span> <span class="hljs-attr">no-body</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"tabIndex"</span> <span class="hljs-attr">small</span> <span class="hljs-attr">card</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"General"</span>&gt;</span>I\'m the first fading tab<span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Edit profile"</span>&gt;</span>\n          I\'m the second tab\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-card</span>&gt;</span>I\'m the card in tab<span class="hljs-tag">&lt;/<span class="hljs-name">b-card</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Premium Plan"</span> <span class="hljs-attr">disabled</span>&gt;</span>Sibzamini!<span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Info"</span>&gt;</span>I\'m the last tab<span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-card</span>&gt;</span>\n\n    <span class="hljs-comment">&lt;!-- Control buttons--&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"text-center"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-button-group</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mt-2"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">"tabIndex--"</span>&gt;</span>Previous<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">"tabIndex++"</span>&gt;</span>Next<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-button-group</span>&gt;</span>\n\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"text-muted"</span>&gt;</span>Current Tab: {{ tabIndex }}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    data() {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">tabIndex</span>: <span class="hljs-number">1</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-controls.vue --&gt;</span></pre><h3 id="dynamic-tabs--tabs-end-slot" class="bv-no-focus-ring"><span class="bd-content-title">Dynamic tabs + tabs-end slot<a class="anchorjs-link" href="#dynamic-tabs--tabs-end-slot" aria-labelledby="dynamic-tabs--tabs-end-slot"></a></span></h3>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-card</span> <span class="hljs-attr">no-body</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span> <span class="hljs-attr">card</span>&gt;</span>\n        <span class="hljs-comment">&lt;!-- Render Tabs, supply a unique `key` to each tab --&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">"i in tabs"</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">"\'dyn-tab-\' + i"</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">"\'Tab \' + i"</span>&gt;</span>\n          Tab contents {{ i }}\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"sm"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"danger"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"float-right"</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">"closeTab(i)"</span>&gt;</span>\n            Close tab\n          <span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n\n        <span class="hljs-comment">&lt;!-- New Tab Button (Using tabs-end slot) --&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:tabs-end</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> @<span class="hljs-attr">click.prevent</span>=<span class="hljs-string">"newTab"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>+<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n        <span class="hljs-comment">&lt;!-- Render this if no tabs --&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:empty</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"text-center text-muted"</span>&gt;</span>\n            There are no open tabs<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>\n            Open a new tab using the <span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>+<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span> button above.\n          <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-card</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    data() {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">tabs</span>: [],\n        <span class="hljs-attr">tabCounter</span>: <span class="hljs-number">0</span>\n      }\n    },\n    <span class="hljs-attr">methods</span>: {\n      closeTab(x) {\n        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-keyword">this</span>.tabs.length; i++) {\n          <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.tabs[i] === x) {\n            <span class="hljs-keyword">this</span>.tabs.splice(i, <span class="hljs-number">1</span>)\n          }\n        }\n      },\n      newTab() {\n        <span class="hljs-keyword">this</span>.tabs.push(<span class="hljs-keyword">this</span>.tabCounter++)\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-dynamic.vue --&gt;</span></pre>\x3c!-- Component reference added automatically from component package.json --\x3e\n'}}]);