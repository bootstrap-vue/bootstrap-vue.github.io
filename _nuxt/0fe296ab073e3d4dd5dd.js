(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{302:function(n,t){n.exports='<h1 id="jumbotron"><span class="bd-content-title">Jumbotron</span></h1>\n<p class="bd-lead">A lightweight, flexible component that can optionally extend the entire viewport to showcase key\nmarketing messages on your site.</p>\n<p>You can set the heading and lead text via the <code translate="no" class="notranslate text-nowrap">header</code> and <code translate="no" class="notranslate text-nowrap">lead</code> props, or use the named slots\n<code translate="no" class="notranslate text-nowrap">header</code> and <code translate="no" class="notranslate text-nowrap">lead</code> if you need HTML support.</p>\n<p>Anything else between the opening and closing tags will be rendered at the bottom of the jumbotron.</p>\n<p><strong>Usage with props:</strong></p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-jumbotron</span> <span class="hljs-attr">header</span>=<span class="hljs-string">"BootstrapVue"</span> <span class="hljs-attr">lead</span>=<span class="hljs-string">"Bootstrap v4 Components for Vue.js 2"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>For more information visit website<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"primary"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>More Info<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-jumbotron</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-jumbotron.vue --&gt;</span></pre><p><strong>Usage with slots:</strong></p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-jumbotron</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:header</span>&gt;</span>BootstrapVue<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:lead</span>&gt;</span>\n      This is a simple hero unit, a simple jumbotron-style component for calling extra attention to\n      featured content or information.\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">hr</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"my-4"</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n      It uses utility classes for typography and spacing to space content out within the larger\n      container.\n    <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"primary"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Do Something<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"success"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Do Something Else<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-jumbotron</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-jumbotron-using-slots.vue --&gt;</span></pre><h2 id="options"><span class="bd-content-title">Options<a class="anchorjs-link" href="#options" aria-label="Anchor"></a></span></h2>\n<h3 id="header"><span class="bd-content-title">Header<a class="anchorjs-link" href="#header" aria-label="Anchor"></a></span></h3>\n<p>Control which tag is rendered for the header by setting the <code translate="no" class="notranslate text-nowrap">header-tag</code> to the appropriate HTML\nelement. The default is <code translate="no" class="notranslate text-nowrap">h1</code>. Both the prop <code translate="no" class="notranslate text-nowrap">header</code> and slot <code translate="no" class="notranslate text-nowrap">header</code> will be rendered inside this\ntag. If both the prop and the slot are specified, the slot will be shown.</p>\n<p>Control the overall size of the header text by setting the <code translate="no" class="notranslate text-nowrap">header-level</code> prop to a value between\n<code translate="no" class="notranslate text-nowrap">1</code> and <code translate="no" class="notranslate text-nowrap">4</code> - with <code translate="no" class="notranslate text-nowrap">1</code> being the largest and <code translate="no" class="notranslate text-nowrap">4</code> being smallest. The default value is <code translate="no" class="notranslate text-nowrap">3</code>.</p>\n<h3 id="lead-text"><span class="bd-content-title">Lead text<a class="anchorjs-link" href="#lead-text" aria-label="Anchor"></a></span></h3>\n<p>Control which tag is rendered for the lead text by setting the <code translate="no" class="notranslate text-nowrap">lead-tag</code> to the desired HTML\nelement. The default is <code translate="no" class="notranslate text-nowrap">p</code>. Both the prop <code translate="no" class="notranslate text-nowrap">lead</code> and slot <code translate="no" class="notranslate text-nowrap">lead</code> will be rendered inside this tag.\nIf both the prop and the slot are specified, the slot will be shown.</p>\n<h2 id="fluid-width"><span class="bd-content-title">Fluid width<a class="anchorjs-link" href="#fluid-width" aria-label="Anchor"></a></span></h2>\n<p>To make <code translate="no" class="notranslate text-nowrap">&lt;b-jumbotron&gt;</code> full width, and without rounded corners, set the <code translate="no" class="notranslate text-nowrap">fluid</code> prop. The inner\ncontent will automatically be placed into a <code translate="no" class="notranslate text-nowrap">&lt;b-container&gt;</code> (fixed width at the various\nbreakpoints). To change this to a fluid container, set the <code translate="no" class="notranslate text-nowrap">container-fluid</code> prop. The\n<code translate="no" class="notranslate text-nowrap">container-fluid</code> prop has no effect if the <code translate="no" class="notranslate text-nowrap">fluid</code> prop is not set</p>\n<h2 id="component-tag"><span class="bd-content-title">Component tag<a class="anchorjs-link" href="#component-tag" aria-label="Anchor"></a></span></h2>\n<p>By default, <code translate="no" class="notranslate text-nowrap">&lt;b-jumbotron&gt;</code> will render it&#39;s root element as a <code translate="no" class="notranslate text-nowrap">div</code>. Change the element tag to any\nother appropriate element by setting the <code translate="no" class="notranslate text-nowrap">tag</code> prop to the desired element tag name.</p>\n<h2 id="variants"><span class="bd-content-title">Variants<a class="anchorjs-link" href="#variants" aria-label="Anchor"></a></span></h2>\n<p>Control the overall background variant with the <code translate="no" class="notranslate text-nowrap">bg-variant</code> prop ( set to <code translate="no" class="notranslate text-nowrap">info</code>, <code translate="no" class="notranslate text-nowrap">danger</code>,\n<code translate="no" class="notranslate text-nowrap">warning</code>, <code translate="no" class="notranslate text-nowrap">light</code>, <code translate="no" class="notranslate text-nowrap">dark</code>, etc), the border variant with the <code translate="no" class="notranslate text-nowrap">border-variant</code> prop, and the text\nvariant with <code translate="no" class="notranslate text-nowrap">text-variant</code> prop. All three props default to <code translate="no" class="notranslate text-nowrap">null</code>, which will instruct the\njumbotron to use the default styling.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-jumbotron</span> <span class="hljs-attr">bg-variant</span>=<span class="hljs-string">"info"</span> <span class="hljs-attr">text-variant</span>=<span class="hljs-string">"white"</span> <span class="hljs-attr">border-variant</span>=<span class="hljs-string">"dark"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:header</span>&gt;</span>BootstrapVue<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:lead</span>&gt;</span>\n      This is a simple hero unit, a simple jumbotron-style component for calling extra attention to\n      featured content or information.\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">hr</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"my-4"</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n      It uses utility classes for typography and spacing to space content out within the larger\n      container.\n    <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-jumbotron</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-jumbotron-variants.vue --&gt;</span></pre>\x3c!-- Component reference added automatically from component package.json --\x3e\n'}}]);