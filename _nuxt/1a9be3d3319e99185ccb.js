(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{542:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony import */ var _babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(43);\n/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(12);\n/* harmony import */ var core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_to_string__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var core_js_modules_es6_object_keys__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(88);\n/* harmony import */ var core_js_modules_es6_object_keys__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_object_keys__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var core_js_modules_es6_string_repeat__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(183);\n/* harmony import */ var core_js_modules_es6_string_repeat__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_string_repeat__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(13);\n/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(6);\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(vue__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(169);\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(lodash_debounce__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var codesandbox_lib_api_define__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(555);\n/* harmony import */ var codesandbox_lib_api_define__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(codesandbox_lib_api_define__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _utils_needs_transpiler__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(171);\n/* harmony import */ var _content__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(66);\n/* harmony import */ var _content__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(50);\nvar _content__WEBPACK_IMPORTED_MODULE_11___namespace = /*#__PURE__*/__webpack_require__.t(50, 1);\n\n\n\n\n\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n // --- Constants ---\n\nvar DEFAULT_HTML = \"<div>\\n  <b-button size=\\\"sm\\\" @click=\\\"toggle\\\">\\n    {{ show ? 'Hide' : 'Show' }} Alert\\n  </b-button>\\n  <b-alert\\n    v-model=\\\"show\\\"\\n    class=\\\"mt-3\\\"\\n    dismissible\\n    @dismissed=\\\"dismissed\\\"\\n  >\\n    Hello {{ name }}!\\n  </b-alert>\\n</div>\";\nvar DEFAULT_JS = \"{\\n  data() {\\n    return {\\n      name: 'BootstrapVue',\\n      show: true\\n    }\\n  },\\n  watch: {\\n    show(newVal) {\\n      console.log('Alert is now ' + (newVal ? 'visible' : 'hidden'))\\n    }\\n  },\\n  methods: {\\n    toggle() {\\n      console.log('Toggle button clicked')\\n      this.show = !this.show\\n    },\\n    dismissed() {\\n      console.log('Dismiss button clicked')\\n    }\\n  }\\n}\";\nvar storage = typeof window !== 'undefined' ? window.localStorage || null : null;\nvar STORAGE_KEY_PREFIX = 'BV_playground';\nvar STORAGE_KEYS = {\n  html: \"\".concat(STORAGE_KEY_PREFIX, \"_html\"),\n  js: \"\".concat(STORAGE_KEY_PREFIX, \"_js\"),\n  layout: \"\".concat(STORAGE_KEY_PREFIX, \"_layout\"),\n  timestamp: \"\".concat(STORAGE_KEY_PREFIX, \"_ts\") // Maximum age of localStorage before we revert back to defaults\n\n};\nvar STORAGE_MAX_RETENTION = 7 * 24 * 60 * 60 * 1000; // 7 days\n// --- Helper functions ---\n// Remove a node from it's parent's children\n\nvar removeNode = function removeNode(node) {\n  return node && node.parentNode && node.parentNode.removeChild(node);\n}; // Indent a value by the given count\n\n\nvar indent = function indent(value) {\n  var count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    indent: ' '\n  },\n      indent = _ref.indent;\n\n  if (count === 0) {\n    return value;\n  }\n\n  return value.replace(/^(?!\\s*$)/gm, indent.repeat(count));\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  data: function data() {\n    return {\n      html: '',\n      js: '',\n      logIdx: 1,\n      // Used as the \":key\" on console section for transition hooks\n      messages: [],\n      isOk: false,\n      vertical: false,\n      full: false,\n      loading: false\n    };\n  },\n  head: function head() {\n    var title = \"\".concat(this.title, \" | BootstrapVue\");\n    var description = 'Interactively play and test BootstrapVue components online.';\n    return {\n      title: title,\n      meta: [{\n        hid: 'og:title',\n        name: 'og:title',\n        property: 'og:title',\n        content: title\n      }, {\n        hid: 'og:description',\n        name: 'og:description',\n        property: 'og:description',\n        content: description\n      }, {\n        hid: 'description',\n        name: 'description',\n        content: description\n      }]\n    };\n  },\n  computed: {\n    title: function title() {\n      return 'Online Playground';\n    },\n    isDefault: function isDefault() {\n      // Check if editors contain default JS and Template\n      return this.js.trim() === DEFAULT_JS.trim() && this.html.trim() === DEFAULT_HTML.trim();\n    },\n    layout: function layout() {\n      return this.full ? 'full' : this.vertical ? 'vertical' : 'horizontal';\n    },\n    exportData: function exportData() {\n      var html = this.html.trim();\n      var js = this.js.trim() || '{}';\n      var extendedJs = js === '{}' ? \"{ el: '#app' }\" : js.replace(/^\\{/, \"{\\r\\n  el: '#app',\");\n      extendedJs = \"new Vue(\".concat(extendedJs, \")\");\n      extendedJs = \"window.onload = () => {\\r\\n\".concat(indent(extendedJs, 2), \"\\r\\n}\");\n      return {\n        html: html,\n        js: js,\n        css: 'body { padding: 1rem; }',\n        extendedHtml: \"<div id=\\\"app\\\">\\r\\n\".concat(indent(html, 2), \"\\r\\n</div>\"),\n        extendedJs: extendedJs,\n        externalCss: [\"//unpkg.com/bootstrap@\".concat(_content__WEBPACK_IMPORTED_MODULE_10__[/* bootstrapVersion */ \"a\"], \"/dist/css/bootstrap.min.css\"), \"//unpkg.com/bootstrap-vue@\".concat(_content__WEBPACK_IMPORTED_MODULE_11__[/* version */ \"d\"], \"/dist/bootstrap-vue.css\")],\n        externalJs: ['//unpkg.com/babel-polyfill/dist/polyfill.min.js', \"//unpkg.com/vue@\".concat(_content__WEBPACK_IMPORTED_MODULE_10__[/* vueVersion */ \"k\"], \"/dist/vue.min.js\"), \"//unpkg.com/bootstrap-vue@\".concat(_content__WEBPACK_IMPORTED_MODULE_11__[/* version */ \"d\"], \"/dist/bootstrap-vue.js\")]\n      };\n    },\n    codepenData: function codepenData() {\n      var _this$exportData = this.exportData,\n          css = _this$exportData.css,\n          extendedHtml = _this$exportData.extendedHtml,\n          extendedJs = _this$exportData.extendedJs,\n          externalCss = _this$exportData.externalCss,\n          externalJs = _this$exportData.externalJs;\n      var data = {\n        editors: '101',\n        layout: 'left',\n        // left, right, top\n        html_pre_processor: 'none',\n        css_pre_processor: 'none',\n        css_prefix: 'autoprefixer',\n        js_pre_processor: 'babel',\n        head: '<meta name=\"viewport\" content=\"width=device-width\">',\n        css_external: externalCss.join(';'),\n        js_external: externalJs.join(';'),\n        html: extendedHtml,\n        js: extendedJs,\n        css: css\n      };\n      return JSON.stringify(data);\n    },\n    codesandboxData: function codesandboxData() {\n      var _this$exportData2 = this.exportData,\n          html = _this$exportData2.html,\n          js = _this$exportData2.js,\n          css = _this$exportData2.css;\n      var vueContent = ['<template>', indent(html, 2), '</template>', '', '<style>', indent(css, 2), '</style>', '', '<script>', indent(\"export default \".concat(js), 2), // prettier-ignore\n      '<\\/script>' // eslint-disable-line\n      ].join('\\r\\n').replace(/\\\\\\//g, '/');\n      var htmlContent = '<div id=\"app\"></div>';\n      var jsContent = [\"import Vue from 'vue'\", \"import BootstrapVue from 'bootstrap-vue'\", \"import App from './App'\", '', \"import 'bootstrap/dist/css/bootstrap.css'\", \"import 'bootstrap-vue/dist/bootstrap-vue.css'\", '', 'Vue.use(BootstrapVue)', '', \"new Vue({ el: '#app', render: h => h(App) })\"].join('\\r\\n');\n      var dependencies = {\n        bootstrap: _content__WEBPACK_IMPORTED_MODULE_10__[/* bootstrapVersion */ \"a\"],\n        'bootstrap-vue': _content__WEBPACK_IMPORTED_MODULE_11__[/* version */ \"d\"],\n        vue: _content__WEBPACK_IMPORTED_MODULE_10__[/* vueVersion */ \"k\"]\n      };\n      return Object(codesandbox_lib_api_define__WEBPACK_IMPORTED_MODULE_8__[\"getParameters\"])({\n        files: {\n          'App.vue': {\n            content: vueContent\n          },\n          'index.html': {\n            content: htmlContent\n          },\n          'index.js': {\n            content: jsContent\n          },\n          'package.json': {\n            content: {\n              dependencies: dependencies\n            }\n          }\n        }\n      });\n    },\n    fakeConsole: function fakeConsole() {\n      var logger = this.log;\n      var _clear = this.clear;\n      var oConsole, oInfo, oLog, oWarn, oError, oClear;\n\n      try {\n        // Native console object & methods\n        oConsole = window.console;\n        oInfo = window.console.info;\n        oLog = window.console.log;\n        oWarn = window.console.warn;\n        oError = window.console.error;\n        oClear = window.console.clear;\n      } catch (e) {}\n\n      return {\n        info: function info() {\n          try {\n            logger.apply(void 0, ['info'].concat(Array.prototype.slice.call(arguments)));\n            oInfo.apply(oConsole, arguments);\n          } catch (e) {}\n        },\n        log: function log() {\n          try {\n            logger.apply(void 0, ['info'].concat(Array.prototype.slice.call(arguments)));\n            oLog.apply(oConsole, arguments);\n          } catch (e) {}\n        },\n        warn: function warn() {\n          try {\n            logger.apply(void 0, ['warning'].concat(Array.prototype.slice.call(arguments)));\n            oWarn.apply(oConsole, arguments);\n          } catch (e) {}\n        },\n        error: function error() {\n          try {\n            logger.apply(void 0, ['danger'].concat(Array.prototype.slice.call(arguments)));\n            oError.apply(oConsole, arguments);\n          } catch (e) {}\n        },\n        clear: function clear() {\n          try {\n            _clear();\n\n            oClear.apply(oConsole);\n          } catch (e) {}\n        }\n      };\n    }\n  },\n  watch: {\n    layout: function layout(newVal, oldVal) {\n      if (newVal !== oldVal) {\n        this.saveToStorage();\n      }\n    }\n  },\n  created: function created() {\n    // Create some non reactive properties\n    this.playVM = null;\n    this.contentUnWatch = null;\n\n    this.run = function () {}; // Default code \"transpiler\"\n\n\n    this.compiler = function (code) {\n      return code;\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      if (_utils_needs_transpiler__WEBPACK_IMPORTED_MODULE_9__[/* default */ \"a\"]) {\n        // Start the loading indicator\n        _this.loading = true;\n        window && window.$nuxt && window.$nuxt.$loading.start(); // Lazy load the babel transpiler\n\n        Promise.all(/* import() | compile-js */[__webpack_require__.e(1), __webpack_require__.e(0)]).then(__webpack_require__.bind(null, 533)).then(function (module) {\n          // Update compiler reference\n          _this.compiler = module.default; // Run the setup code\n\n          _this.doSetup(); // Stop the loading indicator\n\n\n          _this.loading = false;\n          window && window.$nuxt && window.$nuxt.$loading.finish();\n        });\n      } else {\n        _this.doSetup();\n      }\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.contentUnWatch) {\n      this.contentUnWatch();\n    }\n\n    if (!this.$isServer) {\n      this.destroyVM();\n    }\n  },\n  methods: {\n    doSetup: function doSetup() {\n      var _this2 = this;\n\n      // Create our debounced runner\n      this.run = lodash_debounce__WEBPACK_IMPORTED_MODULE_7___default()(this._run, 500); // Set up our editor content watcher\n\n      this.contentUnWatch = this.$watch(function () {\n        return \"\".concat(_this2.js.trim(), \"::\").concat(_this2.html.trim());\n      }, function (newVal, oldVal) {\n        _this2.run();\n      }); // Load our content into the editors\n\n      this.$nextTick(this.loadFromStorage);\n    },\n    destroyVM: function destroyVM() {\n      var vm = this.playVM;\n\n      if (vm) {\n        var parent;\n\n        try {\n          parent = vm.$parent;\n          vm.$destroy();\n          removeNode(vm.$el);\n          vm.$el.innerHTML = '';\n        } catch (err) {}\n\n        try {\n          parent.$destroy();\n        } catch (err) {}\n      }\n\n      this.playVM = vm = null;\n      this.$refs.result.innerHTML = '';\n    },\n    createVM: function createVM() {\n      var _this3 = this;\n\n      var playground = this;\n      var js = this.js.trim() || '{}';\n      var html = this.html.trim();\n      var options = {}; // Disable the export buttons\n\n      this.isOk = false; // Test and assign options JavaScript\n\n      try {\n        // Options are eval'ed in our variable scope, so we can override\n        // the \"global\" console reference just for the user app\n        var code = this.compiler(\";options = \".concat(js, \";\"));\n        /* eslint-disable no-eval */\n\n        eval(\"console = this.fakeConsole; \".concat(code));\n        /* eslint-enable no-eval */\n      } catch (err) {\n        this.errHandler(err, 'javascript');\n        window.console.error('Error in javascript', err);\n        return;\n      } // Sanitize template possibilities\n\n\n      if (!(html || typeof options.template === 'string' || typeof options.render === 'function')) {\n        this.errHandler('No template or render function provided', 'template');\n        return;\n      } else if (!html && typeof options.template === 'string' && options.template.charAt(0) === '#') {\n        this.errHandler('Do not set template to an element ID', 'template');\n        return;\n      }\n\n      if (options.el) {\n        this.errHandler('Do not set \"el\" property', 'javascript');\n        return;\n      }\n\n      if (options.render && typeof options.render !== 'function') {\n        this.errHandler('render must be a function', 'javascript');\n        return;\n      }\n\n      if (!options.render) {\n        options.template = \"<div id=\\\"playground-app\\\">\".concat(options.template || html, \"</div>\");\n      } else {\n        delete options.template;\n      } // Vue's errorCapture doesn't always handle errors in methods,\n      // so we wrap any methods with a try/catch handler so we can\n      // show the error in our GUI console\n      // Doesn't handle errors in async methods\n      // See: https://github.com/vuejs/vue/issues/8568\n\n\n      if (options.methods) {\n        Object.keys(options.methods).forEach(function (methodName) {\n          var fn = options.methods[methodName];\n\n          if (typeof fn !== 'function') {\n            _this3.errorHandler(\"TypeError: \".concat(methodName, \" is not a function\"), 'methods');\n          } else {\n            // Replace it with a wrapped method\n            options.methods[methodName] = function () {\n              try {\n                return fn.apply(this, arguments);\n              } catch (err) {\n                playground.errHandler(err, \"method \\\"\".concat(methodName, \"\\\"\"));\n              }\n            };\n          }\n        });\n      } // Try and buld the user app\n\n\n      try {\n        var holder = document.createElement('div');\n        this.$refs.result.appendChild(holder);\n        this.playVM = new vue__WEBPACK_IMPORTED_MODULE_6___default.a(Object(_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({}, options, {\n          el: holder,\n          // Router needed for tooltips/popovers so they hide when\n          // docs route changes\n          router: this.$router,\n          // We set a fake parent so we can capture most runtime and\n          // render errors (error boundary)\n          parent: new vue__WEBPACK_IMPORTED_MODULE_6___default.a({\n            template: '<span></span>',\n            errorCaptured: function errorCaptured(err, vm, info) {\n              // Pass error to playground error handler\n              playground.errHandler(err, info); // Don't propegate to parent/global error handler!\n\n              return false;\n            }\n          })\n        }));\n      } catch (err) {\n        this.destroyVM();\n        this.errHandler(err, 'app create');\n        return;\n      } // We got this far, so save the JS/HTML changes to\n      // localStorage and enable export buttons\n\n\n      this.isOk = true;\n      this.saveToStorage();\n    },\n    errHandler: function errHandler(err, info) {\n      this.log('danger', \"Error in \".concat(info, \": \").concat(String(err)));\n      this.destroyVM();\n    },\n    _run: function _run() {\n      if (this.$isServer) {\n        return;\n      } // Destroy old VM if exists\n\n\n      this.destroyVM(); // clear the log\n\n      this.clear(); // create and render the instance\n\n      this.createVM();\n    },\n    toggleVertical: function toggleVertical() {\n      this.vertical = !this.vertical;\n    },\n    toggleFull: function toggleFull() {\n      this.full = !this.full;\n    },\n    log: function log(tag) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      // We have to ignore props mutation warning due to a\n      // Vue.js bug when we have two instances\n      if (String(args[0]).indexOf('Avoid mutating a prop directly') !== -1) {\n        return;\n      }\n\n      var msg = args.map(String).join(' ');\n\n      if (this.messages.length && msg.indexOf('Error in render') !== -1 && msg === this.messages[0][1]) {\n        // Prevent duplicate render error messages\n        return;\n      }\n\n      if (this.messages.length > 10) {\n        this.messages.splice(10);\n      }\n\n      this.messages.unshift([tag, msg, this.logIdx++]);\n    },\n    clear: function clear() {\n      this.logIdx = 1;\n      this.messages.splice(0);\n    },\n    reset: function reset() {\n      var _this4 = this;\n\n      this.$bvModal.msgBoxConfirm('Are you sure that you want to reset to the playground to the default values?', {\n        title: 'Please Confirm Reset',\n        size: 'sm',\n        buttonSize: 'sm',\n        okTitle: 'YES',\n        cancelTitle: 'NO',\n        titleTag: 'h6',\n        headerClass: 'p-2',\n        footerClass: 'p-2',\n        hideHeaderClose: false,\n        centered: true\n      }).then(function (value) {\n        if (value) {\n          _this4.doReset();\n        }\n      }).catch(function (err) {\n        // An error occurred\n        console.log(err);\n      });\n    },\n    doReset: function doReset() {\n      var _this5 = this;\n\n      // Needed to trick codemirror component to reload contents\n      this.js = this.html = '';\n      this.$nextTick(function () {\n        _this5.js = DEFAULT_JS.trim();\n        _this5.html = DEFAULT_HTML.trim();\n\n        _this5.saveToStorage();\n      });\n    },\n    clearStorage: function clearStorage() {\n      if (!storage) {\n        return;\n      }\n\n      Object.keys(STORAGE_KEYS).forEach(function (key) {\n        storage.removeItem(key);\n      });\n    },\n    loadFromStorage: function loadFromStorage() {\n      if (!storage) {\n        this.js = DEFAULT_JS.trim();\n        this.html = DEFAULT_HTML.trim();\n        return;\n      }\n\n      var timestamp = parseInt(storage.getItem(STORAGE_KEYS.timestamp), 10) || 0;\n\n      if (Date.now() - timestamp > STORAGE_MAX_RETENTION) {\n        this.clearStorage();\n      }\n\n      this.html = storage.getItem(STORAGE_KEYS.html) || DEFAULT_HTML.trim();\n      this.js = storage.getItem(STORAGE_KEYS.js) || DEFAULT_JS.trim();\n      var layout = storage.getItem(STORAGE_KEYS.layout) || 'horizontal';\n\n      if (layout === 'full') {\n        this.full = true;\n      } else if (layout === 'vertical') {\n        this.vertical = true;\n        this.full = false;\n      } else if (layout === 'horizontal') {\n        this.vertical = false;\n        this.full = false;\n      }\n    },\n    saveToStorage: function saveToStorage() {\n      if (!storage) {\n        return;\n      }\n\n      try {\n        storage.setItem(STORAGE_KEYS.html, this.html);\n        storage.setItem(STORAGE_KEYS.js, this.js);\n        storage.setItem(STORAGE_KEYS.layout, this.layout);\n        storage.setItem(STORAGE_KEYS.timestamp, String(Date.now()));\n      } catch (err) {// Silently ignore errors on safari iOS private mode\n      }\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///542\n")},543:function(module,exports,__webpack_require__){eval("// extracted by extract-css-chunks-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kb2NzL3BhZ2VzL3BsYXkudnVlP2Q5NTMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiNTQzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IGV4dHJhY3QtY3NzLWNodW5rcy13ZWJwYWNrLXBsdWdpbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///543\n")},555:function(module,exports,__webpack_require__){"use strict";eval("\nexports.__esModule = true;\nvar define_1 = __webpack_require__(556);\nexports.getParameters = define_1.getParameters;\n//# sourceMappingURL=define.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29kZXNhbmRib3gvbGliL2FwaS9kZWZpbmUuanM/OWVmYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLEdBQXlDO0FBQ2hFO0FBQ0EiLCJmaWxlIjoiNTU1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xudmFyIGRlZmluZV8xID0gcmVxdWlyZShcImNvZGVzYW5kYm94LWltcG9ydC11dGlscy9saWIvYXBpL2RlZmluZVwiKTtcbmV4cG9ydHMuZ2V0UGFyYW1ldGVycyA9IGRlZmluZV8xLmdldFBhcmFtZXRlcnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWZpbmUuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///555\n")},556:function(module,exports,__webpack_require__){"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LZString = __webpack_require__(557);\nfunction compress(input) {\n    return LZString.compressToBase64(input)\n        .replace(/\\+/g, \"-\") // Convert '+' to '-'\n        .replace(/\\//g, \"_\") // Convert '/' to '_'\n        .replace(/=+$/, \"\"); // Remove ending '='\n}\nfunction getParameters(parameters) {\n    return compress(JSON.stringify(parameters));\n}\nexports.getParameters = getParameters;\n//# sourceMappingURL=define.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29kZXNhbmRib3gtaW1wb3J0LXV0aWxzL2xpYi9hcGkvZGVmaW5lLmpzPzdiZDMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RCxlQUFlLG1CQUFPLENBQUMsR0FBVztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNTU2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgTFpTdHJpbmcgPSByZXF1aXJlKFwibHotc3RyaW5nXCIpO1xuZnVuY3Rpb24gY29tcHJlc3MoaW5wdXQpIHtcbiAgICByZXR1cm4gTFpTdHJpbmcuY29tcHJlc3NUb0Jhc2U2NChpbnB1dClcbiAgICAgICAgLnJlcGxhY2UoL1xcKy9nLCBcIi1cIikgLy8gQ29udmVydCAnKycgdG8gJy0nXG4gICAgICAgIC5yZXBsYWNlKC9cXC8vZywgXCJfXCIpIC8vIENvbnZlcnQgJy8nIHRvICdfJ1xuICAgICAgICAucmVwbGFjZSgvPSskLywgXCJcIik7IC8vIFJlbW92ZSBlbmRpbmcgJz0nXG59XG5mdW5jdGlvbiBnZXRQYXJhbWV0ZXJzKHBhcmFtZXRlcnMpIHtcbiAgICByZXR1cm4gY29tcHJlc3MoSlNPTi5zdHJpbmdpZnkocGFyYW1ldGVycykpO1xufVxuZXhwb3J0cy5nZXRQYXJhbWV0ZXJzID0gZ2V0UGFyYW1ldGVycztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlZmluZS5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///556\n")},557:function(module,exports,__webpack_require__){eval('var __WEBPACK_AMD_DEFINE_RESULT__;// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.4\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";\nvar keyStrUriSafe = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return "";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+"===";\n    case 2 : return res+"==";\n    case 3 : return res+"=";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return "";\n    if (input == "") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return "";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + " ";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return "";\n    if (compressed == "") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(\'\'));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return "";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return "";\n    if (input == "") return null;\n    input = input.replace(/ /g, "+");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return "";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c="",\n        context_wc="",\n        context_w="",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== "") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join(\'\');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return "";\n    if (compressed == "") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = "",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return "";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return "";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join(\'\');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (true) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () { return LZString; }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///557\n')},558:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony import */ var _node_modules_extract_css_chunks_webpack_plugin_dist_loader_js_ref_5_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_5_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_oneOf_1_2_node_modules_vue_loader_lib_index_js_vue_loader_options_play_vue_vue_type_style_index_0_id_e3b0cbac_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(543);\n/* harmony import */ var _node_modules_extract_css_chunks_webpack_plugin_dist_loader_js_ref_5_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_5_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_oneOf_1_2_node_modules_vue_loader_lib_index_js_vue_loader_options_play_vue_vue_type_style_index_0_id_e3b0cbac_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_extract_css_chunks_webpack_plugin_dist_loader_js_ref_5_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_5_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_oneOf_1_2_node_modules_vue_loader_lib_index_js_vue_loader_options_play_vue_vue_type_style_index_0_id_e3b0cbac_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__);\n/* unused harmony reexport * */\n /* unused harmony default export */ var _unused_webpack_default_export = (_node_modules_extract_css_chunks_webpack_plugin_dist_loader_js_ref_5_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_5_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_oneOf_1_2_node_modules_vue_loader_lib_index_js_vue_loader_options_play_vue_vue_type_style_index_0_id_e3b0cbac_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kb2NzL3BhZ2VzL3BsYXkudnVlPzhhNDMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQXVhLENBQWdCLDZkQUFHLEVBQUMiLCJmaWxlIjoiNTU4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvZXh0cmFjdC1jc3MtY2h1bmtzLXdlYnBhY2stcGx1Z2luL2Rpc3QvbG9hZGVyLmpzPz9yZWYtLTUtb25lT2YtMS0wIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTUtb25lT2YtMS0xIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtb25lT2YtMS0yIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGxheS52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD1lM2IwY2JhYyZzY29wZWQ9dHJ1ZSZsYW5nPWNzcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvZXh0cmFjdC1jc3MtY2h1bmtzLXdlYnBhY2stcGx1Z2luL2Rpc3QvbG9hZGVyLmpzPz9yZWYtLTUtb25lT2YtMS0wIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTUtb25lT2YtMS0xIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtb25lT2YtMS0yIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGxheS52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD1lM2IwY2JhYyZzY29wZWQ9dHJ1ZSZsYW5nPWNzcyZcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///558\n")},632:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./docs/pages/play.vue?vue&type=template&id=e3b0cbac&scoped=true&\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'b-container\',{attrs:{"tag":"main"}},[_c(\'div\',{staticClass:"bd-content mb-4"},[_c(\'h1\',[_c(\'span\',{staticClass:"bd-content-title"},[_vm._v(_vm._s(_vm.title))])]),_vm._v(" "),_c(\'p\',{staticClass:"bd-lead"},[_vm._v("\\n      Here you can interactively play and test components with a fresh Vue.js instance. Please\\n      refer to the "),_c(\'b-link\',{attrs:{"to":"/docs"}},[_vm._v("Docs")]),_vm._v(" section for more information about\\n      available components and usage.\\n    ")],1)]),_vm._v(" "),_c(\'b-row\',[_c(\'b-col\',{staticClass:"mb-2 mb-md-0"},[(_vm.loading)?_c(\'b-alert\',{staticClass:"text-center",attrs:{"variant":"info","show":""}},[_vm._v("\\n        Loading JavaScript compiler...\\n      ")]):_c(\'b-btn\',{attrs:{"size":"sm","variant":"danger","disabled":_vm.isDefault},on:{"click":_vm.reset}},[_vm._v("\\n        Reset to default\\n      ")])],1),_vm._v(" "),(!_vm.loading)?_c(\'b-col\',{staticClass:"mt-2 mt-md-0",attrs:{"md":"auto"}},[_c(\'b\',{staticClass:"d-block d-sm-inline-block mr-sm-2 mb-1 mb-sm-0"},[_vm._v("Export to")]),_vm._v(" "),_c(\'b-form\',{staticClass:"d-inline-block mr-1 notranslate",attrs:{"translate":"no","method":"post","action":"https://codepen.io/pen/define","target":"_blank"}},[_c(\'input\',{attrs:{"type":"hidden","name":"data"},domProps:{"value":_vm.codepenData}}),_vm._v(" "),_c(\'b-btn\',{attrs:{"size":"sm","type":"submit","disabled":!_vm.isOk}},[_vm._v("CodePen")])],1),_vm._v(" "),_c(\'b-form\',{staticClass:"d-inline-block mr-1 notranslate",attrs:{"translate":"no","method":"post","action":"https://codesandbox.io/api/v1/sandboxes/define","target":"_blank"}},[_c(\'input\',{attrs:{"type":"hidden","name":"parameters"},domProps:{"value":_vm.codesandboxData}}),_vm._v(" "),_c(\'b-btn\',{attrs:{"size":"sm","type":"submit","disabled":!_vm.isOk}},[_vm._v("CodeSandbox")])],1),_vm._v(" "),_c(\'b-form\',{staticClass:"d-inline-block notranslate",attrs:{"translate":"no","method":"post","action":"https://jsfiddle.net/api/post/library/pure/","target":"_blank"}},[_c(\'input\',{attrs:{"type":"hidden","name":"html"},domProps:{"value":_vm.exportData.extendedHtml}}),_vm._v(" "),_c(\'input\',{attrs:{"type":"hidden","name":"js"},domProps:{"value":_vm.exportData.extendedJs}}),_vm._v(" "),_c(\'input\',{attrs:{"type":"hidden","name":"resources"},domProps:{"value":_vm.exportData.externalCss.concat( [_vm.exportData.externalJs]).join(\',\')}}),_vm._v(" "),_c(\'input\',{attrs:{"type":"hidden","name":"css"},domProps:{"value":_vm.exportData.css}}),_vm._v(" "),_c(\'input\',{attrs:{"type":"hidden","name":"js_wrap","value":"l"}}),_vm._v(" "),_c(\'b-btn\',{attrs:{"size":"sm","type":"submit","disabled":!_vm.isOk}},[_vm._v("JSFiddle")])],1)],1):_vm._e()],1),_vm._v(" "),(!_vm.loading)?_c(\'transition-group\',{staticClass:"row",attrs:{"tag":"div","name":"flip"}},[_c(\'b-col\',{key:"A",attrs:{"cols":_vm.full ? 12 : null}},[_c(\'transition-group\',{staticClass:"row",attrs:{"tag":"div","name":"flip"}},[_c(\'b-col\',{key:"A1",staticClass:"mt-3",attrs:{"md":_vm.vertical && !_vm.full ? 6 : 12,"sm":"12"}},[_c(\'b-card\',{attrs:{"no-body":""}},[_c(\'div\',{staticClass:"d-flex justify-content-between align-items-center",attrs:{"slot":"header"},slot:"header"},[_c(\'span\',{staticClass:"notranslate",attrs:{"translate":"no"}},[_vm._v("Template")]),_vm._v(" "),_c(\'b-btn\',{staticClass:"d-none d-md-inline-block",attrs:{"size":"sm","variant":"outline-info"},on:{"click":_vm.toggleFull}},[_c(\'span\',[_vm._v(_vm._s(_vm.full ? \'Split\' : \'Full\'))])])],1),_vm._v(" "),_c(\'codemirror\',{attrs:{"mode":"htmlmixed"},model:{value:(_vm.html),callback:function ($$v) {_vm.html=$$v},expression:"html"}})],1)],1),_vm._v(" "),_c(\'b-col\',{key:"A2",staticClass:"mt-3",attrs:{"md":_vm.vertical && !_vm.full ? 6 : 12,"sm":"12"}},[_c(\'b-card\',{attrs:{"no-body":""}},[_c(\'div\',{staticClass:"d-flex justify-content-between align-items-center",attrs:{"slot":"header"},slot:"header"},[_c(\'span\',{staticClass:"notranslate",attrs:{"translate":"no"}},[_vm._v("JS")]),_vm._v(" "),_c(\'b-btn\',{staticClass:"d-none d-md-inline-block",attrs:{"size":"sm","variant":"outline-info"},on:{"click":_vm.toggleFull}},[_c(\'span\',[_vm._v(_vm._s(_vm.full ? \'Split\' : \'Full\'))])])],1),_vm._v(" "),_c(\'codemirror\',{attrs:{"mode":"javascript"},model:{value:(_vm.js),callback:function ($$v) {_vm.js=$$v},expression:"js"}})],1)],1)],1)],1),_vm._v(" "),_c(\'b-col\',{key:"B",attrs:{"md":_vm.vertical || _vm.full ? 12 : 6,"sm":"12"}},[_c(\'b-row\',[_c(\'b-col\',{staticClass:"mt-3",attrs:{"cols":"12"}},[_c(\'b-card\',[_c(\'div\',{staticClass:"d-flex justify-content-between align-items-center",attrs:{"slot":"header"},slot:"header"},[_c(\'span\',[_vm._v("Result")]),_vm._v(" "),(!_vm.full)?_c(\'b-btn\',{staticClass:"d-none d-md-inline-block",attrs:{"size":"sm","variant":"outline-info"},on:{"click":_vm.toggleVertical}},[_c(\'span\',[_vm._v(_vm._s(_vm.vertical ? \'Horizontal\' : \'Vertical\'))])]):_vm._e()],1),_vm._v(" "),_c(\'div\',{ref:"result",staticClass:"notranslate",attrs:{"translate":"no"}})])],1),_vm._v(" "),_c(\'b-col\',{staticClass:"mt-3 notranslate",attrs:{"cols":"12","translate":"no"}},[_c(\'b-card\',{attrs:{"no-body":""}},[_c(\'div\',{staticClass:"d-flex justify-content-between align-items-center",attrs:{"slot":"header"},slot:"header"},[_c(\'span\',[_vm._v("Console")]),_vm._v(" "),(_vm.messages.length)?_c(\'b-btn\',{attrs:{"size":"sm","variant":"outline-danger"},on:{"click":_vm.clear}},[_c(\'span\',[_vm._v("Clear")])]):_vm._e()],1),_vm._v(" "),_c(\'transition-group\',{staticClass:"list-group list-group-flush play-log",attrs:{"tag":"ul","name":"flip-list"}},[(!_vm.messages.length)?_c(\'b-list-group-item\',{key:"empty-console"},[_vm._v("\\n                 \\n              ")]):_vm._e(),_vm._v(" "),_vm._l((_vm.messages),function(msg){return _c(\'b-list-group-item\',{key:("console-" + (msg[2])),staticClass:"py-2 d-flex"},[_c(\'b-badge\',{staticClass:"mr-1",staticStyle:{"font-size":"90%"},attrs:{"variant":msg[0]}},[_vm._v("\\n                  "+_vm._s(msg[0] === \'danger\' ? \'error\' : msg[0] === \'warning\' ? \'warn\' : \'log\')+"\\n                ")]),_vm._v(" "),_c(\'span\',{class:[("text-" + (msg[0])), \'text-monospace\', \'small\', \'d-block\'],staticStyle:{"white-space":"pre-wrap"}},[_vm._v(_vm._s(msg[1]))])],1)})],2)],1)],1)],1)],1)],1):_vm._e()],1)}\nvar staticRenderFns = []\n\n\n// CONCATENATED MODULE: ./docs/pages/play.vue?vue&type=template&id=e3b0cbac&scoped=true&\n\n// EXTERNAL MODULE: ./node_modules/babel-loader/lib??ref--2-0!./node_modules/vue-loader/lib??vue-loader-options!./docs/pages/play.vue?vue&type=script&lang=js&\nvar playvue_type_script_lang_js_ = __webpack_require__(542);\n\n// CONCATENATED MODULE: ./docs/pages/play.vue?vue&type=script&lang=js&\n /* harmony default export */ var pages_playvue_type_script_lang_js_ = (playvue_type_script_lang_js_["a" /* default */]); \n// EXTERNAL MODULE: ./docs/pages/play.vue?vue&type=style&index=0&id=e3b0cbac&scoped=true&lang=css&\nvar playvue_type_style_index_0_id_e3b0cbac_scoped_true_lang_css_ = __webpack_require__(558);\n\n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(22);\n\n// CONCATENATED MODULE: ./docs/pages/play.vue\n\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(componentNormalizer["a" /* default */])(\n  pages_playvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  "e3b0cbac",\n  null\n  \n)\n\n/* harmony default export */ var play = __webpack_exports__["default"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///632\n')}}]);