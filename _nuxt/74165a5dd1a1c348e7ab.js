(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{340:function(n,t){n.exports='<h1 id="dropdowns"><span class="bd-content-title">Dropdowns</span></h1>\n<p class="bd-lead">Dropdowns are toggleable, contextual overlays for displaying lists of links and actions in a\ndropdown menu format.</p>\n<p><code translate="no" class="notranslate">&lt;b-dropdown&gt;</code> (or known by its shorter alias of <code translate="no" class="notranslate">&lt;b-dd&gt;</code>) components are toggleable, contextual\noverlays for displaying lists of links and more. They&#39;re toggled by clicking (or pressing space or\nenter when focused), not by hovering; this is an\n<a href="http://markdotto.com/2012/02/27/bootstrap-explained-dropdowns/">intentional design decision</a>.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"dropdown-1"</span> <span class="hljs-attr">text</span>=<span class="hljs-string">"Dropdown Button"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"m-md-2"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span>&gt;</span>First Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span>&gt;</span>Second Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span>&gt;</span>Third Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-divider</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-divider</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">active</span>&gt;</span>Active action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">disabled</span>&gt;</span>Disabled action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown.vue --&gt;</span></pre><h2 id="button-content"><span class="bd-content-title">Button content<a class="anchorjs-link" href="#button-content" aria-label="Anchor"></a></span></h2>\n<p>You can customize the text of the dropdown button by using either the <code translate="no" class="notranslate">text</code> prop (shown in previous\nexamples), or use the <code translate="no" class="notranslate">button-content</code> slot instead of the <code translate="no" class="notranslate">text</code> prop. The <code translate="no" class="notranslate">button-content</code> slot\nallows you to use basic HTML and icons in the button content.</p>\n<p>If both the prop <code translate="no" class="notranslate">text</code> and slot <code translate="no" class="notranslate">button-content</code> are present, the slot <code translate="no" class="notranslate">button-content</code> will take\nprecedence.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">text</span>=<span class="hljs-string">"Button text via Prop"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>An item<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Another item<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"button-content"</span>&gt;</span>\n      Custom <span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>Content<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span> with <span class="hljs-tag">&lt;<span class="hljs-name">em</span>&gt;</span>HTML<span class="hljs-tag">&lt;/<span class="hljs-name">em</span>&gt;</span> via Slot\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>An item<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Another item<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-button-content.vue --&gt;</span></pre><h2 id="positioning"><span class="bd-content-title">Positioning<a class="anchorjs-link" href="#positioning" aria-label="Anchor"></a></span></h2>\n<p>Dropdown supports various positioning such as left and right aligned, dropdown and dropup, and\nsupports auto-flipping (dropdown to dropup, and vice-versa) when the menu would overflow off of the\nvisible screen area.</p>\n<h3 id="menu-alignment"><span class="bd-content-title">Menu alignment<a class="anchorjs-link" href="#menu-alignment" aria-label="Anchor"></a></span></h3>\n<p>The dropdown menu can either be left aligned (default) or right aligned with respect to the button\nabove it. To have the dropdown aligned on the right, set the <code translate="no" class="notranslate">right</code> prop.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"dropdown-left"</span> <span class="hljs-attr">text</span>=<span class="hljs-string">"Left align"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"primary"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"m-2"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Something else here<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"dropdown-right"</span> <span class="hljs-attr">right</span> <span class="hljs-attr">text</span>=<span class="hljs-string">"Right align"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"primary"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"m-2"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Something else here<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-right.vue --&gt;</span></pre><h3 id="dropup"><span class="bd-content-title">Dropup<a class="anchorjs-link" href="#dropup" aria-label="Anchor"></a></span></h3>\n<p>Turn your dropdown menu into a drop-up menu by setting the <code translate="no" class="notranslate">dropup</code> prop.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"dropdown-dropup"</span> <span class="hljs-attr">dropup</span> <span class="hljs-attr">text</span>=<span class="hljs-string">"Drop-Up"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"primary"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"m-2"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Something else here<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-dropup.vue --&gt;</span></pre><h3 id="drop-right-or-left"><span class="bd-content-title">Drop right or left<a class="anchorjs-link" href="#drop-right-or-left" aria-label="Anchor"></a></span></h3>\n<p>Turn your dropdown menu into a drop-right menu by setting the <code translate="no" class="notranslate">dropright</code> prop. Or, turn it into a\ndrop-left menu by setting the <code translate="no" class="notranslate">dropleft</code> right prop to true.</p>\n<p><code translate="no" class="notranslate">dropright</code> takes precedence over <code translate="no" class="notranslate">dropleft</code>. Neither <code translate="no" class="notranslate">dropright</code> or <code translate="no" class="notranslate">dropleft</code> have any effect if\n<code translate="no" class="notranslate">dropup</code> is set.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"dropdown-dropright"</span> <span class="hljs-attr">dropright</span> <span class="hljs-attr">text</span>=<span class="hljs-string">"Drop-Right"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"primary"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"m-2"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Something else here<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"dropdown-dropleft"</span> <span class="hljs-attr">dropleft</span> <span class="hljs-attr">text</span>=<span class="hljs-string">"Drop-Left"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"primary"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"m-2"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Something else here<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-dropright-dropleft.vue --&gt;</span></pre><h3 id="auto-flipping"><span class="bd-content-title">Auto &quot;flipping&quot;<a class="anchorjs-link" href="#auto-flipping" aria-label="Anchor"></a></span></h3>\n<p>By default, dropdowns may flip to the top, or to the bottom, based on their current position in the\nviewport. To disable this auto-flip feature, set the <code translate="no" class="notranslate">no-flip</code> prop.</p>\n<h3 id="menu-offset"><span class="bd-content-title">Menu offset<a class="anchorjs-link" href="#menu-offset" aria-label="Anchor"></a></span></h3>\n<p>Like to move your menu away from the toggle buttons a bit? Then use the <code translate="no" class="notranslate">offset</code> prop to specify the\nnumber of pixels to push right (or left when negative) from the toggle button:</p>\n<ul>\n<li>Specified as a number of pixels: positive for right shift, negative for left shift.</li>\n<li>Specify the distance in CSS units (i.e. <code translate="no" class="notranslate">0.3rem</code>, <code translate="no" class="notranslate">4px</code>, <code translate="no" class="notranslate">1.2em</code>, etc) passed as a string.</li>\n</ul>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"dropdown-offset"</span> <span class="hljs-attr">offset</span>=<span class="hljs-string">"25"</span> <span class="hljs-attr">text</span>=<span class="hljs-string">"Offset Dropdown"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"m-2"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Something else here<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-offset.vue --&gt;</span></pre><h3 id="boundary-constraint"><span class="bd-content-title">Boundary constraint<a class="anchorjs-link" href="#boundary-constraint" aria-label="Anchor"></a></span></h3>\n<p>By default, dropdowns are visually constrained to its scroll parent, which will suffice in most\nsituations. However, if you place a dropdown inside an element that has <code translate="no" class="notranslate">overflow: scroll</code> (or\nsimilar) set, the dropdown menu may - in some situations - get cut off. To get around this, you can\nspecify a boundary element via the <code translate="no" class="notranslate">boundary</code> prop. Supported values are <code translate="no" class="notranslate">&#39;scrollParent&#39;</code> (the\ndefault), <code translate="no" class="notranslate">&#39;viewport&#39;</code>, <code translate="no" class="notranslate">&#39;window&#39;</code> or a reference to an HTML element. The boundary value is passed\ndirectly to Popper.js&#39;s <code translate="no" class="notranslate">boundariesElement</code> configuration option.</p>\n<p><strong>Note:</strong> when <code translate="no" class="notranslate">boundary</code> is any value other than the default of <code translate="no" class="notranslate">&#39;scrollParent&#39;</code>, the style\n<code translate="no" class="notranslate">position: static</code> is applied to to the dropdown component&#39;s root element in order to allow the menu\nto &quot;break-out&quot; of its scroll container. In some situations this may affect your layout or\npositioning of the dropdown trigger button. In these cases you may need to wrap your dropdown inside\nanother element.</p>\n<h2 id="split-button-support"><span class="bd-content-title">Split button support<a class="anchorjs-link" href="#split-button-support" aria-label="Anchor"></a></span></h2>\n<p>Create a split dropdown button, where the left button provides standard <code translate="no" class="notranslate">click</code> event and link\nsupport, while the right hand side is the dropdown menu toggle button.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">split</span> <span class="hljs-attr">text</span>=<span class="hljs-string">"Split Dropdown"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"m-2"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Something else here...<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-split.vue --&gt;</span></pre><h3 id="split-button-link-support"><span class="bd-content-title">Split button link support<a class="anchorjs-link" href="#split-button-link-support" aria-label="Anchor"></a></span></h3>\n<p>The left split button defaults to an element of type <code translate="no" class="notranslate">&lt;button&gt;</code> (a <code translate="no" class="notranslate">&lt;b-button&gt;</code> to be exact). To\nconvert this button into a link or <code translate="no" class="notranslate">&lt;router-link&gt;</code>, specify the href via the <code translate="no" class="notranslate">split-href</code> prop or a\nrouter link <code translate="no" class="notranslate">to</code> value via the <code translate="no" class="notranslate">split-to</code> prop, while maintaining the look of a button.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">split</span> <span class="hljs-attr">split-href</span>=<span class="hljs-string">"#foo/bar"</span> <span class="hljs-attr">text</span>=<span class="hljs-string">"Split Link"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"m-2"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Something else here...<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-split-link.vue --&gt;</span></pre><h2 id="styling-options"><span class="bd-content-title">Styling options<a class="anchorjs-link" href="#styling-options" aria-label="Anchor"></a></span></h2>\n<p>Dropdowns support various props for styling the dropdown trigger button.</p>\n<h3 id="sizing"><span class="bd-content-title">Sizing<a class="anchorjs-link" href="#sizing" aria-label="Anchor"></a></span></h3>\n<p>Dropdowns work with trigger buttons of all sizes, including default and split dropdown buttons.</p>\n<p>Set the <code translate="no" class="notranslate">size</code> prop to either <code translate="no" class="notranslate">sm</code> for small button(s), or <code translate="no" class="notranslate">lg</code> for large button(s).</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"lg"</span> <span class="hljs-attr">text</span>=<span class="hljs-string">"Large"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"m-2"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Something else here<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"lg"</span> <span class="hljs-attr">split</span> <span class="hljs-attr">text</span>=<span class="hljs-string">"Large Split"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"m-2"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Something else here...<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"sm"</span> <span class="hljs-attr">text</span>=<span class="hljs-string">"Small"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"m-2"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Something else here...<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"sm"</span> <span class="hljs-attr">split</span> <span class="hljs-attr">text</span>=<span class="hljs-string">"Small Split"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"m-2"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Something else here...<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-sizes.vue --&gt;</span></pre><p><strong>Note:</strong> <em>changing the size of the button(s) does not affect the size of the menu items!</em></p>\n<h3 id="dropdown-color-variants"><span class="bd-content-title">Dropdown color variants<a class="anchorjs-link" href="#dropdown-color-variants" aria-label="Anchor"></a></span></h3>\n<p>The dropdown toggle button can have one of the standard Bootstrap contextual variants applied by\nsetting the prop <code translate="no" class="notranslate">variant</code> to <code translate="no" class="notranslate">success</code>, <code translate="no" class="notranslate">primary</code>, <code translate="no" class="notranslate">info</code>, <code translate="no" class="notranslate">danger</code>, <code translate="no" class="notranslate">link</code>, <code translate="no" class="notranslate">outline-dark</code>, etc.\n(or custom variants, if defined). The default variant is <code translate="no" class="notranslate">secondary</code>.</p>\n<p>See the <a href="/docs/reference/color-variants">Variant Reference</a> for a full list of built-in contextual\nvariants.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">text</span>=<span class="hljs-string">"Primary"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"primary"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"m-2"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Something else here<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">text</span>=<span class="hljs-string">"Success"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"success"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"m-2"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Something else here<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">text</span>=<span class="hljs-string">"Outline Danger"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"outline-danger"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"m-2"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Something else here<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-variants.vue --&gt;</span></pre><p>You can also apply arbitrary classes to the toggle button via the <code translate="no" class="notranslate">toggle-class</code> prop. This prop\naccepts either a string or array of strings.</p>\n<h3 id="split-button-color-variant"><span class="bd-content-title">Split button color variant<a class="anchorjs-link" href="#split-button-color-variant" aria-label="Anchor"></a></span></h3>\n<p>By default the left split button uses the same <code translate="no" class="notranslate">variant</code> as the <code translate="no" class="notranslate">toggle</code> button. You can give the\nsplit button its own variant via the <code translate="no" class="notranslate">split-variant</code> prop.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span>\n    <span class="hljs-attr">split</span>\n    <span class="hljs-attr">split-variant</span>=<span class="hljs-string">"outline-primary"</span>\n    <span class="hljs-attr">variant</span>=<span class="hljs-string">"primary"</span>\n    <span class="hljs-attr">text</span>=<span class="hljs-string">"Split Variant Dropdown"</span>\n    <span class="hljs-attr">class</span>=<span class="hljs-string">"m-2"</span>\n  &gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Something else here...<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-split-variant.vue --&gt;</span></pre><h3 id="dropdown-sub-component-color-variants"><span class="bd-content-title">Dropdown sub-component color variants<a class="anchorjs-link" href="#dropdown-sub-component-color-variants" aria-label="Anchor"></a></span></h3>\n<p>Many of the supported dropdown <a href="#dropdown-supported-sub-components">sub-components</a> provide a\n<code translate="no" class="notranslate">variant</code> prop for controlling their text color.</p>\n<h3 id="hidden-caret"><span class="bd-content-title">Hidden caret<a class="anchorjs-link" href="#hidden-caret" aria-label="Anchor"></a></span></h3>\n<p>The dropdown can be created with the toggle&#39;s caret visually hidden by setting the <code translate="no" class="notranslate">no-caret</code> prop\nto <code translate="no" class="notranslate">true</code>. This is useful when the dropdown is to be displayed as an icon.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"lg"</span>  <span class="hljs-attr">variant</span>=<span class="hljs-string">"link"</span> <span class="hljs-attr">toggle-class</span>=<span class="hljs-string">"text-decoration-none"</span> <span class="hljs-attr">no-caret</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"button-content"</span>&gt;</span>&amp;#x1f50d;<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"sr-only"</span>&gt;</span>Search<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#"</span>&gt;</span>Something else here...<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-hidden-caret.vue --&gt;</span></pre><p><strong>Note:</strong> The caret will always be shown when using <code translate="no" class="notranslate">split</code> mode.</p>\n<h2 id="lazy-dropdown"><span class="bd-content-title">Lazy dropdown<a class="anchorjs-link" href="#lazy-dropdown" aria-label="Anchor"></a></span></h2>\n<p><span class="badge badge-info small">NEW in 2.0.0-rc.26</span></p>\n<p>By default, <code translate="no" class="notranslate">&lt;b-dropdown&gt;</code> renders the menu contents in the DOM even when the menu is not shown.\nWhen there are a large number of dropdowns rendered on the same page, performance could be impacted\ndue to larger overall memory utilization. You can instruct <code translate="no" class="notranslate">&lt;b-dropdown&gt;</code> to render the menu\ncontents only when it is shown by setting the <code translate="no" class="notranslate">lazy</code> prop to true.</p>\n<h2 id="dropdown-supported-sub-components"><span class="bd-content-title">Dropdown supported sub-components<a class="anchorjs-link" href="#dropdown-supported-sub-components" aria-label="Anchor"></a></span></h2>\n<p>The following components can be placed inside of your dropdowns. Using any other component or markup\nmay break layout and/or keyboard navigation.</p>\n<div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table">\n<thead class="thead-default">\n<tr>\n<th>Sub-component</th>\n<th>Description</th>\n<th>Aliases</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code translate="no" class="notranslate">&lt;b-dropdown-item&gt;</code></td>\n<td>Action items that provide click, link, and <code translate="no" class="notranslate">&lt;router-link&gt;</code>/<code translate="no" class="notranslate">&lt;nuxt-link&gt;</code> functionality. Renders as an <code translate="no" class="notranslate">&lt;a&gt;</code> element by default.</td>\n<td><code translate="no" class="notranslate">&lt;b-dd-item&gt;</code></td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate">&lt;b-dropdown-item-button&gt;</code></td>\n<td>An alternative to <code translate="no" class="notranslate">&lt;b-dropdown-item&gt;</code> that renders a menu item using a <code translate="no" class="notranslate">&lt;button&gt;</code> element.</td>\n<td><code translate="no" class="notranslate">&lt;b-dropdown-item-btn&gt;</code>, <code translate="no" class="notranslate">&lt;b-dd-item-button&gt;</code>, <code translate="no" class="notranslate">&lt;b-dd-item-btn&gt;</code></td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate">&lt;b-dropdown-divider&gt;</code></td>\n<td>A divider / spacer which can be used to separate dropdown items.</td>\n<td><code translate="no" class="notranslate">&lt;b-dd-divider&gt;</code></td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate">&lt;b-dropdown-text&gt;</code></td>\n<td>Free flowing text content in a menu.</td>\n<td><code translate="no" class="notranslate">&lt;b-dd-text&gt;</code></td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate">&lt;b-dropdown-form&gt;</code></td>\n<td>For placing form controls within a dropdown menu.</td>\n<td><code translate="no" class="notranslate">&lt;b-dd-form&gt;</code></td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate">&lt;b-dropdown-group&gt;</code></td>\n<td>For grouping dropdown sub components with an optional header.</td>\n<td><code translate="no" class="notranslate">&lt;b-dd-group&gt;</code></td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate">&lt;b-dropdown-header&gt;</code></td>\n<td>A header item, used to help identify a group of dropdown items.</td>\n<td><code translate="no" class="notranslate">&lt;b-dd-header&gt;</code></td>\n</tr>\n</tbody></table>\n</div><p><strong>Note:</strong> <em>Nested sub-menus are <strong>not</strong> supported.</em></p>\n<h3 id="b-dropdown-item"><span class="bd-content-title"><code translate="no" class="notranslate">&lt;b-dropdown-item&gt;</code><a class="anchorjs-link" href="#b-dropdown-item" aria-label="Anchor"></a></span></h3>\n<p>The <code translate="no" class="notranslate">&lt;b-dropdown-item&gt;</code> is typically used to create a navigation link inside your menu. Use either\nthe <code translate="no" class="notranslate">href</code> prop or the <code translate="no" class="notranslate">to</code> prop (for router link support) to generate the appropriate navigation\nlink. If neither <code translate="no" class="notranslate">href</code> nor <code translate="no" class="notranslate">to</code> are provided, a standard <code translate="no" class="notranslate">&lt;a&gt;</code> link will be generated with an\n<code translate="no" class="notranslate">href</code> of <code translate="no" class="notranslate">#</code> (with an event handler that will prevent scroll to top behaviour by preventing the\ndefault link action).</p>\n<p>Disabled the dropdown item by setting the <code translate="no" class="notranslate">disabled</code> prop.</p>\n<h3 id="b-dropdown-item-button"><span class="bd-content-title"><code translate="no" class="notranslate">&lt;b-dropdown-item-button&gt;</code><a class="anchorjs-link" href="#b-dropdown-item-button" aria-label="Anchor"></a></span></h3>\n<p>Historically dropdown menu contents had to be links (<code translate="no" class="notranslate">&lt;b-dropdown-item&gt;</code>), but that&#39;s no longer the\ncase with Bootstrap v4. Now you can optionally create <code translate="no" class="notranslate">&lt;button&gt;</code> elements in your dropdowns by using\nthe <code translate="no" class="notranslate">&lt;b-dropdown-item-button&gt;</code> sub-component. <code translate="no" class="notranslate">&lt;b-dropdown-item-button&gt;</code> does not support the <code translate="no" class="notranslate">href</code>\nor <code translate="no" class="notranslate">to</code> props.</p>\n<p>Disabled the dropdown item button by setting the <code translate="no" class="notranslate">disabled</code> prop.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"dropdown-buttons"</span> <span class="hljs-attr">text</span>=<span class="hljs-string">"Dropdown using buttons as menu items"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"m-2"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>I\'m a button<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span> <span class="hljs-attr">active</span>&gt;</span>I\'m a active button<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span> <span class="hljs-attr">disabled</span>&gt;</span>I\'m a button, but disabled!<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>I don\'t look like a button, but I am!<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-item-buttons.vue --&gt;</span></pre><p>When the menu item doesn&#39;t trigger navigation, it is recommended to use the\n<code translate="no" class="notranslate">&lt;b-dropdown-item-button&gt;</code> sub-component.</p>\n<h3 id="b-dropdown-item-divider"><span class="bd-content-title"><code translate="no" class="notranslate">&lt;b-dropdown-item-divider&gt;</code><a class="anchorjs-link" href="#b-dropdown-item-divider" aria-label="Anchor"></a></span></h3>\n<p>Separate groups of related menu items with <code translate="no" class="notranslate">&lt;b-dropdown-divider&gt;</code>.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"dropdown-divider"</span> <span class="hljs-attr">text</span>=<span class="hljs-string">"Dropdown with divider"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"m-2"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>First item<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Second item<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-divider</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-divider</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Separated Item<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-item-divider.vue --&gt;</span></pre><h3 id="b-dropdown-text"><span class="bd-content-title"><code translate="no" class="notranslate">&lt;b-dropdown-text&gt;</code><a class="anchorjs-link" href="#b-dropdown-text" aria-label="Anchor"></a></span></h3>\n<p>Place any freeform text within a dropdown menu using the <code translate="no" class="notranslate">&lt;b-dropdown-text&gt;</code> sub component or use\ntext and use spacing utilities. Note that you&#39;ll likely need additional sizing styles to\nconstrain/set the menu width.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"dropdown-text"</span> <span class="hljs-attr">text</span>=<span class="hljs-string">"Dropdown with text"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"m-2"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-text</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"width: 240px;"</span>&gt;</span>\n      Some example text that\'s free-flowing within the dropdown menu.\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-text</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-text</span>&gt;</span>And this is more example text.<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-text</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-divider</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-divider</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>First item<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Second Item<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-text.vue --&gt;</span></pre><p><code translate="no" class="notranslate">&lt;b-dropdown-text&gt;</code> has the BootstrapVue custom class <code translate="no" class="notranslate">.b-dropdown-text</code> applied to it which sets\nsome basic styles which are suitable in most situations. By default it&#39;s width will be the same as\nthe widest <code translate="no" class="notranslate">&lt;b-dropdown-item&gt;</code> content. You may need to place additional styles or helper classes on\nthe component.</p>\n<p>By default <code translate="no" class="notranslate">&lt;b-dropdown-text&gt;</code> renders using tag <code translate="no" class="notranslate">&lt;p&gt;</code>. You can change the rendered tag by setting\nthe <code translate="no" class="notranslate">tag</code> prop to any valid HTML5 tag on the <code translate="no" class="notranslate">&lt;b-dropdown-text&gt;</code> sub-component.</p>\n<h3 id="b-dropdown-form"><span class="bd-content-title"><code translate="no" class="notranslate">&lt;b-dropdown-form&gt;</code><a class="anchorjs-link" href="#b-dropdown-form" aria-label="Anchor"></a></span></h3>\n<p>Dropdowns support basic forms. Put a <code translate="no" class="notranslate">&lt;b-dropdown-form&gt;</code> within a dropdown menu and place form\ncontrols within the <code translate="no" class="notranslate">&lt;b-dropdown-form&gt;</code>. The <code translate="no" class="notranslate">&lt;b-dropdown-form&gt;</code> is based on the\n<a href="/docs/components/form"><code translate="no" class="notranslate">&lt;b-form&gt;</code></a> component, and supports the same props and attributes as a\nregular form.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"dropdown-form"</span> <span class="hljs-attr">text</span>=<span class="hljs-string">"Dropdown with form"</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">"dropdown"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"m-2"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-form</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"Email"</span> <span class="hljs-attr">label-for</span>=<span class="hljs-string">"dropdown-form-email"</span> @<span class="hljs-attr">submit.stop.prevent</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span>\n            <span class="hljs-attr">id</span>=<span class="hljs-string">"dropdown-form-email"</span>\n            <span class="hljs-attr">size</span>=<span class="hljs-string">"sm"</span>\n            <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"email@example.com"</span>\n          &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"Password"</span> <span class="hljs-attr">label-for</span>=<span class="hljs-string">"dropdown-form-password"</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span>\n            <span class="hljs-attr">id</span>=<span class="hljs-string">"dropdown-form-password"</span>\n            <span class="hljs-attr">type</span>=<span class="hljs-string">"password"</span>\n            <span class="hljs-attr">size</span>=<span class="hljs-string">"sm"</span>\n            <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"Password"</span>\n          &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mb-3"</span>&gt;</span>Remember me<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"primary"</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"sm"</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">"onClick"</span>&gt;</span>Sign In<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-form</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-divider</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-divider</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>New around here? Sign up<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Forgot Password?<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-attr">methods</span>: {\n      onClick() {\n        <span class="hljs-comment">// Close the menu and (by passing true) return focus to the toggle button</span>\n        <span class="hljs-keyword">this</span>.$refs.dropdown.hide(<span class="hljs-literal">true</span>)\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-form.vue --&gt;</span></pre><p><code translate="no" class="notranslate">&lt;b-dropdown-form&gt;</code> has the BootstrapVue custom class <code translate="no" class="notranslate">.b-dropdown-form</code> applied to it which sets\nsome basic styles which are suitable in most situations. By default it&#39;s width will be the same as\nthe widest <code translate="no" class="notranslate">&lt;b-dropdown-item&gt;</code> content. You may need to place additional styles or helper classes on\nthe component.</p>\n<h3 id="b-dropdown-item-group"><span class="bd-content-title"><code translate="no" class="notranslate">&lt;b-dropdown-item-group&gt;</code><a class="anchorjs-link" href="#b-dropdown-item-group" aria-label="Anchor"></a></span></h3>\n<p>Group a set of dropdown sub components with an optional associated header. Place a\n<code translate="no" class="notranslate">&lt;b-dropdown-divider&gt;</code> between your <code translate="no" class="notranslate">&lt;b-dropdown-group&gt;</code> and other groups or non-grouped dropdown\ncontents</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"dropdown-header"</span> <span class="hljs-attr">text</span>=<span class="hljs-string">"Dropdown with group"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"m-2"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n      Non-grouped Item\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-divider</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-divider</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-group</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"dropdown-group-1"</span> <span class="hljs-attr">header</span>=<span class="hljs-string">"Group 1"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>First Grouped item<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Second Grouped Item<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-group</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"dropdown-group-2"</span> <span class="hljs-attr">header</span>=<span class="hljs-string">"Group 2"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>First Grouped item<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Second Grouped Item<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-divider</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-divider</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n      Another Non-grouped Item\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-item-group.vue --&gt;</span></pre><p>Using <code translate="no" class="notranslate">&lt;b-dropdown-group&gt;</code> instead of <code translate="no" class="notranslate">&lt;b-dropdown-header&gt;</code> is the recommended method for providing\naccessible grouped items with a header.</p>\n<h3 id="b-dropdown-item-header"><span class="bd-content-title"><code translate="no" class="notranslate">&lt;b-dropdown-item-header&gt;</code><a class="anchorjs-link" href="#b-dropdown-item-header" aria-label="Anchor"></a></span></h3>\n<p>Add a header to label sections of actions in any dropdown menu.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"dropdown-header"</span> <span class="hljs-attr">text</span>=<span class="hljs-string">"Dropdown with header"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"m-2"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-header</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"dropdown-header-label"</span>&gt;</span>\n      Dropdown header\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-header</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span> <span class="hljs-attr">aria-describedby</span>=<span class="hljs-string">"dropdown-header-label"</span>&gt;</span>\n      First item\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span> <span class="hljs-attr">aria-describedby</span>=<span class="hljs-string">"dropdown-header-label"</span>&gt;</span>\n      Second Item\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-item-header.vue --&gt;</span></pre><p>See Section <a href="#dropdown-headers-and-accessibility">Dropdown headers and accessibility</a> for details on\nmaking headers more accessible for users of assistive technologies.</p>\n<p>Using the <code translate="no" class="notranslate">&lt;b-dropdown-group&gt;</code> sub-component simplifies creating accessible grouped dropdown items\nwith an associated header.</p>\n<h4 id="closing-the-menu-via-form-interaction"><span class="bd-content-title">Closing the menu via form interaction<a class="anchorjs-link" href="#closing-the-menu-via-form-interaction" aria-label="Anchor"></a></span></h4>\n<p>Clicking buttons inside of a <code translate="no" class="notranslate">&lt;b-dropdown-form&gt;</code> will not automatically close the menu. If you need\nto close the menu using a button (or via the form submit event), call the <code translate="no" class="notranslate">hide()</code> method on the\n<code translate="no" class="notranslate">&lt;b-dropdown&gt;</code> instance, as is shown in the above example.</p>\n<p>The <code translate="no" class="notranslate">hide()</code> method accepts a single boolean argument. If the argument is <code translate="no" class="notranslate">true</code>, then focus will be\nreturned to the dropdown toggle button after the menu has closed. Otherwise the document will gain\nfocus once the menu is closed.</p>\n<h2 id="listening-to-dropdown-changes-via-root-events"><span class="bd-content-title">Listening to dropdown changes via $root events<a class="anchorjs-link" href="#listening-to-dropdown-changes-via-root-events" aria-label="Anchor"></a></span></h2>\n<p>To listen to any dropdown opening, use:</p>\n<pre class="hljs js text-monospace p-2 notranslate" translate="no"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  mounted() {\n    <span class="hljs-keyword">this</span>.$root.$on(<span class="hljs-string">\'bv::dropdown::show\'</span>, bvEvent =&gt; {\n      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'Dropdown is about to be shown\'</span>, bvEvent)\n    })\n  }\n}</pre><p>Refer to the <a href="/docs/components/dropdown#component-reference">Events</a> section of documentation for\nthe full list of events.</p>\n<h2 id="optionally-scoped-default-slot"><span class="bd-content-title">Optionally scoped default slot<a class="anchorjs-link" href="#optionally-scoped-default-slot" aria-label="Anchor"></a></span></h2>\n<p><span class="badge badge-info small">NEW in 2.0.0-rc.20</span></p>\n<p>The default slot is optionally scoped with the following scope available:</p>\n<div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table">\n<thead class="thead-default">\n<tr>\n<th>Property or Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code translate="no" class="notranslate">hide()</code></td>\n<td>Can be used to close the dropdown menu. Accepts an optional boolean argument, which if <code translate="no" class="notranslate">true</code> returns focus to the toggle button</td>\n</tr>\n</tbody></table>\n</div><h2 id="accessibility"><span class="bd-content-title">Accessibility<a class="anchorjs-link" href="#accessibility" aria-label="Anchor"></a></span></h2>\n<p>Providing a unique <code translate="no" class="notranslate">id</code> prop ensures ARIA compliance by automatically adding the appropriate\n<code translate="no" class="notranslate">aria-*</code> attributes in the rendered markup.</p>\n<p>The default ARIA role is set to <code translate="no" class="notranslate">menu</code>, but you can change this default to another role (such as\n<code translate="no" class="notranslate">navigation</code>) via the <code translate="no" class="notranslate">role</code> prop, depending on your user case.</p>\n<p>When a menu item doesn&#39;t trigger navigation, it is recommended to use the <code translate="no" class="notranslate">&lt;b-dropdown-item-button&gt;</code>\nsub-component (which is not announced as a link) instead of <code translate="no" class="notranslate">&lt;b-dropdown-item&gt;</code> (which is presented\nas a link to the user).</p>\n<h3 id="headers-and-accessibility"><span class="bd-content-title">Headers and accessibility<a class="anchorjs-link" href="#headers-and-accessibility" aria-label="Anchor"></a></span></h3>\n<p>When using <code translate="no" class="notranslate">&lt;b-dropdown-header&gt;</code> components in the dropdown menu, it is recommended to add an <code translate="no" class="notranslate">id</code>\nattribute to each of the headers, and then set the <code translate="no" class="notranslate">aria-describedby</code> attribute (set to the <code translate="no" class="notranslate">id</code>\nvalue of the associated header) on each following dropdown items under that header. This will\nprovide users of assistive technologies (i.e. sight-impaired users) additional context about the\ndropdown item:</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"dropdown-aria"</span> <span class="hljs-attr">text</span>=<span class="hljs-string">"Dropdown ARIA"</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">"primary"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"m-2"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-header</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"dropdown-header-1"</span>&gt;</span>Groups<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-header</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span> <span class="hljs-attr">aria-describedby</span>=<span class="hljs-string">"dropdown-header-1"</span>&gt;</span>Add<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span> <span class="hljs-attr">aria-describedby</span>=<span class="hljs-string">"dropdown-header-1"</span>&gt;</span>Delete<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-header</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"dropdown-header-2"</span>&gt;</span>Users<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-header</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span> <span class="hljs-attr">aria-describedby</span>=<span class="hljs-string">"dropdown-header-2"</span>&gt;</span>Add<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span> <span class="hljs-attr">aria-describedby</span>=<span class="hljs-string">"dropdown-header-2"</span>&gt;</span>Delete<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-divider</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-divider</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n      Something <span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>not<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span> associated with Users\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-aria.vue --&gt;</span></pre><p>As a simplified alternative, use the <code translate="no" class="notranslate">&lt;b-dropdown-group&gt;</code> instead to easily associate header text to\nthe contained dropdown sub-components.</p>\n<h3 id="keyboard-navigation"><span class="bd-content-title">Keyboard navigation<a class="anchorjs-link" href="#keyboard-navigation" aria-label="Anchor"></a></span></h3>\n<p>Dropdowns support keyboard navigation, emulating native <code translate="no" class="notranslate">&lt;select&gt;</code> behaviour.</p>\n<p>Note that <kbd class="notranslate" translate="no">DOWN</kbd> and <kbd class="notranslate" translate="no">UP</kbd> will not move focus into <code translate="no" class="notranslate">&lt;b-dropdown-form&gt;</code> sub\ncomponents, but users can still use <kbd class="notranslate" translate="no">TAB</kbd> or <kbd class="notranslate" translate="no">SHIFT</kbd>+<kbd class="notranslate" translate="no">TAB</kbd> to move into\nform controls within the menu.</p>\n<h2 id="implementation-notes"><span class="bd-content-title">Implementation notes<a class="anchorjs-link" href="#implementation-notes" aria-label="Anchor"></a></span></h2>\n<p><span class="badge badge-info small">NEW in 2.0.0-rc.19</span> The dropdown menu is rendered with\nsemantic <code translate="no" class="notranslate">&lt;ul&gt;</code> and <code translate="no" class="notranslate">&lt;li&gt;</code> elements for accessibility reasons. The <code translate="no" class="notranslate">.dropdown-menu</code> is the <code translate="no" class="notranslate">&lt;ul&gt;</code>\nelement, while dropdown items (items, buttons, text, form, headers, and dividers) are wrapped in an\n<code translate="no" class="notranslate">&lt;li&gt;</code> element. If creating custom items to place inside the dropdown menu, ensure they are wrapped\nwith a plain <code translate="no" class="notranslate">&lt;li&gt;</code>.</p>\n<p>On touch-enabled devices, opening a <code translate="no" class="notranslate">&lt;b-dropdown&gt;</code> adds empty (noop) <code translate="no" class="notranslate">mouseover</code> handlers to the\nimmediate children of the <code translate="no" class="notranslate">&lt;body&gt;</code> element. This admittedly ugly hack is necessary to work around a\n<a href="https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html">quirk in iOS&#39; event delegation</a>,\nwhich would otherwise prevent a tap anywhere outside of the dropdown from triggering the code that\ncloses the dropdown. Once the dropdown is closed, these additional empty <code translate="no" class="notranslate">mouseover</code> handlers are\nremoved.</p>\n<h2 id="see-also"><span class="bd-content-title">See also<a class="anchorjs-link" href="#see-also" aria-label="Anchor"></a></span></h2>\n<ul>\n<li><a href="/docs/components/nav#dropdown-support"><code translate="no" class="notranslate">&lt;b-nav-item-dropdown&gt;</code></a> for dropdown support inside\n<code translate="no" class="notranslate">&lt;b-nav&gt;</code> and <code translate="no" class="notranslate">&lt;n-navbar&gt;</code></li>\n<li><a href="/docs/reference/router-links">Router Link Support</a> reference for information about router-link\nspecific props available on <code translate="no" class="notranslate">&lt;b-dropdown-item&gt;</code></li>\n</ul>\n\x3c!-- Component reference added automatically from component package.json --\x3e\n'}}]);