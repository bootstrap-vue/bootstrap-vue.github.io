(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{536:function(n,e,o){"use strict";var t=o(3);e.a={name:"BDVMain",functional:!0,props:{tag:{type:String,default:"main"}},render:function(n,e){var o=e.props,data=e.data,l=e.children;return n(o.tag,Object(t.a)(data,{staticClass:"bd-main"}),[l])}}},537:function(n,e,o){"use strict";var t=o(3);e.a={name:"BDVSection",functional:!0,props:{tag:{type:String,default:"section"},play:{type:Boolean,default:!1}},render:function(n,e){var o=e.props,data=e.data,l=e.children,r=[];return o.play&&r.push({name:"play"}),n(o.tag,Object(t.a)(data,{class:["bd-content"],directives:r}),[l])}}},538:function(n,e,o){"use strict";o(13),o(17);var t=o(21),l=o(65);e.a={data:function(){return{scrollTimeout:null}},computed:{content:function(){return this.$route.params.slug&&this._content[this.$route.params.slug]||{}},headTitle:function(){var n=this.$route.name,title="",section="";return this.meta&&this.meta.title&&(title=this.meta.title),"docs-components-slug"===n?section="Components":"docs-directives-slug"===n?section="Directives":"docs-reference-slug"===n?section="Reference":"docs-misc-slug"===n&&(section="Misc"),[title,section,"BootstrapVue"].filter(Boolean).join(" | ")},headMeta:function(){var meta=[{hid:"og:title",name:"og:title",property:"og:title",content:this.headTitle}];if(this.meta&&this.meta.description){var desc=this.meta.description;meta.push({hid:"description",name:"description",content:desc}),meta.push({hid:"og:description",name:"og:description",property:"og:description",content:desc})}else l.b&&meta.push({hid:"description",name:"description",content:l.b});return meta}},head:function(){return{title:this.headTitle,meta:this.headMeta}},mounted:function(){var n=this;clearTimeout(this.scrollTimeout),this.scrollTimeout=null,this.focusScroll(),this.$nextTick(function(){n.$root.$emit("setTOC",n.readme||"",n.meta||null)})},updated:function(){clearTimeout(this.scrollTimeout),this.scrollTimeout=null,this.focusScroll()},beforeDestroy:function(){this.$root.$emit("setTOC","")},methods:{focusScroll:function(){var n=this,e=this.$route.hash;this.$nextTick(function(){var o;e&&(o=n.$el.querySelector('[id="'.concat(e.replace("#",""),'"]')),n.scrollIntoView(o)),o||(o=n.$el.querySelector("h1")),o&&(o.tabIndex=-1,o.focus())})},scrollIntoView:function(n){var e=this;if(n){var o=document.scrollingElement||document.documentElement||document.body;this.scrollTimeout=setTimeout(function(){Object(t.f)(o,Object(t.c)(n)-70,100),e.scrollTimeout=null},100)}}}}},553:function(n,e){n.exports='<h1 id="getting-started"><span class="bd-content-title">Getting Started</span></h1>\n<p class="bd-lead">Get started with BootstrapVue, based on the world&#39;s most popular framework - Bootstrap v4, for\nbuilding responsive, mobile-first sites using Vue.js.</p>\n<ul>\n<li><a href="https://vuejs.org/">Vue.js</a> <code>v2.6</code> is required, <code>v{{ vueVersion }}</code> is recommended</li>\n<li><a href="https://getbootstrap.com/">Bootstrap</a> <code>v4.3</code> is required, <code>v{{ bootstrapVersion }}</code> is\nrecommended</li>\n<li><a href="https://portal-vue.linusb.org/">PortalVue</a> <code>v2.1</code> is required by\n<a href="/docs/components/toast">Toasts</a>, <code>v{{ portalVueVersion }}</code> is recommended</li>\n<li><a href="https://jquery.com/">jQuery</a> is <strong>not</strong> required</li>\n</ul>\n<h2 id="prerequisites"><span class="bd-content-title">Prerequisites<a class="anchorjs-link" href="#prerequisites" aria-label="Anchor"></a></span></h2>\n<p>Before getting started with BootstrapVue, you should have general familiarity with Vue functionality\nand Bootstrap v4.3 CSS. If you are unfamiliar with Vue and/or Bootstrap, good starting points would\nbe:</p>\n<ul>\n<li><a href="https://vuejs.org/v2/guide/">Vue Guide</a></li>\n<li><a href="https://vuejs.org/v2/api/">Vue API</a></li>\n<li><a href="https://getbootstrap.com/">Bootstrap documentation</a></li>\n</ul>\n<p>In many of the examples in BootstrapVue&#39;s documentation, you may see CSS classes used such as <code>ml-2</code>,\n<code>py-1</code>, etc., which are Bootstrap v4.3 utility classes. You can find information on these classes in\nthe <a href="/docs/reference/utility-classes">Utility Classes</a> reference section.</p>\n<h2 id="using-module-bundlers"><span class="bd-content-title">Using module bundlers<a class="anchorjs-link" href="#using-module-bundlers" aria-label="Anchor"></a></span></h2>\n<p>If you are using module bundlers like <a href="https://webpack.js.org/">webpack</a>,\n<a href="https://rollupjs.org/">rollup.js</a>, etc you may prefer to directly include the package into your\nproject. To get started, use <code>yarn</code> or <code>npm</code> to get the latest version of Vue.js, BootstrapVue and\nBootstrap v4:</p>\n<pre class="hljs bash text-monospace p-2"><span class="hljs-comment"># With npm</span>\nnpm i vue bootstrap-vue bootstrap\n\n<span class="hljs-comment"># With yarn</span>\nyarn add vue bootstrap-vue bootstrap</pre><p>Then, register BootstrapVue plugin in your app entry point:</p>\n<pre class="hljs js text-monospace p-2"><span class="hljs-comment">// app.js</span>\n<span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">\'vue\'</span>\n<span class="hljs-keyword">import</span> BootstrapVue <span class="hljs-keyword">from</span> <span class="hljs-string">\'bootstrap-vue\'</span>\n\nVue.use(BootstrapVue)</pre><p>And import Bootstrap and BootstrapVue <code>css</code> files:</p>\n<pre class="hljs js text-monospace p-2"><span class="hljs-comment">// app.js</span>\n<span class="hljs-keyword">import</span> <span class="hljs-string">\'bootstrap/dist/css/bootstrap.css\'</span>\n<span class="hljs-keyword">import</span> <span class="hljs-string">\'bootstrap-vue/dist/bootstrap-vue.css\'</span></pre><p>Or import Bootstrap and BootstrapVue <code>scss</code> files via a single custom SCSS file:</p>\n<pre class="hljs scss text-monospace p-2"><span class="hljs-comment">// custom.scss</span>\n@<span class="hljs-keyword">import</span> <span class="hljs-string">\'node_modules/bootstrap/scss/bootstrap\'</span>;\n@<span class="hljs-keyword">import</span> <span class="hljs-string">\'node_modules/bootstrap-vue/src/index.scss\'</span>;</pre><pre class="hljs js text-monospace p-2"><span class="hljs-comment">// app.js</span>\n<span class="hljs-keyword">import</span> <span class="hljs-string">\'custom.scss\'</span></pre><p>Be sure to <code>@import</code> or define your custom variable values <em>before</em> including Bootstrap SCSS\n(<code>bootstrap.scss</code>), and include BootstrapVue SCSS (<code>bootstrap-vue.scss</code>) <em>after that</em> to ensure\nvariables are set up correctly.</p>\n<p>Make sure you place all the SCSS <code>@import</code>s into a single SCSS file, and import that single file\ninto your project. Importing individual SCSS files into your project will <strong>not</strong> share variable\nvalues and functions between files by default.</p>\n<p><strong>Note</strong>: <em>Requires webpack configuration to load CSS/SCSS files\n(<a href="https://webpack.js.org/guides/asset-management/#loading-css">official guide</a>)</em>.</p>\n<p>For information on theming Bootstrap, check out the <a href="/docs/reference/theming">Theming</a> reference\nsection.</p>\n<h3 id="aliasing-vue-import"><span class="bd-content-title">Aliasing Vue import<a class="anchorjs-link" href="#aliasing-vue-import" aria-label="Anchor"></a></span></h3>\n<p>BootstrapVue and PortalVue require access to the global <code>Vue</code> reference (via\n<code>import Vue from &#39;vue&#39;</code>).</p>\n<div class="alert alert-info mb-3">\n  <p class="mb-0">\n    If you are using a specific build of Vue (i.e. runtime-only vs. compiler + runtime), you will\n    need to set up an alias to <code>\'vue\'</code> in your bundler config to ensure that your\n    project, BootstrapVue and PortalVue are all using the same build version of Vue. If you are\n    seeing an error such as <code>"$attr and $listeners is readonly"</code>, or\n    <code>"Multiple instances of Vue detected"</code>, then you will need to set up an alias.\n  </p>\n</div>\n\n<p><strong>Example: Vue alias in webpack.config.js</strong></p>\n<pre class="hljs js text-monospace p-2"><span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-comment">// ...</span>\n  resolve: {\n    <span class="hljs-attr">alias</span>: {\n      <span class="hljs-comment">// If using the runtime only build</span>\n      vue$: <span class="hljs-string">\'vue/dist/vue.runtime.esm.js\'</span> <span class="hljs-comment">// \'vue/dist/vue.runtime.common.js\' for webpack 1</span>\n      <span class="hljs-comment">// Or if using full build of Vue (runtime + compiler)</span>\n      <span class="hljs-comment">// vue$: \'vue/dist/vue.esm.js\'      // \'vue/dist/vue.common.js\' for webpack 1</span>\n    }\n  }\n}</pre><p><strong>Note:</strong> If your project has multiple webpack config files (i.e. <code>webpack.config.js</code>,\n<code>webpack.renderer.config.js</code>, <code>webpack.vendor.config.js</code>, <code>webpack.server.config.js</code>,\n<code>webpack.client.config.js</code>, etc), you will need to set the appropriate alias in all of them.</p>\n<p>See the <a href="https://vuejs.org/v2/guide/installation.html#Runtime-Compiler-vs-Runtime-only">Vue.js</a>\nGuide for full details on setting up aliases for <a href="https://webpack.js.org/">webpack</a>,\n<a href="https://rollupjs.org/">rollup.js</a>, <a href="https://parceljs.org/">Parcel</a>, etc.</p>\n<h2 id="nuxtjs-module"><span class="bd-content-title">Nuxt.js module<a class="anchorjs-link" href="#nuxtjs-module" aria-label="Anchor"></a></span></h2>\n<p><a href="https://nuxtjs.org/">Nuxt.js</a> version <code>{{ nuxtVersion }}</code> (or greater) is recommended.</p>\n<p>Install dependencies:</p>\n<pre class="hljs bash text-monospace p-2"><span class="hljs-comment"># With npm</span>\nnpm i bootstrap-vue\n\n<span class="hljs-comment"># With yarn</span>\nyarn add bootstrap-vue</pre><p>Add <code>bootstrap-vue/nuxt</code> to modules section of <strong>nuxt.config.js</strong>.</p>\n<p>This will include both <code>boostrap.css</code> and <code>bootstrap-vue.css</code> default pre-compiled CSS.</p>\n<pre class="hljs js text-monospace p-2"><span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-attr">modules</span>: [<span class="hljs-string">\'bootstrap-vue/nuxt\'</span>]\n}</pre><p>If you are using custom Bootstrap SCSS, you can disable automatic inclusion of Bootstrap and\nBootstrapVue pre-compiled CSS files by setting the following option(s) to <code>false</code>:</p>\n<pre class="hljs js text-monospace p-2"><span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-attr">modules</span>: [<span class="hljs-string">\'bootstrap-vue/nuxt\'</span>],\n  <span class="hljs-attr">bootstrapVue</span>: {\n    <span class="hljs-attr">bootstrapCSS</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">// Or `css: false`</span>\n    bootstrapVueCSS: <span class="hljs-literal">false</span> <span class="hljs-comment">// Or `bvCSS: false`</span>\n  }\n}</pre><p>BootstrapVue&#39;s custom SCSS relies on Bootstrap SCSS variables and mixins. You can include Bootstrap\nand BootstrapVue SCSS in your project&#39;s custom SCSS file:</p>\n<pre class="hljs scss text-monospace p-2"><span class="hljs-comment">// custom.scss</span>\n\n<span class="hljs-comment">// Custom overrides go first</span>\n<span class="hljs-variable">$grid-breakpoints</span>: (\n  xs: <span class="hljs-number">0</span>,\n  sm: <span class="hljs-number">480px</span>,\n  md: <span class="hljs-number">640px</span>,\n  lg: <span class="hljs-number">992px</span>,\n  xl: <span class="hljs-number">1300px</span>\n);\n\n<span class="hljs-comment">// Then include the following</span>\n@<span class="hljs-keyword">import</span> <span class="hljs-string">\'bootstrap/scss/bootstrap.scss\'</span>;\n@<span class="hljs-keyword">import</span> <span class="hljs-string">\'bootstrap-vue/src/index.scss\'</span>;\n\n<span class="hljs-comment">// And define any of your custom overrides or additional CSS/SCSS here,</span>\n<span class="hljs-comment">// or via an @import</span></pre><p>In your app main entry point include the single custom SCSS file (when using <code>sass-loader</code>):</p>\n<pre class="hljs js text-monospace p-2"><span class="hljs-comment">// app.js</span>\n<span class="hljs-keyword">import</span> <span class="hljs-string">\'custom.scss\'</span></pre><h3 id="transformasseturls-with-nuxtjs"><span class="bd-content-title">transformAssetUrls with Nuxt.js<a class="anchorjs-link" href="#transformasseturls-with-nuxtjs" aria-label="Anchor"></a></span></h3>\n<p><span class="badge badge-info small">NEW in v2.0.0-rc.22</span> The BootstrapVue Nuxt plugin module\nwill automatically add in the BootstrapVue specific <a href="/docs/reference/images"><code>transformAssetUrls</code></a>\nimage <code>src</code> prop configuration for you.</p>\n<h3 id="tree-shaking-with-nuxtjs"><span class="bd-content-title">Tree shaking with Nuxt.js<a class="anchorjs-link" href="#tree-shaking-with-nuxtjs" aria-label="Anchor"></a></span></h3>\n<p><span class="badge badge-info small">ENHANCED in 2.0.0-rc.20</span></p>\n<p>If you wish to reduce your production bundle size because you only use a subset of the available\nBootstrapVue plugins, you can configure the list of BootstrapVue <code>componentPlugins</code> or\n<code>directivePlugins</code> you want to globally install in your Nuxt.js project.</p>\n<pre class="hljs js text-monospace p-2"><span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-attr">modules</span>: [<span class="hljs-string">\'bootstrap-vue/nuxt\'</span>],\n  <span class="hljs-attr">bootstrapVue</span>: {\n    <span class="hljs-attr">componentPlugins</span>: [\n      <span class="hljs-string">\'LayoutPlugin\'</span>,\n      <span class="hljs-string">\'FormPlugin\'</span>,\n      <span class="hljs-string">\'FormCheckboxPlugin\'</span>,\n      <span class="hljs-string">\'FormInputPlugin\'</span>,\n      <span class="hljs-string">\'FormRadioPlugin\'</span>,\n      <span class="hljs-string">\'ToastPlugin\'</span>,\n      <span class="hljs-string">\'ModalPlugin\'</span>\n    ],\n    <span class="hljs-attr">directivePlugins</span>: [<span class="hljs-string">\'VBPopoverPlugin\'</span>, <span class="hljs-string">\'VBTooltipPlugin\'</span>, <span class="hljs-string">\'VBScrollspyPlugin\'</span>]\n  }\n}</pre><p><span class="badge badge-info small">NEW in 2.0.0-rc.20</span> There are two additional helper\nplugins for providing the <code>$bvModal</code> and <code>$bvToast</code> injections (if you are not using the\n<code>ModalPlugin</code> or <code>ToastPlugin</code> plugins) that are available in the <code>componentPlugins</code> option:</p>\n<ul>\n<li><code>BVModalPlugin</code> - provides the injection <code>$bvModal</code> for generating\n<a href="/docs/components/modal#modal-message-boxes">message boxes</a>.</li>\n<li><code>BVToastPlugin</code> - provides the injection <code>$bvToast</code> for generating\n<a href="/docs/components/toast#toasts-on-demand">on demand toasts</a>.</li>\n</ul>\n<p><span class="badge badge-info small">NEW in 2.0.0-rc.20</span> You can also optionally import\nindividual components and/or directives, by configuring the list of BootstrapVue <code>components</code> or\n<code>directives</code> you want to globally install in your Nuxt.js project.</p>\n<pre class="hljs js text-monospace p-2"><span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-attr">modules</span>: [<span class="hljs-string">\'bootstrap-vue/nuxt\'</span>],\n  <span class="hljs-attr">bootstrapVue</span>: {\n    <span class="hljs-attr">components</span>: [<span class="hljs-string">\'BContainer\'</span>, <span class="hljs-string">\'BRow\'</span>, <span class="hljs-string">\'BCol\'</span>, <span class="hljs-string">\'BFormInput\'</span>, <span class="hljs-string">\'BButton\'</span>, <span class="hljs-string">\'BTable\'</span>, <span class="hljs-string">\'BModal\'</span>],\n    <span class="hljs-attr">directives</span>: [<span class="hljs-string">\'VBModal\'</span>, <span class="hljs-string">\'VBPopover\'</span>, <span class="hljs-string">\'VBTooltip\'</span>, <span class="hljs-string">\'VBScrollspy\'</span>]\n  }\n}</pre><p>Feel free to mix and match plugin imports with individual component and directive imports.</p>\n<p>Refer to the reference section at the bottom of each of the <a href="/docs/components">component</a> and\n<a href="/docs/directives">directive</a> docs for details on the plugin names available (and which components\nand directives are included in each plugin) and component and/or directive import names.</p>\n<p>Note that when importing individual components, any component aliases will <strong>not</strong> be available.</p>\n<div class="alert alert-info">\n  <p class="mb-0">\n    <b>Note:</b> Optimal tree shaking only works when your Nuxt.js app is in <code>production</code>\n    mode. You may notice larger bundle sizes when not in `production` mode (i.e. `dev` mode).\n  </p>\n</div>\n\n<p>Do not use the Nuxt module If you want to import individual BootstrapVue components into <em>specific</em>\npages and/or components of your Nuxt app. Instead follow the\n<a href="#using-module-bundlers">module bundlers</a> section above as well as the\n<a href="#selective-component-and-directive-inclusion-in-module-bundlers">selective import</a> sections below.</p>\n<h3 id="passing-custom-bootstrapvue-config-with-nuxtjs"><span class="bd-content-title">Passing custom BootstrapVue config with Nuxt.js<a class="anchorjs-link" href="#passing-custom-bootstrapvue-config-with-nuxtjs" aria-label="Anchor"></a></span></h3>\n<p>If you need to pass a custom\n<a href="/docs/misc/settings#default-bootstrapvue-configuration">BootstrapVue configuration</a>, you may do so\nby setting the <code>config</code> property in your <code>nuxt.config.js</code>:</p>\n<pre class="hljs js text-monospace p-2"><span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-attr">modules</span>: [<span class="hljs-string">\'bootstrap-vue/nuxt\'</span>],\n  <span class="hljs-attr">bootstrapVue</span>: {\n    <span class="hljs-attr">config</span>: {\n      <span class="hljs-comment">// Custom config options here</span>\n    }\n  }\n}</pre><h3 id="using-pretranspiled-version-of-bootstrapvue-for-nuxtjs"><span class="bd-content-title">Using pretranspiled version of BootstrapVue for Nuxt.js<a class="anchorjs-link" href="#using-pretranspiled-version-of-bootstrapvue-for-nuxtjs" aria-label="Anchor"></a></span></h3>\n<p>Nuxt.js module uses the precompiled versions of BootstrapVue for faster development builds and the\nsource (<code>src/</code>) of BootstrapVue for higher quality production builds.</p>\n<p>You can override this option using <code>usePretranspiled</code> option. Setting to <code>true</code> always uses the\npre-transpiled versions, while setting it to <code>false</code> will always use <code>src/</code>. By default\n<code>usePretranspiled</code> is enabled in development mode only. You should not need to use this option as\nthe default is most optimal for performance.</p>\n<h2 id="vue-cli-2"><span class="bd-content-title">Vue CLI 2<a class="anchorjs-link" href="#vue-cli-2" aria-label="Anchor"></a></span></h2>\n<p><span class="badge badge-warning small">DEPRECATED</span> Use <a href="#vue-cli-3">Vue CLI 3</a> instead.</p>\n<p>BootstrapVue has two Vue CLI templates available:</p>\n<ul>\n<li><a href="https://github.com/bootstrap-vue/webpack-simple">webpack-simple</a>: Quick scaffold for a proof of\nconcept or small app</li>\n<li><a href="https://github.com/bootstrap-vue/webpack">webpack</a>: Larger, production ready template with more\noptions</li>\n</ul>\n<pre class="hljs bash text-monospace p-2"><span class="hljs-comment"># Ensure Vue CLI is installed and up to date</span>\nnpm i -g vue-cli\n\n<span class="hljs-comment"># Initialize a BootstrapVue project in the directory \'my-project\'</span>\nvue init bootstrap-vue/webpack-simple my-project\n\n<span class="hljs-comment"># Change into the directory</span>\n<span class="hljs-built_in">cd</span> my-project\n\n<span class="hljs-comment"># Install dependencies</span>\nnpm i\n\n<span class="hljs-comment"># Fire up the dev server with HMR</span>\nnpm run dev</pre><p>You can repeat the commands above replacing <code>bootstrap-vue/webpack-simple</code> with\n<code>bootstrap-vue/webpack</code> for the webpack template.</p>\n<h2 id="vue-cli-3"><span class="bd-content-title">Vue CLI 3<a class="anchorjs-link" href="#vue-cli-3" aria-label="Anchor"></a></span></h2>\n<p>Unlike V2, Vue CLI 3 doesn&#39;t use templates.</p>\n<p>Create a new project in the directory <code>my-project</code>:</p>\n<pre class="hljs bash text-monospace p-2">npx @vue/cli create my-project</pre><p>Enter the <code>my-project</code> directory and install <code>bootstrap-vue</code>:</p>\n<pre class="hljs bash text-monospace p-2">npm i bootstrap-vue</pre><p>Under the hood, Vue CLI uses webpack, so we can register the BootstrapVue plugin as with the webpack\ninstructions.</p>\n<pre class="hljs js text-monospace p-2"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">\'vue\'</span>\n<span class="hljs-keyword">import</span> BootstrapVue <span class="hljs-keyword">from</span> <span class="hljs-string">\'bootstrap-vue\'</span>\n\n<span class="hljs-keyword">import</span> <span class="hljs-string">\'bootstrap/dist/css/bootstrap.css\'</span>\n<span class="hljs-keyword">import</span> <span class="hljs-string">\'bootstrap-vue/dist/bootstrap-vue.css\'</span>\n\nVue.use(BootstrapVue)</pre><p>For additional configuration for Vue CLI 3 for using project relative paths for image src props on\nvarious BootstrapVue components, refer to the Vue CLI 3 section of the\n<a href="/docs/reference/images#vue-cli-3-support">Image Src Resolving</a> reference page.</p>\n<h3 id="vue-cli-3-plugin"><span class="bd-content-title">Vue CLI 3 plugin<a class="anchorjs-link" href="#vue-cli-3-plugin" aria-label="Anchor"></a></span></h3>\n<p>As an alternative, you can use the\n<a href="https://github.com/GregYankovoy/vue-cli-plugin-bootstrap-vue">Bootstrap-Vue Vue CLI 3 plugin</a> to\nhelp you configure your app.</p>\n<pre class="hljs bash text-monospace p-2">vue create my-app\n<span class="hljs-built_in">cd</span> my-app\nvue add bootstrap-vue</pre><p>This will create a new app with basic BootstrapVue settings to get your project started.</p>\n<p>In the future this plugin will provide options for more advanced configurations and templates.</p>\n<h2 id="selective-component-and-directive-inclusion-in-module-bundlers"><span class="bd-content-title">Selective component and directive inclusion in module bundlers<a class="anchorjs-link" href="#selective-component-and-directive-inclusion-in-module-bundlers" aria-label="Anchor"></a></span></h2>\n<p><span class="badge badge-info small">SIMPLIFIED in 2.0.0-rc.20</span></p>\n<p>When using a module bundler you can optionally import only specific components groups (plugins),\ncomponents and/or directives.</p>\n<div class="alert alert-info">\n  <p class="mb-0">\n    <b>Note:</b> Optimal tree shaking only works when webpack 4 is in\n    <a href="https://webpack.js.org/guides/tree-shaking"><code>production</code></a> mode and\n    javascript minification is enabled.\n  </p>\n</div>\n\n<h3 id="component-groups-and-directives-as-vue-plugins"><span class="bd-content-title">Component groups and directives as Vue plugins<a class="anchorjs-link" href="#component-groups-and-directives-as-vue-plugins" aria-label="Anchor"></a></span></h3>\n<p><span class="badge badge-info small">CHANGED in 2.0.0-rc.22</span></p>\n<p>You can import component groups and directives as Vue plugins by importing from the <code>components</code> or\n<code>directives</code> directory:</p>\n\x3c!-- eslint-disable import/first, import/no-duplicates --\x3e\n\n<pre class="hljs js text-monospace p-2"><span class="hljs-comment">// This imports all the layout components such as &lt;b-container&gt;, &lt;b-row&gt;, &lt;b-col&gt;:</span>\n<span class="hljs-keyword">import</span> { LayoutPlugin } <span class="hljs-keyword">from</span> <span class="hljs-string">\'bootstrap-vue\'</span>\nVue.use(LayoutPlugin)\n\n<span class="hljs-comment">// This imports &lt;b-modal&gt; as well as the v-b-modal directive as a plugin:</span>\n<span class="hljs-keyword">import</span> { ModalPlugin } <span class="hljs-keyword">from</span> <span class="hljs-string">\'bootstrap-vue\'</span>\nVue.use(ModalPlugin)\n\n<span class="hljs-comment">// This imports &lt;b-card&gt; along with all the &lt;b-card-*&gt; sub-components as a plugin:</span>\n<span class="hljs-keyword">import</span> { CardPlugin } <span class="hljs-keyword">from</span> <span class="hljs-string">\'bootstrap-vue\'</span>\nVue.use(CardPlugin)\n\n<span class="hljs-comment">// This imports directive v-b-scrollspy as a plugin:</span>\n<span class="hljs-keyword">import</span> { VBScrollspyPlugin } <span class="hljs-keyword">from</span> <span class="hljs-string">\'bootstrap-vue\'</span>\nVue.use(VBScrollspyPlugin)</pre><p>When importing as plugins, all subcomponents and related directives are imported in most cases. i.e.\nWhen importing <code>&lt;b-nav&gt;</code>, all the <code>&lt;nav-*&gt;</code> sub components are also included, as well all dropdown\nsub components. Component shorthand aliases (if any) are also included in the plugin. Refer to the\ncomponent and directive documentation for details.</p>\n<p>There are two additional helper plugins for providing the <code>$bvModal</code> and <code>$bvToast</code> injections (if\nyou are not using the <code>ModalPlugin</code> or <code>ToastPlugin</code> plugins) which are available for import from\n<code>&#39;bootstrap-vue&#39;</code>:</p>\n<ul>\n<li><code>BVModalPlugin</code> - provides the injection <code>$bvModal</code> for generating\n<a href="/docs/components/modal#modal-message-boxes">message boxes</a>.</li>\n<li><code>BVToastPlugin</code> - provides the injection <code>$bvToast</code> for generating\n<a href="/docs/components/toast#toasts-on-demand">on demand toasts</a>.</li>\n</ul>\n<h3 id="individual-components-and-directives"><span class="bd-content-title">Individual components and directives<a class="anchorjs-link" href="#individual-components-and-directives" aria-label="Anchor"></a></span></h3>\n<p><span class="badge badge-info small">CHANGED in 2.0.0-rc.22</span></p>\n<p>If you would like to only pull in a specific component or set of components, you can do this by\ndirectly importing those components.</p>\n<p>To cherry pick a component/directive, start by importing it in the file where it is being used:</p>\n\x3c!-- eslint-disable no-unused-vars --\x3e\n\n<pre class="hljs js text-monospace p-2"><span class="hljs-comment">// Place all imports from \'bootstrap-vue\' in a single import</span>\n<span class="hljs-comment">// statement for optimal bundle sizes</span>\n<span class="hljs-keyword">import</span> { BModal, VBModal } <span class="hljs-keyword">from</span> <span class="hljs-string">\'bootstrap-vue\'</span></pre><p>Then add it to your component definition:</p>\n\x3c!-- eslint-disable no-undef --\x3e\n\n<pre class="hljs js text-monospace p-2">Vue.component(<span class="hljs-string">\'my-component\'</span>, {\n  <span class="hljs-attr">components</span>: {\n    <span class="hljs-string">\'b-modal\'</span>: BModal\n  },\n  <span class="hljs-attr">directives</span>: {\n    <span class="hljs-comment">// Note that Vue automatically prefixes directive names with `v-`</span>\n    <span class="hljs-string">\'b-modal\'</span>: VBModal\n  }\n  <span class="hljs-comment">// ...</span>\n})</pre><p>Or register them globally:</p>\n\x3c!-- eslint-disable no-undef --\x3e\n\n<pre class="hljs js text-monospace p-2">Vue.component(<span class="hljs-string">\'b-modal\'</span>, BModal)\n<span class="hljs-comment">// Note that Vue automatically prefixes directive names with `v-`</span>\nVue.directive(<span class="hljs-string">\'b-modal\'</span>, VBModal)</pre><p>Vue allows for various component and directive name syntaxes here, so feel free to utilize\n<samp>kebab-casing</samp> (shown), <samp>camelCasing</samp>, <samp>PascalCasing</samp>, and/or\nobject property shorthand (components only).</p>\n<h2 id="browser"><span class="bd-content-title">Browser<a class="anchorjs-link" href="#browser" aria-label="Anchor"></a></span></h2>\n<p>Add the Boostrap and BootstrapVue CSS URLs in your HTML <code>&lt;head&gt;</code> section, followed by the required\nJavaScript files.</p>\n<p>When supporting older browsers (see <a href="#browser-support">Browser Support</a> below), you will need to\ninclude a polyfill for handling modern JavaScript features before loading Vue and BoostrapVue\nJavaScript files.</p>\n<pre class="hljs html text-monospace p-2"><span class="hljs-comment">&lt;!-- Add this to &lt;head&gt; --&gt;</span>\n\n<span class="hljs-comment">&lt;!-- Load required Bootstrap and BootstrapVue CSS --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/css"</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"stylesheet"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"//unpkg.com/bootstrap/dist/css/bootstrap.min.css"</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/css"</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"stylesheet"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"//unpkg.com/bootstrap-vue@latest/dist/bootstrap-vue.min.css"</span> /&gt;</span>\n\n<span class="hljs-comment">&lt;!-- Load polyfills to support older browsers --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"//polyfill.io/v3/polyfill.min.js?features=es2015%2CMutationObserver"</span> <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">"anonymous"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- Load Vue followed by BootstrapVue --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"//unpkg.com/vue@latest/dist/vue.min.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"//unpkg.com/bootstrap-vue@latest/dist/bootstrap-vue.min.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></pre><h2 id="build-variants"><span class="bd-content-title">Build variants<a class="anchorjs-link" href="#build-variants" aria-label="Anchor"></a></span></h2>\n<p>Choosing the best variant for your build environment / packager helps less bundle sizes. If your\nbundler supports es modules, it will automatically prefer it over commonjs.</p>\n<div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table">\n<thead class="thead-default">\n<tr>\n<th>Variant</th>\n<th>Environments</th>\n<th>Package path</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>ESM module</strong></td>\n<td>webpack 2+ / rollup.js</td>\n<td><code>esm/index.js</code></td>\n</tr>\n<tr>\n<td><strong>ESM bundle</strong></td>\n<td>webpack 2+ / rollup.js</td>\n<td><code>dist/bootstrap-vue.esm.js</code> <em>or</em> <code>dist/bootstrap-vue.esm.min.js</code></td>\n</tr>\n<tr>\n<td>commonjs2</td>\n<td>webpack 1 / ...</td>\n<td><code>dist/bootstrap-vue.common.js</code> <em>or</em> <code>dist/bootstrap-vue.common.min.js</code></td>\n</tr>\n<tr>\n<td>UMD</td>\n<td>Browser</td>\n<td><code>dist/bootstrap-vue.js</code> <em>or</em> <code>dist/bootstrap-vue.min.js</code></td>\n</tr>\n<tr>\n<td>ES module</td>\n<td>webpack 2+ / rollup.js</td>\n<td><code>es/index.js</code> <span class="badge badge-warning">Deprecated in 2.0.0-rc.22</span></td>\n</tr>\n</tbody></table>\n</div><p>All of the build variants listed above have been pre-transpiled targeting the browsers supported by\nBootstrapVue. However, if you are targeting only modern browsers, you may want to import\n<code>BootstrapVue</code> from <code>src/index.js</code>, and whitelisting <code>bootstrap-vue/src</code> for transpilation via your\nown project. This can potentially reduce bundle sizes.</p>\n<p>BootstrapVue relies on <code>Popper.js</code> (for Tooltip, Popover, and Dropdown positioning), <code>PortalVue</code>\n(for toasts), and <code>vue-functional-data-merge</code> (for functional components) and parts of <code>core-js</code>.\nThese four dependencies are included in the <code>UMD</code> bundle.</p>\n<h2 id="migrating-a-project-already-using-bootstrap"><span class="bd-content-title">Migrating a project already using Bootstrap<a class="anchorjs-link" href="#migrating-a-project-already-using-bootstrap" aria-label="Anchor"></a></span></h2>\n<p>If you&#39;ve already been using Bootstrap v4, there are a couple adjustments you may need to make to\nyour project:</p>\n<ul>\n<li>Remove the bootstrap.js file from your page scripts or build pipeline</li>\n<li>If Bootstrap is the only thing relying on jQuery, you can safely remove it — BootstrapVue <strong>does\nnot</strong> depend on jQuery</li>\n<li>Convert your native Bootstrap HTML markup into the simplified BootstrapVue custom component markup</li>\n</ul>\n<h2 id="browser-support"><span class="bd-content-title">Browser support<a class="anchorjs-link" href="#browser-support" aria-label="Anchor"></a></span></h2>\n<h3 id="css"><span class="bd-content-title">CSS<a class="anchorjs-link" href="#css" aria-label="Anchor"></a></span></h3>\n<p>BootstrapVue is to be used with Bootstrap v4.3 CSS/SCSS. Please see\n<a href="https://getbootstrap.com/docs/4.3/getting-started/browsers-devices">Browsers and devices</a> for more\ninformation about browsers currently supported by Bootstrap v4.</p>\n<h3 id="js"><span class="bd-content-title">JS<a class="anchorjs-link" href="#js" aria-label="Anchor"></a></span></h3>\n<p>BootstrapVue is written in Vue.js! So it is up to your project and bundler which browsers are\nsupported.</p>\n<p>Following features and APIs are used by BootstrapVue:</p>\n<ul>\n<li>ES5 (e.g. <code>Array.from()</code>, <code>Array.isArray()</code>, <code>Object.assign()</code>, <code>Object.is()</code>, etc.)</li>\n<li><code>Promise</code></li>\n<li><code>MutationObserver</code></li>\n</ul>\n<p>If you want to support older IE, Android and iOS devices, you may want to use\n<a href="https://github.com/zloirock/core-js">core-js</a> and\n<a href="https://www.npmjs.com/package/mutationobserver-shim">mutationobserver-shim</a>:</p>\n<ul>\n<li><code>npm install core-js regenerator-runtime mutationobserver-shim</code></li>\n<li>Import the polyfills in your app main entry point:</li>\n</ul>\n\x3c!-- eslint-disable no-unused-vars --\x3e\n\n<pre class="hljs js text-monospace p-2"><span class="hljs-keyword">import</span> <span class="hljs-string">\'core-js/stable"\'</span>\n<span class="hljs-keyword">import</span> <span class="hljs-string">\'regenerator-runtime/runtime\'</span>\n<span class="hljs-keyword">import</span> <span class="hljs-string">\'mutationobserver-shim\'</span>\n<span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">\'vue\'</span>\n<span class="hljs-keyword">import</span> BootstrapVue <span class="hljs-keyword">from</span> <span class="hljs-string">\'bootstrap-vue\'</span></pre><p>If using deprecated <a href="https://babeljs.io/docs/en/babel-polyfill/">@babel/polyfill</a>:</p>\n<ul>\n<li><code>npm install @babel/polyfill mutationobserver-shim</code></li>\n<li>Import the polyfills in your app main entry point:</li>\n</ul>\n\x3c!-- eslint-disable no-unused-vars --\x3e\n\n<pre class="hljs js text-monospace p-2"><span class="hljs-keyword">import</span> <span class="hljs-string">\'@babel/polyfill\'</span>\n<span class="hljs-keyword">import</span> <span class="hljs-string">\'mutationobserver-shim\'</span>\n<span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">\'vue\'</span>\n<span class="hljs-keyword">import</span> BootstrapVue <span class="hljs-keyword">from</span> <span class="hljs-string">\'bootstrap-vue\'</span></pre><p>Alternatively, use <a href="https://polyfill.io/">Polyfill.io</a> to dynamically serve browser specific\npolyfills via <code>&lt;script&gt;</code> tags in the HTML <code>&lt;head&gt;</code> section. See the <a href="#browser">Browser</a> section\nabove for an example.</p>\n<h2 id="tooling-support"><span class="bd-content-title">Tooling support<a class="anchorjs-link" href="#tooling-support" aria-label="Anchor"></a></span></h2>\n<h3 id="vs-code--vetur"><span class="bd-content-title">VS Code + Vetur<a class="anchorjs-link" href="#vs-code--vetur" aria-label="Anchor"></a></span></h3>\n<p>If you are using <a href="https://code.visualstudio.com/">VS Code</a> as your text editor, BootstrapVue has\nintellisense autocompletion for component attributes available when using the\n<a href="https://marketplace.visualstudio.com/items?itemName=octref.vetur">Vetur extension</a>.</p>\n<p><a href="https://twitter.com/AlexSashaRegan/status/912769997776158723">Twitter: Vetur + BootstrapVue</a></p>\n'},618:function(n,e,o){"use strict";o.r(e);var t=o(536),l=o(537),r=o(538),c=o(65),d=o(553),h=o.n(d);e.default={name:"BDVDocs",layout:"docs",template:"<Main><Section>".concat(h.a,"</Section></Main>"),components:{Main:t.a,Section:l.a},mixins:[r.a],data:function(){return{bootstrapVersion:c.a,defaultConfig:c.d,nuxtVersion:c.h,portalVueVersion:c.i,readme:h.a,vueVersion:c.k}}}}}]);
//# sourceMappingURL=f19b866de039fe758806.js.map