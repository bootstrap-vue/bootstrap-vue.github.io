{"version":3,"sources":["webpack:///./docs/components/main.js","webpack:///./docs/components/section.js","webpack:///./docs/plugins/docs-mixin.js","webpack:///./docs/markdown/intro/README.md","webpack:///./docs/pages/docs/index.js"],"names":["vue_functional_data_merge__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","__webpack_exports__","name","functional","props","tag","type","String","default","render","h","_ref","data","children","mergeData","staticClass","play","Boolean","directives","push","class","scrollTimeout","computed","content","this","$route","params","slug","_content","headTitle","routeName","title","section","meta","filter","join","headMeta","hid","property","description","desc","bvDescription","head","mounted","_this","clearTimeout","focusScroll","$nextTick","$root","$emit","readme","updated","beforeDestroy","methods","_this2","hash","el","$el","querySelector","concat","replace","scrollIntoView","tabIndex","focus","_this3","scroller","document","scrollingElement","documentElement","body","setTimeout","scrollTo","offsetTop","module","exports","r","_components_main__WEBPACK_IMPORTED_MODULE_0__","_components_section__WEBPACK_IMPORTED_MODULE_1__","_plugins_docs_mixin__WEBPACK_IMPORTED_MODULE_2__","_content__WEBPACK_IMPORTED_MODULE_3__","_markdown_intro_README_md__WEBPACK_IMPORTED_MODULE_4__","_markdown_intro_README_md__WEBPACK_IMPORTED_MODULE_4___default","n","layout","template","components","Main","Section","mixins","docsMixin","bootstrapVersion","defaultConfig","nuxtVersion","portalVueVersion","vueVersion"],"mappings":"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","file":"fc3d6aa4605b133d36db.js","sourcesContent":["import { mergeData } from 'vue-functional-data-merge'\n\nexport default {\n  name: 'BDVMain',\n  functional: true,\n  props: {\n    tag: {\n      type: String,\n      default: 'main'\n    }\n  },\n  render(h, { props, data, children }) {\n    return h(props.tag, mergeData(data, { staticClass: 'bd-main' }), [children])\n  }\n}\n","import { mergeData } from 'vue-functional-data-merge'\n\nexport default {\n  name: 'BDVSection',\n  functional: true,\n  props: {\n    tag: {\n      type: String,\n      default: 'section'\n    },\n    play: {\n      type: Boolean,\n      default: false\n    }\n  },\n  render(h, { props, data, children }) {\n    let directives = []\n    if (props.play) {\n      directives.push({ name: 'play' })\n    }\n    return h(\n      props.tag,\n      mergeData(data, {\n        class: ['bd-content'],\n        directives\n      }),\n      [children]\n    )\n  }\n}\n","/*\n * docs-mixin: used by any page under /docs path\n */\nimport { scrollTo, offsetTop } from '~/utils'\nimport { bvDescription } from '~/content'\n\n// @vue/component\nexport default {\n  data() {\n    return {\n      scrollTimeout: null\n    }\n  },\n\n  computed: {\n    content() {\n      // NOTE: is this computed prop used anymore?\n      return (this.$route.params.slug && this._content[this.$route.params.slug]) || {}\n    },\n    headTitle() {\n      const routeName = this.$route.name\n      let title = ''\n      let section = ''\n      if (this.meta && this.meta.title) {\n        title = this.meta.title\n      }\n      if (routeName === 'docs-components-slug') {\n        section = 'Components'\n      } else if (routeName === 'docs-directives-slug') {\n        section = 'Directives'\n      } else if (routeName === 'docs-reference-slug') {\n        section = 'Reference'\n      } else if (routeName === 'docs-misc-slug') {\n        section = 'Misc'\n      }\n      return [title, section, 'BootstrapVue'].filter(Boolean).join(' | ')\n    },\n    headMeta() {\n      const meta = [\n        {\n          hid: 'og:title',\n          name: 'og:title',\n          property: 'og:title',\n          content: this.headTitle\n        }\n      ]\n      if (this.meta && this.meta.description) {\n        const desc = this.meta.description\n        meta.push({\n          hid: 'description',\n          name: 'description',\n          content: desc\n        })\n        meta.push({\n          hid: 'og:description',\n          name: 'og:description',\n          property: 'og:description',\n          content: desc\n        })\n      } else if (bvDescription) {\n        meta.push({\n          hid: 'description',\n          name: 'description',\n          content: bvDescription\n        })\n      }\n      return meta\n    }\n  },\n\n  head() {\n    return {\n      title: this.headTitle,\n      meta: this.headMeta\n    }\n  },\n\n  mounted() {\n    clearTimeout(this.scrollTimeout)\n    this.scrollTimeout = null\n    this.focusScroll()\n    this.$nextTick(() => {\n      this.$root.$emit('setTOC', this.readme || '', this.meta || null)\n    })\n  },\n\n  updated() {\n    clearTimeout(this.scrollTimeout)\n    this.scrollTimeout = null\n    this.focusScroll()\n  },\n\n  beforeDestroy() {\n    this.$root.$emit('setTOC', '')\n  },\n\n  methods: {\n    focusScroll() {\n      let hash = this.$route.hash\n      this.$nextTick(() => {\n        let el\n        if (hash) {\n          // We use an attribute querySelector rather than getElementByID, as some auto\n          // generated ID's are invalid, and some may appear more than once\n          el = this.$el.querySelector(`[id=\"${hash.replace('#', '')}\"]`)\n          this.scrollIntoView(el)\n        }\n        if (!el) {\n          el = this.$el.querySelector('h1')\n        }\n        if (el) {\n          el.tabIndex = -1\n          el.focus()\n        }\n      })\n    },\n    scrollIntoView(el) {\n      if (el) {\n        // Get the document scrolling element\n        const scroller = document.scrollingElement || document.documentElement || document.body\n        // Allow time for v-play to finish rendering\n        this.scrollTimeout = setTimeout(() => {\n          // scroll heading into view (minus offset to account for nav top height\n          scrollTo(scroller, offsetTop(el) - 70, 100)\n          this.scrollTimeout = null\n        }, 100)\n      }\n    }\n  }\n}\n","module.exports = \"<h1 id=\\\"getting-started\\\"><span class=\\\"bd-content-title\\\">Getting Started</span></h1>\\n<p class=\\\"bd-lead\\\">Get started with BootstrapVue, based on the world&#39;s most popular framework - Bootstrap V4, for\\nbuilding responsive, mobile-first sites using Vue.js.</p>\\n<ul>\\n<li><a href=\\\"https://vuejs.org/\\\">Vue.js</a> <code>v2.6</code> is required, <code>v{{ vueVersion }}</code> is recommended</li>\\n<li><a href=\\\"https://getbootstrap.com/\\\">Bootstrap</a> <code>v4.3</code> is required, <code>v{{ bootstrapVersion }}</code> is\\nrecommended</li>\\n<li><a href=\\\"https://portal-vue.linusb.org/\\\">PortalVue</a> <code>v2.1</code> is required by\\n<a href=\\\"/docs/components/toast\\\">Toasts</a>, <code>v{{ portalVueVersion }}</code> is recommended</li>\\n<li><a href=\\\"https://jquery.com/\\\">jQuery</a> is <strong>not</strong> required</li>\\n</ul>\\n<h2 id=\\\"using-module-bundlers\\\"><span class=\\\"bd-content-title\\\">Using module bundlers<a class=\\\"anchorjs-link\\\" href=\\\"#using-module-bundlers\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<p>If you are using module bundlers like <a href=\\\"https://webpack.js.org/\\\">webpack</a>,\\n<a href=\\\"https://rollupjs.org/\\\">rollup.js</a>, etc you may prefer to directly include the package into your\\nproject. To get started, use <code>yarn</code> or <code>npm</code> to get the latest version of Vue.js, BootstrapVue and\\nBootstrap 4:</p>\\n<pre class=\\\"hljs bash text-monospace p-2\\\"><span class=\\\"hljs-comment\\\"># With npm</span>\\nnpm i vue bootstrap-vue bootstrap\\n\\n<span class=\\\"hljs-comment\\\"># With yarn</span>\\nyarn add vue bootstrap-vue bootstrap</pre><p>Then, register BootstrapVue plugin in your app entry point:</p>\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-comment\\\">// app.js</span>\\n<span class=\\\"hljs-keyword\\\">import</span> Vue <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'vue'</span>\\n<span class=\\\"hljs-keyword\\\">import</span> BootstrapVue <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'bootstrap-vue'</span>\\n\\nVue.use(BootstrapVue)</pre><p>And import Bootstrap and BootstrapVue <code>css</code> files:</p>\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-comment\\\">// app.js</span>\\n<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'bootstrap/dist/css/bootstrap.css'</span>\\n<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'bootstrap-vue/dist/bootstrap-vue.css'</span></pre><p>Or import Bootstrap and BootstrapVue <code>scss</code> files via a single custom SCSS file:</p>\\n<pre class=\\\"hljs scss text-monospace p-2\\\"><span class=\\\"hljs-comment\\\">// custom.scss</span>\\n@<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'node_modules/bootstrap/scss/bootstrap'</span>;\\n@<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'node_modules/bootstrap-vue/src/index.scss'</span>;</pre><pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-comment\\\">// app.js</span>\\n<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'custom.scss'</span></pre><p>Be sure to <code>@import</code> or define your custom variable values <em>before</em> including Bootstrap SCSS\\n(<code>bootstrap.scss</code>), and include BootstrapVue SCSS (<code>bootstrap-vue.scss</code>) <em>after that</em> to ensure\\nvariables are set up correctly.</p>\\n<p>Make sure you place all the SCSS <code>@import</code>s into a single SCSS file, and import that single file\\ninto your project. Importing individual SCSS files into your project will <strong>not</strong> share variable\\nvalues and functions between files by default.</p>\\n<p><strong>Note</strong>: <em>Requires webpack configuration to load CSS/SCSS files\\n(<a href=\\\"https://webpack.js.org/guides/asset-management/#loading-css\\\">official guide</a>)</em>.</p>\\n<p>For information on theming Bootstrap, check out the <a href=\\\"/docs/reference/theming\\\">Theming</a> reference\\nsection.</p>\\n<h3 id=\\\"aliasing-vue-import\\\"><span class=\\\"bd-content-title\\\">Aliasing Vue import<a class=\\\"anchorjs-link\\\" href=\\\"#aliasing-vue-import\\\" aria-label=\\\"Anchor\\\"></a></span></h3>\\n<p>BootstrapVue and PortalVue require access to the global <code>Vue</code> reference (via\\n<code>import Vue from &#39;vue&#39;</code>).</p>\\n<div class=\\\"alert alert-info mb-3\\\">\\n  <p class=\\\"mb-0\\\">\\n    If you are using a specific build of Vue (i.e. runtime-only vs. compiler + runtime), you will\\n    need to set up an alias to <code>'vue'</code> in your bundler config to ensure that your\\n    project, BootstrapVue and PortalVue are all using the same build version of Vue. If you are\\n    seeing an error such as <code>\\\"$attr and $listeners is readonly\\\"</code>, or\\n    <code>\\\"Multiple instances of Vue detected\\\"</code>, then you will need to set up an alias.\\n  </p>\\n</div>\\n\\n<p><strong>Example: Vue alias in webpack.config.js</strong></p>\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-built_in\\\">module</span>.exports = {\\n  <span class=\\\"hljs-comment\\\">// ...</span>\\n  resolve: {\\n    <span class=\\\"hljs-attr\\\">alias</span>: {\\n      <span class=\\\"hljs-comment\\\">// If using the runtime only build</span>\\n      vue$: <span class=\\\"hljs-string\\\">'vue/dist/vue.runtime.esm.js'</span> <span class=\\\"hljs-comment\\\">// 'vue/dist/vue.runtime.common.js' for webpack 1</span>\\n      <span class=\\\"hljs-comment\\\">// Or if using full build of Vue (runtime + compiler)</span>\\n      <span class=\\\"hljs-comment\\\">// vue$: 'vue/dist/vue.esm.js'      // 'vue/dist/vue.common.js' for webpack 1</span>\\n    }\\n  }\\n}</pre><p><strong>Note:</strong> If your project has multiple webpack config files (i.e. <code>webpack.config.js</code>,\\n<code>webpack.renderer.config.js</code>, <code>webpack.vendor.config.js</code>, <code>webpack.server.config.js</code>,\\n<code>webpack.client.config.js</code>, etc), you will need to set the appropriate alias in all of them.</p>\\n<p>See the <a href=\\\"https://vuejs.org/v2/guide/installation.html#Runtime-Compiler-vs-Runtime-only\\\">Vue.js</a>\\nGuide for full details on setting up aliases for <a href=\\\"https://webpack.js.org/\\\">webpack</a>,\\n<a href=\\\"https://rollupjs.org/\\\">rollup.js</a>, <a href=\\\"https://parceljs.org/\\\">Parcel</a>, etc.</p>\\n<h2 id=\\\"nuxtjs-module\\\"><span class=\\\"bd-content-title\\\">Nuxt.js module<a class=\\\"anchorjs-link\\\" href=\\\"#nuxtjs-module\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<p><a href=\\\"https://nuxtjs.org/\\\">Nuxt.js</a> version <code>{{ nuxtVersion }}</code> (or greater) is recommended.</p>\\n<p>Install dependencies:</p>\\n<pre class=\\\"hljs bash text-monospace p-2\\\"><span class=\\\"hljs-comment\\\"># With npm</span>\\nnpm i bootstrap-vue\\n\\n<span class=\\\"hljs-comment\\\"># With yarn</span>\\nyarn add bootstrap-vue</pre><p>Add <code>bootstrap-vue/nuxt</code> to modules section of <strong>nuxt.config.js</strong>.</p>\\n<p>This will include both <code>boostrap.css</code> and <code>bootstrap-vue.css</code> default pre-compiled CSS.</p>\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-built_in\\\">module</span>.exports = {\\n  <span class=\\\"hljs-attr\\\">modules</span>: [<span class=\\\"hljs-string\\\">'bootstrap-vue/nuxt'</span>]\\n}</pre><p>If you are using custom Bootstrap SCSS, you can disable automatic inclusion of Bootstrap and\\nBootstrapVue pre-compiled CSS files by setting the following option(s) to <code>false</code>:</p>\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-built_in\\\">module</span>.exports = {\\n  <span class=\\\"hljs-attr\\\">modules</span>: [<span class=\\\"hljs-string\\\">'bootstrap-vue/nuxt'</span>],\\n  <span class=\\\"hljs-attr\\\">bootstrapVue</span>: {\\n    <span class=\\\"hljs-attr\\\">bootstrapCSS</span>: <span class=\\\"hljs-literal\\\">false</span>, <span class=\\\"hljs-comment\\\">// Or `css: false`</span>\\n    bootstrapVueCSS: <span class=\\\"hljs-literal\\\">false</span> <span class=\\\"hljs-comment\\\">// Or `bvCSS: false`</span>\\n  }\\n}</pre><p>BootstrapVue&#39;s custom SCSS relies on Bootstrap SCSS variables and mixins. You can include Bootstrap\\nand BootstrapVue SCSS in your project&#39;s custom SCSS file:</p>\\n<pre class=\\\"hljs scss text-monospace p-2\\\"><span class=\\\"hljs-comment\\\">// custom.scss</span>\\n\\n<span class=\\\"hljs-comment\\\">// Custom overrides go first</span>\\n<span class=\\\"hljs-variable\\\">$grid-breakpoints</span>: (\\n  xs: <span class=\\\"hljs-number\\\">0</span>,\\n  sm: <span class=\\\"hljs-number\\\">480px</span>,\\n  md: <span class=\\\"hljs-number\\\">640px</span>,\\n  lg: <span class=\\\"hljs-number\\\">992px</span>,\\n  xl: <span class=\\\"hljs-number\\\">1300px</span>\\n);\\n\\n<span class=\\\"hljs-comment\\\">// Then include the following</span>\\n@<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'bootstrap/scss/bootstrap.scss'</span>;\\n@<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'bootstrap-vue/src/index.scss'</span>;\\n\\n<span class=\\\"hljs-comment\\\">// And define any of your custom overrides or additional CSS/SCSS here,</span>\\n<span class=\\\"hljs-comment\\\">// or via an @import</span></pre><p>In your app main entry point include the single custom SCSS file (when using <code>sass-loader</code>):</p>\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-comment\\\">// app.js</span>\\n<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'custom.scss'</span></pre><h3 id=\\\"transformasseturls-with-nuxtjs\\\"><span class=\\\"bd-content-title\\\">transformAssetUrls with Nuxt.js<a class=\\\"anchorjs-link\\\" href=\\\"#transformasseturls-with-nuxtjs\\\" aria-label=\\\"Anchor\\\"></a></span></h3>\\n<p><span class=\\\"badge badge-info small\\\">NEW in v2.0.0-rc.22</span> The BootstrapVue Nuxt plugin module\\nwill automatically add in the BootstrapVue specific <a href=\\\"/docs/reference/images\\\"><code>transformAssetUrls</code></a>\\nimage <code>src</code> prop configuration for you.</p>\\n<h3 id=\\\"tree-shaking-with-nuxtjs\\\"><span class=\\\"bd-content-title\\\">Tree shaking with Nuxt.js<a class=\\\"anchorjs-link\\\" href=\\\"#tree-shaking-with-nuxtjs\\\" aria-label=\\\"Anchor\\\"></a></span></h3>\\n<p><span class=\\\"badge badge-info small\\\">ENHANCED in 2.0.0-rc.20</span></p>\\n<p>If you wish to reduce your production bundle size because you only use a subset of the available\\nBootstrapVue plugins, you can configure the list of BootstrapVue <code>componentPlugins</code> or\\n<code>directivePlugins</code> you want to globally install in your Nuxt.js project.</p>\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-built_in\\\">module</span>.exports = {\\n  <span class=\\\"hljs-attr\\\">modules</span>: [<span class=\\\"hljs-string\\\">'bootstrap-vue/nuxt'</span>],\\n  <span class=\\\"hljs-attr\\\">bootstrapVue</span>: {\\n    <span class=\\\"hljs-attr\\\">componentPlugins</span>: [\\n      <span class=\\\"hljs-string\\\">'LayoutPlugin'</span>,\\n      <span class=\\\"hljs-string\\\">'FormPlugin'</span>,\\n      <span class=\\\"hljs-string\\\">'FormCheckboxPlugin'</span>,\\n      <span class=\\\"hljs-string\\\">'FormInputPlugin'</span>,\\n      <span class=\\\"hljs-string\\\">'FormRadioPlugin'</span>,\\n      <span class=\\\"hljs-string\\\">'ToastPlugin'</span>,\\n      <span class=\\\"hljs-string\\\">'ModalPlugin'</span>\\n    ],\\n    <span class=\\\"hljs-attr\\\">directivePlugins</span>: [<span class=\\\"hljs-string\\\">'VBPopoverPlugin'</span>, <span class=\\\"hljs-string\\\">'VBTooltipPlugin'</span>, <span class=\\\"hljs-string\\\">'VBScrollspyPlugin'</span>]\\n  }\\n}</pre><p><span class=\\\"badge badge-info small\\\">NEW in 2.0.0-rc.20</span> There are two additional helper\\nplugins for providing the <code>$bvModal</code> and <code>$bvToast</code> injections (if you are not using the\\n<code>ModalPlugin</code> or <code>ToastPlugin</code> plugins) that are available in the <code>componentPlugins</code> option:</p>\\n<ul>\\n<li><code>BVModalPlugin</code> - provides the injection <code>$bvModal</code> for generating\\n<a href=\\\"/docs/components/modal#modal-message-boxes\\\">message boxes</a>.</li>\\n<li><code>BVToastPlugin</code> - provides the injection <code>$bvToast</code> for generating\\n<a href=\\\"/docs/components/toast#toasts-on-demand\\\">on demand toasts</a>.</li>\\n</ul>\\n<p><span class=\\\"badge badge-info small\\\">NEW in 2.0.0-rc.20</span> You can also optionally import\\nindividual components and/or directives, by configuring the list of BootstrapVue <code>components</code> or\\n<code>directives</code> you want to globally install in your Nuxt.js project.</p>\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-built_in\\\">module</span>.exports = {\\n  <span class=\\\"hljs-attr\\\">modules</span>: [<span class=\\\"hljs-string\\\">'bootstrap-vue/nuxt'</span>],\\n  <span class=\\\"hljs-attr\\\">bootstrapVue</span>: {\\n    <span class=\\\"hljs-attr\\\">components</span>: [<span class=\\\"hljs-string\\\">'BContainer'</span>, <span class=\\\"hljs-string\\\">'BRow'</span>, <span class=\\\"hljs-string\\\">'BCol'</span>, <span class=\\\"hljs-string\\\">'BFormInput'</span>, <span class=\\\"hljs-string\\\">'BButton'</span>, <span class=\\\"hljs-string\\\">'BTable'</span>, <span class=\\\"hljs-string\\\">'BModal'</span>],\\n    <span class=\\\"hljs-attr\\\">directives</span>: [<span class=\\\"hljs-string\\\">'VBModal'</span>, <span class=\\\"hljs-string\\\">'VBPopover'</span>, <span class=\\\"hljs-string\\\">'VBTooltip'</span>, <span class=\\\"hljs-string\\\">'VBScrollspy'</span>]\\n  }\\n}</pre><p>Feel free to mix and match plugin imports with individual component and directive imports.</p>\\n<p>Refer to the reference section at the bottom of each of the <a href=\\\"/docs/components\\\">component</a> and\\n<a href=\\\"/docs/directives\\\">directive</a> docs for details on the plugin names available (and which components\\nand directives are included in each plugin) and component and/or directive import names.</p>\\n<p>Note that when importing individual components, any component aliases will <strong>not</strong> be available.</p>\\n<div class=\\\"alert alert-info\\\">\\n  <p class=\\\"mb-0\\\">\\n    <b>Note:</b> Optimal tree shaking only works when your Nuxt.js app is in <code>production</code>\\n    mode. You may notice larger bundle sizes when not in `production` mode (i.e. `dev` mode).\\n  </p>\\n</div>\\n\\n<p>Do not use the Nuxt module If you want to import individual BootstrapVue components into <em>specific</em>\\npages and/or components of your Nuxt app. Instead follow the\\n<a href=\\\"#using-module-bundlers\\\">module bundlers</a> section above as well as the\\n<a href=\\\"#selective-component-and-directive-inclusion-in-module-bundlers\\\">selective import</a> sections below.</p>\\n<h3 id=\\\"passing-custom-bootstrapvue-config-with-nuxtjs\\\"><span class=\\\"bd-content-title\\\">Passing custom BootstrapVue config with Nuxt.js<a class=\\\"anchorjs-link\\\" href=\\\"#passing-custom-bootstrapvue-config-with-nuxtjs\\\" aria-label=\\\"Anchor\\\"></a></span></h3>\\n<p>If you need to pass a custom\\n<a href=\\\"/docs/misc/settings#default-bootstrapvue-configuration\\\">BootstrapVue configuration</a>, you may do so\\nby setting the <code>config</code> property in your <code>nuxt.config.js</code>:</p>\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-built_in\\\">module</span>.exports = {\\n  <span class=\\\"hljs-attr\\\">modules</span>: [<span class=\\\"hljs-string\\\">'bootstrap-vue/nuxt'</span>],\\n  <span class=\\\"hljs-attr\\\">bootstrapVue</span>: {\\n    <span class=\\\"hljs-attr\\\">config</span>: {\\n      <span class=\\\"hljs-comment\\\">// Custom config options here</span>\\n    }\\n  }\\n}</pre><h3 id=\\\"using-pretranspiled-version-of-bootstrapvue-for-nuxtjs\\\"><span class=\\\"bd-content-title\\\">Using pretranspiled version of BootstrapVue for Nuxt.js<a class=\\\"anchorjs-link\\\" href=\\\"#using-pretranspiled-version-of-bootstrapvue-for-nuxtjs\\\" aria-label=\\\"Anchor\\\"></a></span></h3>\\n<p>Nuxt.js module uses the precompiled versions of BootstrapVue for faster development builds and the\\nsource (<code>src/</code>) of BootstrapVue for higher quality production builds.</p>\\n<p>You can override this option using <code>usePretranspiled</code> option. Setting to <code>true</code> always uses the\\npre-transpiled versions, while setting it to <code>false</code> will always use <code>src/</code>. By default\\n<code>usePretranspiled</code> is enabled in development mode only. You should not need to use this option as\\nthe default is most optimal for performance.</p>\\n<h2 id=\\\"vue-cli-2\\\"><span class=\\\"bd-content-title\\\">Vue CLI 2<a class=\\\"anchorjs-link\\\" href=\\\"#vue-cli-2\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<p><span class=\\\"badge badge-warning small\\\">DEPRECATED</span> Use <a href=\\\"#vue-cli-3\\\">Vue CLI 3</a> instead.</p>\\n<p>BootstrapVue has two Vue CLI templates available:</p>\\n<ul>\\n<li><a href=\\\"https://github.com/bootstrap-vue/webpack-simple\\\">webpack-simple</a>: Quick scaffold for a proof of\\nconcept or small app</li>\\n<li><a href=\\\"https://github.com/bootstrap-vue/webpack\\\">webpack</a>: Larger, production ready template with more\\noptions</li>\\n</ul>\\n<pre class=\\\"hljs bash text-monospace p-2\\\"><span class=\\\"hljs-comment\\\"># Ensure Vue CLI is installed and up to date</span>\\nnpm i -g vue-cli\\n\\n<span class=\\\"hljs-comment\\\"># Initialize a BootstrapVue project in the directory 'my-project'</span>\\nvue init bootstrap-vue/webpack-simple my-project\\n\\n<span class=\\\"hljs-comment\\\"># Change into the directory</span>\\n<span class=\\\"hljs-built_in\\\">cd</span> my-project\\n\\n<span class=\\\"hljs-comment\\\"># Install dependencies</span>\\nnpm i\\n\\n<span class=\\\"hljs-comment\\\"># Fire up the dev server with HMR</span>\\nnpm run dev</pre><p>You can repeat the commands above replacing <code>bootstrap-vue/webpack-simple</code> with\\n<code>bootstrap-vue/webpack</code> for the webpack template.</p>\\n<h2 id=\\\"vue-cli-3\\\"><span class=\\\"bd-content-title\\\">Vue CLI 3<a class=\\\"anchorjs-link\\\" href=\\\"#vue-cli-3\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<p>Unlike V2, Vue CLI 3 doesn&#39;t use templates.</p>\\n<p>Create a new project in the directory <code>my-project</code>:</p>\\n<pre class=\\\"hljs bash text-monospace p-2\\\">npx @vue/cli create my-project</pre><p>Enter the <code>my-project</code> directory and install <code>bootstrap-vue</code>:</p>\\n<pre class=\\\"hljs bash text-monospace p-2\\\">npm i bootstrap-vue</pre><p>Under the hood, Vue CLI uses webpack, so we can register the BootstrapVue plugin as with the webpack\\ninstructions.</p>\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-keyword\\\">import</span> Vue <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'vue'</span>\\n<span class=\\\"hljs-keyword\\\">import</span> BootstrapVue <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'bootstrap-vue'</span>\\n\\n<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'bootstrap/dist/css/bootstrap.css'</span>\\n<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'bootstrap-vue/dist/bootstrap-vue.css'</span>\\n\\nVue.use(BootstrapVue)</pre><p>For additional configuration for Vue CLI 3 for using project relative paths for image src props on\\nvarious BootstrapVue components, refer to the Vue CLI 3 section of the\\n<a href=\\\"/docs/reference/images#vue-cli-3-support\\\">Image Src Resolving</a> reference page.</p>\\n<h3 id=\\\"vue-cli-3-plugin\\\"><span class=\\\"bd-content-title\\\">Vue CLI 3 plugin<a class=\\\"anchorjs-link\\\" href=\\\"#vue-cli-3-plugin\\\" aria-label=\\\"Anchor\\\"></a></span></h3>\\n<p>As an alternative, you can use the\\n<a href=\\\"https://github.com/GregYankovoy/vue-cli-plugin-bootstrap-vue\\\">Bootstrap-Vue Vue CLI 3 plugin</a> to\\nhelp you configure your app.</p>\\n<pre class=\\\"hljs bash text-monospace p-2\\\">vue create my-app\\n<span class=\\\"hljs-built_in\\\">cd</span> my-app\\nvue add bootstrap-vue</pre><p>This will create a new app with basic BootstrapVue settings to get your project started.</p>\\n<p>In the future this plugin will provide options for more advanced configurations and templates.</p>\\n<h2 id=\\\"selective-component-and-directive-inclusion-in-module-bundlers\\\"><span class=\\\"bd-content-title\\\">Selective component and directive inclusion in module bundlers<a class=\\\"anchorjs-link\\\" href=\\\"#selective-component-and-directive-inclusion-in-module-bundlers\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<p><span class=\\\"badge badge-info small\\\">SIMPLIFIED in 2.0.0-rc.20</span></p>\\n<p>When using a module bundler you can optionally import only specific components groups (plugins),\\ncomponents and/or directives.</p>\\n<div class=\\\"alert alert-info\\\">\\n  <p class=\\\"mb-0\\\">\\n    <b>Note:</b> Optimal tree shaking only works when webpack 4 is in\\n    <a href=\\\"https://webpack.js.org/guides/tree-shaking\\\"><code>production</code></a> mode and\\n    javascript minification is enabled.\\n  </p>\\n</div>\\n\\n<h3 id=\\\"component-groups-and-directives-as-vue-plugins\\\"><span class=\\\"bd-content-title\\\">Component groups and directives as Vue plugins<a class=\\\"anchorjs-link\\\" href=\\\"#component-groups-and-directives-as-vue-plugins\\\" aria-label=\\\"Anchor\\\"></a></span></h3>\\n<p><span class=\\\"badge badge-info small\\\">CHANGED in 2.0.0-rc.22</span></p>\\n<p>You can import component groups and directives as Vue plugins by importing from the <code>components</code> or\\n<code>directives</code> directory:</p>\\n<!-- eslint-disable import/first, import/no-duplicates -->\\n\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-comment\\\">// This imports all the layout components such as &lt;b-container&gt;, &lt;b-row&gt;, &lt;b-col&gt;:</span>\\n<span class=\\\"hljs-keyword\\\">import</span> { LayoutPlugin } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'bootstrap-vue'</span>\\nVue.use(LayoutPlugin)\\n\\n<span class=\\\"hljs-comment\\\">// This imports &lt;b-modal&gt; as well as the v-b-modal directive as a plugin:</span>\\n<span class=\\\"hljs-keyword\\\">import</span> { ModalPlugin } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'bootstrap-vue'</span>\\nVue.use(ModalPlugin)\\n\\n<span class=\\\"hljs-comment\\\">// This imports &lt;b-card&gt; along with all the &lt;b-card-*&gt; sub-components as a plugin:</span>\\n<span class=\\\"hljs-keyword\\\">import</span> { CardPlugin } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'bootstrap-vue'</span>\\nVue.use(CardPlugin)\\n\\n<span class=\\\"hljs-comment\\\">// This imports directive v-b-scrollspy as a plugin:</span>\\n<span class=\\\"hljs-keyword\\\">import</span> { VBScrollspyPlugin } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'bootstrap-vue'</span>\\nVue.use(VBScrollspyPlugin)</pre><p>When importing as plugins, all subcomponents and related directives are imported in most cases. i.e.\\nWhen importing <code>&lt;b-nav&gt;</code>, all the <code>&lt;nav-*&gt;</code> sub components are also included, as well all dropdown\\nsub components. Component shorthand aliases (if any) are also included in the plugin. Refer to the\\ncomponent and directive documentation for details.</p>\\n<p>There are two additional helper plugins for providing the <code>$bvModal</code> and <code>$bvToast</code> injections (if\\nyou are not using the <code>ModalPlugin</code> or <code>ToastPlugin</code> plugins) which are available for import from\\n<code>&#39;bootstrap-vue&#39;</code>:</p>\\n<ul>\\n<li><code>BVModalPlugin</code> - provides the injection <code>$bvModal</code> for generating\\n<a href=\\\"/docs/components/modal#modal-message-boxes\\\">message boxes</a>.</li>\\n<li><code>BVToastPlugin</code> - provides the injection <code>$bvToast</code> for generating\\n<a href=\\\"/docs/components/toast#toasts-on-demand\\\">on demand toasts</a>.</li>\\n</ul>\\n<h3 id=\\\"individual-components-and-directives\\\"><span class=\\\"bd-content-title\\\">Individual components and directives<a class=\\\"anchorjs-link\\\" href=\\\"#individual-components-and-directives\\\" aria-label=\\\"Anchor\\\"></a></span></h3>\\n<p><span class=\\\"badge badge-info small\\\">CHANGED in 2.0.0-rc.22</span></p>\\n<p>If you would like to only pull in a specific component or set of components, you can do this by\\ndirectly importing those components.</p>\\n<p>To cherry pick a component/directive, start by importing it in the file where it is being used:</p>\\n<!-- eslint-disable no-unused-vars -->\\n\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-comment\\\">// Place all imports from 'bootstrap-vue' in a single import</span>\\n<span class=\\\"hljs-comment\\\">// statement for optimal bundle sizes</span>\\n<span class=\\\"hljs-keyword\\\">import</span> { BModal, VBModal } <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'bootstrap-vue'</span></pre><p>Then add it to your component definition:</p>\\n<!-- eslint-disable no-undef -->\\n\\n<pre class=\\\"hljs js text-monospace p-2\\\">Vue.component(<span class=\\\"hljs-string\\\">'my-component'</span>, {\\n  <span class=\\\"hljs-attr\\\">components</span>: {\\n    <span class=\\\"hljs-string\\\">'b-modal'</span>: BModal\\n  },\\n  <span class=\\\"hljs-attr\\\">directives</span>: {\\n    <span class=\\\"hljs-comment\\\">// Note that Vue automatically prefixes directive names with `v-`</span>\\n    <span class=\\\"hljs-string\\\">'b-modal'</span>: VBModal\\n  }\\n  <span class=\\\"hljs-comment\\\">// ...</span>\\n})</pre><p>Or register them globally:</p>\\n<!-- eslint-disable no-undef -->\\n\\n<pre class=\\\"hljs js text-monospace p-2\\\">Vue.component(<span class=\\\"hljs-string\\\">'b-modal'</span>, BModal)\\n<span class=\\\"hljs-comment\\\">// Note that Vue automatically prefixes directive names with `v-`</span>\\nVue.directive(<span class=\\\"hljs-string\\\">'b-modal'</span>, VBModal)</pre><p>Vue allows for various component and directive name syntaxes here, so feel free to utilize\\n<samp>kebab-casing</samp> (shown), <samp>camelCasing</samp>, <samp>PascalCasing</samp>, and/or\\nobject property shorthand (components only).</p>\\n<h2 id=\\\"browser\\\"><span class=\\\"bd-content-title\\\">Browser<a class=\\\"anchorjs-link\\\" href=\\\"#browser\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<p>Add the Boostrap and BootstrapVue CSS URLs in your HTML <code>&lt;head&gt;</code> section, followed by the required\\nJavaScript files.</p>\\n<p>When supporting older browsers (see <a href=\\\"#browser-support\\\">Browser Support</a> below), you will need to\\ninclude a polyfill for handling modern JavaScript features before loading Vue and BoostrapVue\\nJavaScript files.</p>\\n<pre class=\\\"hljs html text-monospace p-2\\\"><span class=\\\"hljs-comment\\\">&lt;!-- Add this to &lt;head&gt; --&gt;</span>\\n\\n<span class=\\\"hljs-comment\\\">&lt;!-- Load required Bootstrap and BootstrapVue CSS --&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">link</span> <span class=\\\"hljs-attr\\\">type</span>=<span class=\\\"hljs-string\\\">\\\"text/css\\\"</span> <span class=\\\"hljs-attr\\\">rel</span>=<span class=\\\"hljs-string\\\">\\\"stylesheet\\\"</span> <span class=\\\"hljs-attr\\\">href</span>=<span class=\\\"hljs-string\\\">\\\"//unpkg.com/bootstrap/dist/css/bootstrap.min.css\\\"</span> /&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">link</span> <span class=\\\"hljs-attr\\\">type</span>=<span class=\\\"hljs-string\\\">\\\"text/css\\\"</span> <span class=\\\"hljs-attr\\\">rel</span>=<span class=\\\"hljs-string\\\">\\\"stylesheet\\\"</span> <span class=\\\"hljs-attr\\\">href</span>=<span class=\\\"hljs-string\\\">\\\"//unpkg.com/bootstrap-vue@latest/dist/bootstrap-vue.min.css\\\"</span> /&gt;</span>\\n\\n<span class=\\\"hljs-comment\\\">&lt;!-- Load polyfills to support older browsers --&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span> <span class=\\\"hljs-attr\\\">src</span>=<span class=\\\"hljs-string\\\">\\\"//polyfill.io/v3/polyfill.min.js?features=es2015%2CMutationObserver\\\"</span> <span class=\\\"hljs-attr\\\">crossorigin</span>=<span class=\\\"hljs-string\\\">\\\"anonymous\\\"</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span>\\n\\n<span class=\\\"hljs-comment\\\">&lt;!-- Load Vue followed by BootstrapVue --&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span> <span class=\\\"hljs-attr\\\">src</span>=<span class=\\\"hljs-string\\\">\\\"//unpkg.com/vue@latest/dist/vue.min.js\\\"</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span> <span class=\\\"hljs-attr\\\">src</span>=<span class=\\\"hljs-string\\\">\\\"//unpkg.com/bootstrap-vue@latest/dist/bootstrap-vue.min.js\\\"</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span></pre><h2 id=\\\"build-variants\\\"><span class=\\\"bd-content-title\\\">Build variants<a class=\\\"anchorjs-link\\\" href=\\\"#build-variants\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<p>Choosing the best variant for your build environment / packager helps less bundle sizes. If your\\nbundler supports es modules, it will automatically prefer it over commonjs.</p>\\n<div class=\\\"table-responsive-sm\\\"><table class=\\\"b-table table table-bordered table-striped bv-docs-table\\\">\\n<thead class=\\\"thead-default\\\">\\n<tr>\\n<th>Variant</th>\\n<th>Environments</th>\\n<th>Package path</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td><strong>ESM module</strong></td>\\n<td>webpack 2+ / rollup.js</td>\\n<td><code>esm/index.js</code></td>\\n</tr>\\n<tr>\\n<td><strong>ESM bundle</strong></td>\\n<td>webpack 2+ / rollup.js</td>\\n<td><code>dist/bootstrap-vue.esm.js</code> <em>or</em> <code>dist/bootstrap-vue.esm.min.js</code></td>\\n</tr>\\n<tr>\\n<td>commonjs2</td>\\n<td>webpack 1 / ...</td>\\n<td><code>dist/bootstrap-vue.common.js</code> <em>or</em> <code>dist/bootstrap-vue.common.min.js</code></td>\\n</tr>\\n<tr>\\n<td>UMD</td>\\n<td>Browser</td>\\n<td><code>dist/bootstrap-vue.js</code> <em>or</em> <code>dist/bootstrap-vue.min.js</code></td>\\n</tr>\\n<tr>\\n<td>ES module</td>\\n<td>webpack 2+ / rollup.js</td>\\n<td><code>es/index.js</code> <span class=\\\"badge badge-warning\\\">Deprecated in 2.0.0-rc.22</span></td>\\n</tr>\\n</tbody></table>\\n</div><p>All of the build variants listed above have been pre-transpiled targeting the browsers supported by\\nBootstrapVue. However, if you are targeting only modern browsers, you may want to import\\n<code>BootstrapVue</code> from <code>src/index.js</code>, and whitelisting <code>bootstrap-vue/src</code> for transpilation via your\\nown project. This can potentially reduce bundle sizes.</p>\\n<p>BootstrapVue relies on <code>Popper.js</code> (for Tooltip, Popover, and Dropdown positioning), <code>PortalVue</code>\\n(for toasts, etc), and <code>vue-functional-data-merge</code> (for functional components) and parts of\\n<code>core-ui</code>. These four dependencies are included in the <code>UMD</code> bundle.</p>\\n<h2 id=\\\"migrating-a-project-already-using-bootstrap\\\"><span class=\\\"bd-content-title\\\">Migrating a project already using Bootstrap<a class=\\\"anchorjs-link\\\" href=\\\"#migrating-a-project-already-using-bootstrap\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<p>If you&#39;ve already been using Bootstrap 4, there are a couple adjustments you may need to make to\\nyour project:</p>\\n<ul>\\n<li>Remove the bootstrap.js file from your page scripts or build pipeline</li>\\n<li>If Bootstrap is the only thing relying on jQuery, you can safely remove it — BootstrapVue <strong>does\\nnot</strong> depend on jQuery</li>\\n<li>Convert your native Bootstrap HTML markup into the simplified BootstrapVue custom component markup</li>\\n</ul>\\n<h2 id=\\\"browser-support\\\"><span class=\\\"bd-content-title\\\">Browser support<a class=\\\"anchorjs-link\\\" href=\\\"#browser-support\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<h3 id=\\\"css\\\"><span class=\\\"bd-content-title\\\">CSS<a class=\\\"anchorjs-link\\\" href=\\\"#css\\\" aria-label=\\\"Anchor\\\"></a></span></h3>\\n<p>BootstrapVue is to be used with Bootstrap 4.3 CSS/SCSS. Please see\\n<a href=\\\"https://getbootstrap.com/docs/4.3/getting-started/browsers-devices\\\">Browsers and devices</a> for more\\ninformation about browsers currently supported by Bootstrap 4.</p>\\n<h3 id=\\\"js\\\"><span class=\\\"bd-content-title\\\">JS<a class=\\\"anchorjs-link\\\" href=\\\"#js\\\" aria-label=\\\"Anchor\\\"></a></span></h3>\\n<p>BootstrapVue is written in Vue.js! So it is up to your project and bundler which browsers are\\nsupported.</p>\\n<p>Following features and APIs are used by BootstrapVue:</p>\\n<ul>\\n<li>ES5 (e.g. <code>Array.from()</code>, <code>Array.isArray()</code>, <code>Object.assign()</code>, <code>Object.is()</code>, etc.)</li>\\n<li><code>Promise</code></li>\\n<li><code>MutationObserver</code></li>\\n</ul>\\n<p>If you want to support older IE, Android and iOS devices, you may want to use\\n<a href=\\\"https://babeljs.io/docs/en/babel-polyfill/\\\">@babel/polyfill</a> and\\n<a href=\\\"https://www.npmjs.com/package/mutationobserver-shim\\\">mutationobserver-shim</a>:</p>\\n<ul>\\n<li><code>npm install @babel/polyfill mutationobserver-shim</code></li>\\n<li>Import the polyfills in your app main entry point:</li>\\n</ul>\\n<!-- eslint-disable no-unused-vars -->\\n\\n<pre class=\\\"hljs js text-monospace p-2\\\"><span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'@babel/polyfill'</span>\\n<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-string\\\">'mutationobserver-shim'</span>\\n<span class=\\\"hljs-keyword\\\">import</span> Vue <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'vue'</span>\\n<span class=\\\"hljs-keyword\\\">import</span> BootstrapVue <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">'bootstrap-vue'</span></pre><p>Alternatively use <a href=\\\"https://polyfill.io/\\\">Polyfill.io</a> to dynamically serve browser specific\\npolyfills via <code>&lt;script&gt;</code> tags in the HTML <code>&lt;head&gt;</code> section. See <a href=\\\"#browser\\\">Browser</a> section for an\\nexample.</p>\\n<h2 id=\\\"tooling-support\\\"><span class=\\\"bd-content-title\\\">Tooling support<a class=\\\"anchorjs-link\\\" href=\\\"#tooling-support\\\" aria-label=\\\"Anchor\\\"></a></span></h2>\\n<h3 id=\\\"vs-code--vetur\\\"><span class=\\\"bd-content-title\\\">VS Code + Vetur<a class=\\\"anchorjs-link\\\" href=\\\"#vs-code--vetur\\\" aria-label=\\\"Anchor\\\"></a></span></h3>\\n<p>If you are using <a href=\\\"https://code.visualstudio.com/\\\">VS Code</a> as your text editor, BootstrapVue has\\nintellisense autocompletion for component attributes available when using the\\n<a href=\\\"https://marketplace.visualstudio.com/items?itemName=octref.vetur\\\">Vetur extension</a>.</p>\\n<p><a href=\\\"https://twitter.com/AlexSashaRegan/status/912769997776158723\\\">Twitter: Vetur + BootstrapVue</a></p>\\n\";","import Main from '~/components/main'\nimport Section from '~/components/section'\nimport docsMixin from '~/plugins/docs-mixin'\nimport {\n  bootstrapVersion,\n  defaultConfig,\n  nuxtVersion,\n  portalVueVersion,\n  vueVersion\n} from '~/content'\nimport readme from '~/markdown/intro/README.md'\n\nexport default {\n  name: 'BDVDocs',\n  layout: 'docs',\n  // We use a string template here so that the docs README can do interpolation\n  template: `<Main><Section>${readme}</Section></Main>`,\n  components: {\n    Main,\n    Section\n  },\n  mixins: [docsMixin],\n  data() {\n    return {\n      bootstrapVersion,\n      defaultConfig,\n      nuxtVersion,\n      portalVueVersion,\n      readme,\n      vueVersion\n    }\n  }\n}\n"],"sourceRoot":""}