(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{401:function(n,t){n.exports='<h1 id="sizing-props-and-classes"><span class="bd-content-title">Sizing props and classes</span></h1>\n<p class="bd-lead">Bootstrap v4 CSS provides several classes that control the sizing of elements, of which some of\nthese have been translated into props on components.</p>\n<h2 id="component-size-prop"><span class="bd-content-title">Component <code translate="no" class="notranslate text-nowrap">size</code> prop<a class="anchorjs-link" href="#component-size-prop" aria-label="Anchor"></a></span></h2>\n<p>Various components allow for an optional size (via the <code translate="no" class="notranslate text-nowrap">size</code> prop). Below are the sizes supported\nvia the default Bootstrap v4 CSS.</p>\n<p>Available Sizes:</p>\n<ul>\n<li><code translate="no" class="notranslate text-nowrap">sm</code> small</li>\n<li><code translate="no" class="notranslate text-nowrap">lg</code> large</li>\n</ul>\n<p>When no size is specified, this results in normal sized appearance (usually referred to as <code translate="no" class="notranslate text-nowrap">md</code>).</p>\n<p>These size values will be translated into the appropriate Bootstrap CSS class, depending on the\ncomponent used on, such as <code translate="no" class="notranslate text-nowrap">.btn-&lt;size&gt;</code> for buttons, <code translate="no" class="notranslate text-nowrap">.modal-&lt;size&gt;</code> for modal,\n<code translate="no" class="notranslate text-nowrap">.form-control-&lt;size&gt;</code> for form elements, <code translate="no" class="notranslate text-nowrap">.pagination-&lt;size&gt;</code> for pagination buttons, etc.</p>\n<h2 id="breakpoint-sizes"><span class="bd-content-title">Breakpoint sizes<a class="anchorjs-link" href="#breakpoint-sizes" aria-label="Anchor"></a></span></h2>\n<p>Bootstrap v4 also includes viewport breakpoint sizes: <code translate="no" class="notranslate text-nowrap">xs</code>, <code translate="no" class="notranslate text-nowrap">sm</code>, <code translate="no" class="notranslate text-nowrap">md</code>, <code translate="no" class="notranslate text-nowrap">lg</code>, and <code translate="no" class="notranslate text-nowrap">xl</code>. which refer\nto the width of the user&#39;s view port.</p>\n<p>For details on breakpoint sizes, please check the <a href="/docs/layout/" class="font-weight-bold">Layout and Grid</a> documentation.</p>\n<h2 id="sizing-utility-classes"><span class="bd-content-title">Sizing utility classes<a class="anchorjs-link" href="#sizing-utility-classes" aria-label="Anchor"></a></span></h2>\n<p>Easily make an element as wide or as tall (relative to its parent) with the width and height\nutilities classes.</p>\n<p>Width and height utilities are generated from the <code translate="no" class="notranslate text-nowrap">$sizes</code> Sass map in Bootstrap&#39;s\n<code translate="no" class="notranslate text-nowrap">_variables.scss</code>. Includes support for <code translate="no" class="notranslate text-nowrap">25%</code>, <code translate="no" class="notranslate text-nowrap">50%</code>, <code translate="no" class="notranslate text-nowrap">75%</code>, and <code translate="no" class="notranslate text-nowrap">100%</code> by default. Modify those\nvalues as you need to generate different utilities here.</p>\n<p><strong>Widths:</strong></p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"text-center"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"w-25 p-3 mb-1 bg-secondary text-light"</span>&gt;</span>Width 25%<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"w-50 p-3 mb-1 bg-secondary text-light"</span>&gt;</span>Width 50%<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"w-75 p-3 mb-1 bg-secondary text-light"</span>&gt;</span>Width 75%<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"w-100 p-3 bg-secondary text-light"</span>&gt;</span>Width 100%<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- widths.vue --&gt;</span></pre><p><strong>Heights:</strong></p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"height: 100px; background-color: rgba(255,0,0,0.1);"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"h-25 d-inline-block"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"width: 120px; background-color: rgba(0,0,255,.1)"</span>&gt;</span>\n    Height 25%\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"h-50 d-inline-block"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"width: 120px; background-color: rgba(0,0,255,.1)"</span>&gt;</span>\n    Height 50%\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"h-75 d-inline-block"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"width: 120px; background-color: rgba(0,0,255,.1)"</span>&gt;</span>\n    Height 75%\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"h-100 d-inline-block"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"width: 120px; background-color: rgba(0,0,255,.1)"</span>&gt;</span>\n    Height 100%\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- heights.vue --&gt;</span></pre><p><strong>Max width and height:</strong></p>\n<p>You can also use <code translate="no" class="notranslate text-nowrap">mw-100</code> (<code translate="no" class="notranslate text-nowrap">max-width: 100%;</code>) and <code translate="no" class="notranslate text-nowrap">mh-100</code> (<code translate="no" class="notranslate text-nowrap">max-height: 100%;</code>) utilities as\nneeded.</p>\n<h2 id="additional-resources"><span class="bd-content-title">Additional resources<a class="anchorjs-link" href="#additional-resources" aria-label="Anchor"></a></span></h2>\n<p>Refer to <a href="https://getbootstrap.com/" target="_blank" rel="noopener">Bootstrap v4</a> official documentation site for more information.</p>\n'}}]);