(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{384:function(n,t){n.exports='<h1 id="calendar" class="bv-no-focus-ring"><span class="bd-content-title">Calendar</span></h1>\n<p class="bd-lead">BootstrapVue&#39;s custom <code translate="no" class="notranslate text-nowrap">&lt;b-calendar&gt;</code> component generates a WAI-ARIA compliant calendar style date\nselection widget, which can be used to control other components, or can be used to create\ncustomized date picker inputs.</p>\n<p><code translate="no" class="notranslate text-nowrap">&lt;b-calendar&gt;</code> is WAI-ARIA accessibility compliant, optimized for keyboard control (arrow, page\nup/down, home, and end keys). Internationalization is also supported, and default&#39;s to the browser&#39;s\nor page&#39;s locale, if no locale(s) are specified.</p>\n<p>If you need a date picker as a custom form control input, use the\n<a href="/docs/components/form-datepicker" class="font-weight-bold"><code translate="no" class="notranslate text-nowrap">&lt;b-form-datepicker&gt;</code></a> component instead.</p>\n<p><code translate="no" class="notranslate text-nowrap">&lt;b-calendar&gt;</code> was introduced in BootstrapVue <code translate="no" class="notranslate text-nowrap">v2.5.0</code>.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">"auto"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-calendar</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"value"</span> @<span class="hljs-attr">context</span>=<span class="hljs-string">"onContext"</span> <span class="hljs-attr">locale</span>=<span class="hljs-string">"en-US"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-calendar</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Value: <span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>\'{{ value }}\'<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mb-0"</span>&gt;</span>Context:<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">pre</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"small"</span>&gt;</span>{{ context }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    data() {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">\'\'</span>,\n        <span class="hljs-attr">context</span>: <span class="hljs-literal">null</span>\n      }\n    },\n    <span class="hljs-attr">methods</span>: {\n      onContext(ctx) {\n        <span class="hljs-keyword">this</span>.context = ctx\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n<span class="hljs-comment">&lt;!-- b-calendar.vue --&gt;</span></pre><h2 id="v-model-return-value" class="bv-no-focus-ring"><span class="bd-content-title"><code translate="no" class="notranslate text-nowrap">v-model</code> return value<a class="anchorjs-link" href="#v-model-return-value" aria-labelledby="v-model-return-value"></a></span></h2>\n<p>By default, <code translate="no" class="notranslate text-nowrap">&lt;b-calendar&gt;</code> returns dates as a string in the <code translate="no" class="notranslate text-nowrap">YYYY-MM-DD</code> format, which is the same\nformat returned by native browser <code translate="no" class="notranslate text-nowrap">&lt;input type=&quot;date&quot;&gt;</code> controls. You can have <code translate="no" class="notranslate text-nowrap">&lt;b-calendar&gt;</code> return\na <code translate="no" class="notranslate text-nowrap">Date</code> object (with no time portion) as the <code translate="no" class="notranslate text-nowrap">v-model</code> value instead by setting the <code translate="no" class="notranslate text-nowrap">value-as-date</code>\nprop.</p>\n<p>If no date is selected, <code translate="no" class="notranslate text-nowrap">&lt;b-calendar&gt;</code> returns an empty string <code translate="no" class="notranslate text-nowrap">&#39;&#39;</code>, or returns <code translate="no" class="notranslate text-nowrap">null</code> if the\n<code translate="no" class="notranslate text-nowrap">value-as-date</code> prop is set.</p>\n<p>Note that when <code translate="no" class="notranslate text-nowrap">value-as-date</code> prop is set, the returned <code translate="no" class="notranslate text-nowrap">Date</code> object will be in the browser&#39;s\ndefault timezone.</p>\n<h2 id="disabled-and-readonly-states" class="bv-no-focus-ring"><span class="bd-content-title">Disabled and readonly states<a class="anchorjs-link" href="#disabled-and-readonly-states" aria-labelledby="disabled-and-readonly-states"></a></span></h2>\n<p>Setting the <code translate="no" class="notranslate text-nowrap">disabled</code> prop will remove all interactivity of the <code translate="no" class="notranslate text-nowrap">&lt;b-calendar&gt;</code> component.</p>\n<p>Setting the <code translate="no" class="notranslate text-nowrap">readonly</code> prop will disable selecting a date, but will keep the component interactive,\nallowing for date navigation. The <code translate="no" class="notranslate text-nowrap">v-model</code> will not be updated in the readonly state.</p>\n<p>For disabling specific dates or setting minimum and maximum date limits, refer to the\n<a href="#date-constraints" class="font-weight-bold">Date constraints</a> section.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span> <span class="hljs-attr">label</span>=<span class="hljs-string">"Select calendar interactive state"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"state"</span> <span class="hljs-attr">aria-controls</span>=<span class="hljs-string">"ex-disabled-readonly"</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"disabled"</span>&gt;</span>Disabled<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"readonly"</span>&gt;</span>Readonly<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"normal"</span>&gt;</span>Normal<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-calendar</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"ex-disabled-readonly"</span> <span class="hljs-attr">:disabled</span>=<span class="hljs-string">"disabled"</span> <span class="hljs-attr">:readonly</span>=<span class="hljs-string">"readonly"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-calendar</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    data() {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">state</span>: <span class="hljs-string">\'disabled\'</span>\n      }\n    },\n    <span class="hljs-attr">computed</span>: {\n      disabled() {\n        <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.state === <span class="hljs-string">\'disabled\'</span>\n      },\n      readonly() {\n        <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.state === <span class="hljs-string">\'readonly\'</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-calendar-disabled-readonly.vue --&gt;</span></pre><h2 id="date-constraints" class="bv-no-focus-ring"><span class="bd-content-title">Date constraints<a class="anchorjs-link" href="#date-constraints" aria-labelledby="date-constraints"></a></span></h2>\n<h3 id="minimum-and-maximum-dates" class="bv-no-focus-ring"><span class="bd-content-title">Minimum and maximum dates<a class="anchorjs-link" href="#minimum-and-maximum-dates" aria-labelledby="minimum-and-maximum-dates"></a></span></h3>\n<p>Restrict the calendar range via the <code translate="no" class="notranslate text-nowrap">min</code> and <code translate="no" class="notranslate text-nowrap">max</code> props. The props accept a date string in the\nformat of <code translate="no" class="notranslate text-nowrap">YYYY-MM-DD</code> or a <code translate="no" class="notranslate text-nowrap">Date</code> object.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-calendar</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"value"</span> <span class="hljs-attr">:min</span>=<span class="hljs-string">"min"</span> <span class="hljs-attr">:max</span>=<span class="hljs-string">"max"</span> <span class="hljs-attr">locale</span>=<span class="hljs-string">"en"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-calendar</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    data() {\n      <span class="hljs-keyword">const</span> now = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>()\n      <span class="hljs-keyword">const</span> today = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(now.getFullYear(), now.getMonth(), now.getDate())\n      <span class="hljs-comment">// 15th two months prior</span>\n      <span class="hljs-keyword">const</span> minDate = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(today)\n      minDate.setMonth(minDate.getMonth() - <span class="hljs-number">2</span>)\n      minDate.setDate(<span class="hljs-number">15</span>)\n      <span class="hljs-comment">// 15th in two months</span>\n      <span class="hljs-keyword">const</span> maxDate = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(today)\n      maxDate.setMonth(maxDate.getMonth() + <span class="hljs-number">2</span>)\n      maxDate.setDate(<span class="hljs-number">15</span>)\n\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">\'\'</span>,\n        <span class="hljs-attr">min</span>: minDate,\n        <span class="hljs-attr">max</span>: maxDate\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-calendar-min-max.vue --&gt;</span></pre><h3 id="disabling-dates" class="bv-no-focus-ring"><span class="bd-content-title">Disabling dates<a class="anchorjs-link" href="#disabling-dates" aria-labelledby="disabling-dates"></a></span></h3>\n<p>If you need to disable specific dates within the calendar, specify a function reference to the\n<code translate="no" class="notranslate text-nowrap">date-disabled-fn</code> prop. The function is passed two arguments:</p>\n<ul>\n<li><code translate="no" class="notranslate text-nowrap">ymd</code> The date as a <code translate="no" class="notranslate text-nowrap">YYYY-MM-DD</code> string</li>\n<li><code translate="no" class="notranslate text-nowrap">date</code> The date as a <code translate="no" class="notranslate text-nowrap">Date</code> object</li>\n</ul>\n<p>The function should either return <code translate="no" class="notranslate text-nowrap">true</code> if the date <em>cannot</em> be selected (disabled), or <code translate="no" class="notranslate text-nowrap">false</code> if\nthe date <em>can</em> be selected (enabled). Note that the function <strong>cannot</strong> be asynchronous, and should\nreturn a value as quickly as possible.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-calendar</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"value"</span> <span class="hljs-attr">:date-disabled-fn</span>=<span class="hljs-string">"dateDisabled"</span> <span class="hljs-attr">locale</span>=<span class="hljs-string">"en"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-calendar</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    data() {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">\'\'</span>\n      }\n    },\n    <span class="hljs-attr">methods</span>: {\n      dateDisabled(ymd, date) {\n        <span class="hljs-comment">// Disable weekends (Sunday = `0`, Saturday = `6`) and</span>\n        <span class="hljs-comment">// disable days that fall on the 13th of the month</span>\n        <span class="hljs-keyword">const</span> weekday = date.getDay()\n        <span class="hljs-keyword">const</span> day = date.getDate()\n        <span class="hljs-comment">// Return `true` if the date should be disabled</span>\n        <span class="hljs-keyword">return</span> weekday === <span class="hljs-number">0</span> || weekday === <span class="hljs-number">6</span> || day === <span class="hljs-number">13</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-calendar-disabled-dates.vue --&gt;</span></pre><p>Note the <code translate="no" class="notranslate text-nowrap">min</code> and <code translate="no" class="notranslate text-nowrap">max</code> date constraints are evaluated first, before <code translate="no" class="notranslate text-nowrap">date-disabled-fn</code>.</p>\n<h2 id="styling" class="bv-no-focus-ring"><span class="bd-content-title">Styling<a class="anchorjs-link" href="#styling" aria-labelledby="styling"></a></span></h2>\n<h3 id="variants" class="bv-no-focus-ring"><span class="bd-content-title">Variants<a class="anchorjs-link" href="#variants" aria-labelledby="variants"></a></span></h3>\n<p>The selected date button (background color) defaults to the <code translate="no" class="notranslate text-nowrap">&#39;primary&#39;</code> theme variant. You can\nchange this to any of the Bootstrap v4 theme variant colors: <code translate="no" class="notranslate text-nowrap">&#39;secondary&#39;</code>, <code translate="no" class="notranslate text-nowrap">&#39;success&#39;</code>, <code translate="no" class="notranslate text-nowrap">&#39;danger&#39;</code>,\n<code translate="no" class="notranslate text-nowrap">&#39;warning&#39;</code>, <code translate="no" class="notranslate text-nowrap">&#39;info&#39;</code>, etc, via the <code translate="no" class="notranslate text-nowrap">selected-variant</code> prop.</p>\n<p>Today&#39;s date will also be highlighted (text color) using the same variant as the selected date by\ndefault. To specify a different theme color to use for today&#39;s date, use the <code translate="no" class="notranslate text-nowrap">today-variant</code> prop.</p>\n<p>To disable highlighting of today&#39;s date altogether, set the <code translate="no" class="notranslate text-nowrap">no-highlight-today</code> prop.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-calendar</span> <span class="hljs-attr">selected-variant</span>=<span class="hljs-string">"success"</span> <span class="hljs-attr">today-variant</span>=<span class="hljs-string">"info"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-calendar</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-calendar-variants.vue --&gt;</span></pre><h3 id="width" class="bv-no-focus-ring"><span class="bd-content-title">Width<a class="anchorjs-link" href="#width" aria-labelledby="width"></a></span></h3>\n<p>The <code translate="no" class="notranslate text-nowrap">&lt;b-calendar&gt;</code> renders as an inline-block element with a default width of <code translate="no" class="notranslate text-nowrap">270px</code> (excluding any\npadding or border that may be added to it). This width is optimized to fit the width of smaller\nmobile devices.</p>\n<p>To change the width, set the <code translate="no" class="notranslate text-nowrap">width</code> prop to any valid CSS width (including units).</p>\n<p>Optionally, make the calendar full width by setting the prop <code translate="no" class="notranslate text-nowrap">block</code>, which will make it expand to\nfit the width of the parent element. The <code translate="no" class="notranslate text-nowrap">width</code> prop has no effect when <code translate="no" class="notranslate text-nowrap">block</code> is set.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-calendar</span> <span class="hljs-attr">block</span> <span class="hljs-attr">local</span>=<span class="hljs-string">"en-US"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-calendar</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-calendar-block.vue --&gt;</span></pre><p>Note it is <em>not recommended</em> to set a width below <code translate="no" class="notranslate text-nowrap">260px</code>, otherwise truncation and layout issues\nwith the component may occur.</p>\n<h3 id="hiding-the-top-selected-date-header" class="bv-no-focus-ring"><span class="bd-content-title">Hiding the top selected date header<a class="anchorjs-link" href="#hiding-the-top-selected-date-header" aria-labelledby="hiding-the-top-selected-date-header"></a></span></h3>\n<p>By default, the current selected date will be displayed at the top of the calendar component,\nformatted in the locale&#39;s language.</p>\n<p>You can hide this header via the <code translate="no" class="notranslate text-nowrap">hide-header</code> prop. Note this only visually hides the selected\ndate, while keeping it available to screen reader users as an <code translate="no" class="notranslate text-nowrap">aria-live</code> region.</p>\n<h3 id="border-and-padding" class="bv-no-focus-ring"><span class="bd-content-title">Border and padding<a class="anchorjs-link" href="#border-and-padding" aria-labelledby="border-and-padding"></a></span></h3>\n<p>Fancy a calendar with a border with padding? Use Bootstrap&#39;s\n<a href="/docs/reference/utility-classes" class="font-weight-bold">border and padding utility classes</a> to add borders and padding:</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-calendar</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"border rounded p-2"</span> <span class="hljs-attr">locale</span>=<span class="hljs-string">"en"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-calendar</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-calendar-border-padding.vue --&gt;</span></pre><h3 id="default-slot" class="bv-no-focus-ring"><span class="bd-content-title">Default slot<a class="anchorjs-link" href="#default-slot" aria-labelledby="default-slot"></a></span></h3>\n<p>Provide optional content at the bottom of the calendar interface via the use of default slot. The\nslot can be used to add buttons such as <code translate="no" class="notranslate text-nowrap">Select Today</code> or <code translate="no" class="notranslate text-nowrap">Reset</code>, etc.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-calendar</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"value"</span> <span class="hljs-attr">value-as-date</span> <span class="hljs-attr">locale</span>=<span class="hljs-string">"en"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"d-flex"</span> <span class="hljs-attr">dir</span>=<span class="hljs-string">"ltr"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span>\n        <span class="hljs-attr">size</span>=<span class="hljs-string">"sm"</span>\n        <span class="hljs-attr">variant</span>=<span class="hljs-string">"outline-danger"</span>\n        <span class="hljs-attr">v-if</span>=<span class="hljs-string">"value"</span>\n        @<span class="hljs-attr">click</span>=<span class="hljs-string">"clearDate"</span>\n      &gt;</span>\n        Clear date\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span>\n        <span class="hljs-attr">size</span>=<span class="hljs-string">"sm"</span>\n        <span class="hljs-attr">variant</span>=<span class="hljs-string">"outline-primary"</span>\n        <span class="hljs-attr">class</span>=<span class="hljs-string">"ml-auto"</span>\n        @<span class="hljs-attr">click</span>=<span class="hljs-string">"setToday"</span>\n      &gt;</span>\n        Set Today\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-calendar</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    data() {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">value</span>: <span class="hljs-literal">null</span>\n      }\n    },\n    <span class="hljs-attr">methods</span>: {\n      setToday() {\n        <span class="hljs-keyword">const</span> now = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>()\n        <span class="hljs-keyword">this</span>.value = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(now.getFullYear(), now.getMonth(), now.getDate())\n      },\n      clearDate() {\n        <span class="hljs-keyword">this</span>.value = <span class="hljs-string">\'\'</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-calendar-default-slot.vue --&gt;</span></pre><h3 id="adding-css-classes-to-specific-dates" class="bv-no-focus-ring"><span class="bd-content-title">Adding CSS classes to specific dates<a class="anchorjs-link" href="#adding-css-classes-to-specific-dates" aria-labelledby="adding-css-classes-to-specific-dates"></a></span></h3>\n<p>If you need to highlight a specific date or dates, set the <code translate="no" class="notranslate text-nowrap">date-info-fn</code> prop to a reference to a\nfunction that returns a CSS class string (or array of strings) to apply to the date&#39;s cell. The\nfunction is passed two arguments:</p>\n<ul>\n<li><code translate="no" class="notranslate text-nowrap">ymd</code> The date as a <code translate="no" class="notranslate text-nowrap">YYYY-MM-DD</code> string</li>\n<li><code translate="no" class="notranslate text-nowrap">date</code> The date as a <code translate="no" class="notranslate text-nowrap">Date</code> object</li>\n</ul>\n<p>The function can return a string, or an array of strings. If setting no classes, you can return an\nempty string (<code translate="no" class="notranslate text-nowrap">&#39;&#39;</code>), empty array (<code translate="no" class="notranslate text-nowrap">[]</code>), or <code translate="no" class="notranslate text-nowrap">null</code>.</p>\n<p>In this example we are using the <code translate="no" class="notranslate text-nowrap">table-{variant}</code> color classes to set a background color on the\ndate cell. The <code translate="no" class="notranslate text-nowrap">table-{variant}</code> color classes work well as they are muted versions of the theme\ncolors.</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-calendar</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"value"</span> <span class="hljs-attr">:date-info-fn</span>=<span class="hljs-string">"dateClass"</span> <span class="hljs-attr">locale</span>=<span class="hljs-string">"en"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-calendar</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    data() {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">\'\'</span>\n      }\n    },\n    <span class="hljs-attr">methods</span>: {\n      dateClass(ymd, date) {\n        <span class="hljs-keyword">const</span> day = date.getDate()\n        <span class="hljs-keyword">return</span> day &gt;= <span class="hljs-number">10</span> &amp;&amp; day &lt;= <span class="hljs-number">20</span> ? <span class="hljs-string">\'table-info\'</span> : <span class="hljs-string">\'\'</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-calendar-date-classes.vue --&gt;</span></pre><p>Note the function will <em>not</em> be called for <a href="#date-constraints" class="font-weight-bold">disabled dates</a>.</p>\n<p><strong>Accessibility note:</strong></p>\n<p>When using classes to convey specific meaning to a date, you should include additional context\noutside of the calendar (or via the default slot) as to the dates being highlighted (such as in an\n<code translate="no" class="notranslate text-nowrap">aria-live</code> region), specifically for screen reader users.</p>\n<p>BootstrapVue may, in the future, add in a feature to add in screen-reader friendly text note on the\nhighlighted date via this function.</p>\n<h2 id="events" class="bv-no-focus-ring"><span class="bd-content-title">Events<a class="anchorjs-link" href="#events" aria-labelledby="events"></a></span></h2>\n<h3 id="input-event" class="bv-no-focus-ring"><span class="bd-content-title"><code translate="no" class="notranslate text-nowrap">input</code> event<a class="anchorjs-link" href="#input-event" aria-labelledby="input-event"></a></span></h3>\n<p>The <code translate="no" class="notranslate text-nowrap">&#39;input&#39;</code> event is emitted when updating the <code translate="no" class="notranslate text-nowrap">v-model</code>. The event has a single argument which is\nthe selected date. By default the value is a string in the format of <code translate="no" class="notranslate text-nowrap">YYYY-MM-DD</code> (or an empty\nstring if no date is selected). If the prop <code translate="no" class="notranslate text-nowrap">value-as-date</code> is set, then the first argument will\ninstead be a <code translate="no" class="notranslate text-nowrap">Date</code> object (or <code translate="no" class="notranslate text-nowrap">null</code> if no date selected).</p>\n<p>If the <code translate="no" class="notranslate text-nowrap">disabled</code> or <code translate="no" class="notranslate text-nowrap">readonly</code> props are set, the <code translate="no" class="notranslate text-nowrap">&#39;input&#39;</code> event will <strong>not</strong> be emitted.</p>\n<h3 id="selected-event" class="bv-no-focus-ring"><span class="bd-content-title"><code translate="no" class="notranslate text-nowrap">selected</code> event<a class="anchorjs-link" href="#selected-event" aria-labelledby="selected-event"></a></span></h3>\n<p>The <code translate="no" class="notranslate text-nowrap">&#39;selected&#39;</code> event is emitted when the user clicks a non-disabled date. The event passes two\narguments:</p>\n<ul>\n<li><code translate="no" class="notranslate text-nowrap">ymd</code> The selected date as a <code translate="no" class="notranslate text-nowrap">YYYY-MM-DD</code> string</li>\n<li><code translate="no" class="notranslate text-nowrap">date</code> The selected date as a <code translate="no" class="notranslate text-nowrap">Date</code> object</li>\n</ul>\n<p>If the user clicks the already selected date, the <code translate="no" class="notranslate text-nowrap">selected</code> event will still be emitted, contrary\nto the <code translate="no" class="notranslate text-nowrap">&#39;input&#39;</code> event which will <em>not</em> re-emit the already selected date.</p>\n<p>If the <code translate="no" class="notranslate text-nowrap">disabled</code> or <code translate="no" class="notranslate text-nowrap">readonly</code> props are set, the <code translate="no" class="notranslate text-nowrap">&#39;selected&#39;</code> event will <strong>not</strong> be emitted.</p>\n<h3 id="context-event" class="bv-no-focus-ring"><span class="bd-content-title"><code translate="no" class="notranslate text-nowrap">context</code> event<a class="anchorjs-link" href="#context-event" aria-labelledby="context-event"></a></span></h3>\n<p>The <code translate="no" class="notranslate text-nowrap">&#39;context&#39;</code> event is emitted whenever a user selects a date, or the user navigates the calendar\n(either via cursor keys, page up/down keys, home or end keys, or uses the calendar navigation\nbuttons). It will also be emitted when the component is created (just before insertion into the\nDOM), or when the resolved locale has changed.</p>\n<p>When the <code translate="no" class="notranslate text-nowrap">readonly</code> prop is set, the event will still be emitted when the user navigates the\ncalendar. It will not be emitted when the <code translate="no" class="notranslate text-nowrap">disabled</code> prop is set (except for the initial emit when\nthe calendar is created).</p>\n<p>The <code translate="no" class="notranslate text-nowrap">&#39;context&#39;</code> event is passed a context object as it&#39;s only argument, with the following\nproperties:</p>\n<div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table">\n<thead class="thead-default">\n<tr>\n<th>Property</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code translate="no" class="notranslate text-nowrap">selectedYMD</code></td>\n<td>The selected date value (<code translate="no" class="notranslate text-nowrap">YYYY-MM-DD</code> format) or an empty string if no date selected</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate text-nowrap">selectedDate</code></td>\n<td>The selected date value as a <code translate="no" class="notranslate text-nowrap">Date</code> object or <code translate="no" class="notranslate text-nowrap">null</code> if no date selected</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate text-nowrap">selectedFormatted</code></td>\n<td>The selected date formatted in the current locale. If no date is selected, this will be the value of the <code translate="no" class="notranslate text-nowrap">label-no-date-selected</code> prop</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate text-nowrap">activeYMD</code></td>\n<td>The current date of the calendar day button that can receive focus as a string (<code translate="no" class="notranslate text-nowrap">YYYY-MM-DD</code> format)</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate text-nowrap">activeDate</code></td>\n<td>The current date of the calendar day button that can receive focus as a <code translate="no" class="notranslate text-nowrap">Date</code> object</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate text-nowrap">activeFormated</code></td>\n<td>The active date formatted in the current locale</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate text-nowrap">disabled</code></td>\n<td>Will be <code translate="no" class="notranslate text-nowrap">true</code> if active date is disabled, <code translate="no" class="notranslate text-nowrap">false</code> otherwise</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate text-nowrap">locale</code></td>\n<td>The resolved locale (may not be the same as the requested locale)</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate text-nowrap">calendarLocale</code></td>\n<td>The resolved locale used by the calendar, optionally including the calendar type (i.e. &#39;gregory&#39;). Usually this will be the same as <code translate="no" class="notranslate text-nowrap">locale</code>, but may include the calendar type used, such as <code translate="no" class="notranslate text-nowrap">fa-u-ca-gregory</code> when selecting the Persian locale (<code translate="no" class="notranslate text-nowrap">&#39;fa&#39;</code>)</td>\n</tr>\n<tr>\n<td><code translate="no" class="notranslate text-nowrap">isRTL</code></td>\n<td>Will be <code translate="no" class="notranslate text-nowrap">true</code> if the calendar is in a RTL (Right-To-Left) orientation. It will be <code translate="no" class="notranslate text-nowrap">false</code> if LTR (Left-To-Right)</td>\n</tr>\n</tbody></table>\n</div><p>If formatting dates manually via <code translate="no" class="notranslate text-nowrap">Intl.DateTimeFormat</code>, use the <code translate="no" class="notranslate text-nowrap">calendarLocale</code> property value\ninstead of the <code translate="no" class="notranslate text-nowrap">locale</code> property value to ensure you are using the same calendaring convention that\n<code translate="no" class="notranslate text-nowrap">&lt;b-calendar&gt;</code> uses. This is especially true for the IE 11 browser which does not fully implement\nall features of <code translate="no" class="notranslate text-nowrap">Intl.DateTimeFormat</code>. Refer to the\n<a href="#internationalization" class="font-weight-bold">Internationalization section</a> section below for additional details.</p>\n<h2 id="internationalization" class="bv-no-focus-ring"><span class="bd-content-title">Internationalization<a class="anchorjs-link" href="#internationalization" aria-labelledby="internationalization"></a></span></h2>\n<p>Internationalization of the calendar is provided via\n<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat" target="_blank" rel="noopener"><code translate="no" class="notranslate text-nowrap">Intl.DateTimeFormat</code></a>,\nexcept for labels applied to elements of the calendar control (aria-labels, selected status, and\nhelp text). You must provide your own translations for these labels. The available locales will be\nbrowser dependant (not all browsers support all locales)</p>\n<p>By default <code translate="no" class="notranslate text-nowrap">&lt;b-calendar&gt;</code> will use the browser&#39;s default locale, but you can specify the locale (or\nlocales) to use via the <code translate="no" class="notranslate text-nowrap">locale</code> prop. The prop accepts either a single locale string, or an array\nof locale strings (listed in order of preferred locale).</p>\n<p>The calendar starts the week on Sunday. This can be changed by setting the <code translate="no" class="notranslate text-nowrap">start-weekday</code> prop to a\nnumber in the range of <code translate="no" class="notranslate text-nowrap">0</code> to <code translate="no" class="notranslate text-nowrap">6</code> where <code translate="no" class="notranslate text-nowrap">0</code> represents Sunday, <code translate="no" class="notranslate text-nowrap">1</code> for Monday, up to <code translate="no" class="notranslate text-nowrap">6</code> for\nSaturday.</p>\n<p>The emitted <code translate="no" class="notranslate text-nowrap">context</code> event will include which locale the calendar has resolved to (which may not be\nthe same locale as requested, depending on the supported locales of <code translate="no" class="notranslate text-nowrap">Intl</code>).</p>\n<pre class="hljs html text-monospace p-2 notranslate" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">"12"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mb-3"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">"example-locales"</span>&gt;</span>Locale:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"example-locales"</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"locale"</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">"locales"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-select</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">"example-weekdays"</span>&gt;</span>Start weekday:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"example-weekdays"</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"weekday"</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">"weekdays"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-select</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">"auto"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-calendar</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">"value"</span>\n        <span class="hljs-attr">v-bind</span>=<span class="hljs-string">"labels[locale] || {}"</span>\n        <span class="hljs-attr">:locale</span>=<span class="hljs-string">"locale"</span>\n        <span class="hljs-attr">:start-weekday</span>=<span class="hljs-string">"weekday"</span>\n        @<span class="hljs-attr">context</span>=<span class="hljs-string">"onContext"</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-calendar</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Value: <span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>\'{{ value }}\'<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"mb-0"</span>&gt;</span>Context:<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">pre</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"small"</span>&gt;</span>{{ context }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n   <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    data() {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">\'\'</span>,\n        <span class="hljs-attr">context</span>: <span class="hljs-literal">null</span>,\n        <span class="hljs-attr">locale</span>: <span class="hljs-string">\'en-US\'</span>,\n        <span class="hljs-attr">locales</span>: [\n          { <span class="hljs-attr">value</span>: <span class="hljs-string">\'en-US\'</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">\'English US (en-US)\'</span> },\n          { <span class="hljs-attr">value</span>: <span class="hljs-string">\'de\'</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">\'German (de)\'</span> },\n          { <span class="hljs-attr">value</span>: <span class="hljs-string">\'ar-EG\'</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">\'Arabic Egyptian (ar-EG)\'</span> },\n          { <span class="hljs-attr">value</span>: <span class="hljs-string">\'zh\'</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">\'Chinese (zh)\'</span> }\n        ],\n        <span class="hljs-attr">weekday</span>: <span class="hljs-number">0</span>,\n        <span class="hljs-attr">weekdays</span>: [\n          { <span class="hljs-attr">value</span>: <span class="hljs-number">0</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">\'Sunday\'</span> },\n          { <span class="hljs-attr">value</span>: <span class="hljs-number">1</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">\'Monday\'</span> },\n          { <span class="hljs-attr">value</span>: <span class="hljs-number">6</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">\'Saturday\'</span> }\n        ],\n        <span class="hljs-attr">labels</span>: {\n          <span class="hljs-attr">de</span>: {\n            <span class="hljs-attr">labelPrevYear</span>: <span class="hljs-string">\'Vorheriges Jahr\'</span>,\n            <span class="hljs-attr">labelPrevMonth</span>: <span class="hljs-string">\'Vorheriger Monat\'</span>,\n            <span class="hljs-attr">labelCurrentMonth</span>: <span class="hljs-string">\'Aktueller Monat\'</span>,\n            <span class="hljs-attr">labelNextMonth</span>: <span class="hljs-string">\'Nächster Monat\'</span>,\n            <span class="hljs-attr">labelNextYear</span>: <span class="hljs-string">\'Nächstes Jahr\'</span>,\n            <span class="hljs-attr">labelToday</span>: <span class="hljs-string">\'Heute\'</span>,\n            <span class="hljs-attr">labelSelected</span>: <span class="hljs-string">\'Ausgewähltes Datum\'</span>,\n            <span class="hljs-attr">labelNoDateSelected</span>: <span class="hljs-string">\'Kein Datum gewählt\'</span>,\n            <span class="hljs-attr">labelCalendar</span>: <span class="hljs-string">\'Kalender\'</span>,\n            <span class="hljs-attr">labelNav</span>: <span class="hljs-string">\'Kalendernavigation\'</span>,\n            <span class="hljs-attr">labelHelp</span>: <span class="hljs-string">\'Mit den Pfeiltasten durch den Kalender navigieren\'</span>\n          },\n          <span class="hljs-string">\'ar-EG\'</span>: {\n            <span class="hljs-attr">labelPrevYear</span>: <span class="hljs-string">\'العام السابق\'</span>,\n            <span class="hljs-attr">labelPrevMonth</span>: <span class="hljs-string">\'الشهر السابق\'</span>,\n            <span class="hljs-attr">labelCurrentMonth</span>: <span class="hljs-string">\'الشهر الحالي\'</span>,\n            <span class="hljs-attr">labelNextMonth</span>: <span class="hljs-string">\'الشهر المقبل\'</span>,\n            <span class="hljs-attr">labelNextYear</span>: <span class="hljs-string">\'العام المقبل\'</span>,\n            <span class="hljs-attr">labelToday</span>: <span class="hljs-string">\'اليوم\'</span>,\n            <span class="hljs-attr">labelSelected</span>: <span class="hljs-string">\'التاريخ المحدد\'</span>,\n            <span class="hljs-attr">labelNoDateSelected</span>: <span class="hljs-string">\'لم يتم اختيار تاريخ\'</span>,\n            <span class="hljs-attr">labelCalendar</span>: <span class="hljs-string">\'التقويم\'</span>,\n            <span class="hljs-attr">labelNav</span>: <span class="hljs-string">\'الملاحة التقويم\'</span>,\n            <span class="hljs-attr">labelHelp</span>: <span class="hljs-string">\'استخدم مفاتيح المؤشر للتنقل في التواريخ\'</span>\n          },\n          <span class="hljs-attr">zh</span>: {\n            <span class="hljs-attr">labelPrevYear</span>: <span class="hljs-string">\'上一年\'</span>,\n            <span class="hljs-attr">labelPrevMonth</span>: <span class="hljs-string">\'上个月\'</span>,\n            <span class="hljs-attr">labelCurrentMonth</span>: <span class="hljs-string">\'当前月份\'</span>,\n            <span class="hljs-attr">labelNextMonth</span>: <span class="hljs-string">\'下个月\'</span>,\n            <span class="hljs-attr">labelNextYear</span>: <span class="hljs-string">\'明年\'</span>,\n            <span class="hljs-attr">labelToday</span>: <span class="hljs-string">\'今天\'</span>,\n            <span class="hljs-attr">labelSelected</span>: <span class="hljs-string">\'选定日期\'</span>,\n            <span class="hljs-attr">labelNoDateSelected</span>: <span class="hljs-string">\'未选择日期\'</span>,\n            <span class="hljs-attr">labelCalendar</span>: <span class="hljs-string">\'日历\'</span>,\n            <span class="hljs-attr">labelNav</span>: <span class="hljs-string">\'日历导航\'</span>,\n            <span class="hljs-attr">labelHelp</span>: <span class="hljs-string">\'使用光标键浏览日期\'</span>\n          }\n        }\n      }\n    },\n    <span class="hljs-attr">methods</span>: {\n      onContext(ctx) {\n        <span class="hljs-keyword">this</span>.context = ctx\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-calendar-i18n.vue --&gt;</span></pre><p>Currently <code translate="no" class="notranslate text-nowrap">&lt;b-calendar&gt;</code> only supports the Gregorian (<code translate="no" class="notranslate text-nowrap">&#39;gregory&#39;</code>) calendar.</p>\n<p>By default, <code translate="no" class="notranslate text-nowrap">&lt;b-calendar&gt;</code> automatically detects RTL vs LTR via the resolved locale. You can force\nthe calendar to render right-to-left by setting the <code translate="no" class="notranslate text-nowrap">direction</code> prop to the string <code translate="no" class="notranslate text-nowrap">rtl</code>, or set the\n<code translate="no" class="notranslate text-nowrap">direction</code> prop to <code translate="no" class="notranslate text-nowrap">&#39;ltr&#39;</code> to always render left-to-right.</p>\n<p>You can listen to the <code translate="no" class="notranslate text-nowrap">context</code> event to determine the locale and directionality that the calendar\nhas resolved to.</p>\n<p>For server side rendering (SSR) when using Node.js, ensure that the Node.js runtime you are using\nsupports <code translate="no" class="notranslate text-nowrap">Intl</code> and the locales you will be using. Refer to the\n<a href="https://nodejs.org/api/intl.html" target="_blank" rel="noopener">Node <code translate="no" class="notranslate text-nowrap">Intl</code> support documentation</a> for details.</p>\n<h2 id="accessibility" class="bv-no-focus-ring"><span class="bd-content-title">Accessibility<a class="anchorjs-link" href="#accessibility" aria-labelledby="accessibility"></a></span></h2>\n<p><code translate="no" class="notranslate text-nowrap">&lt;b-calendar&gt;</code> provides many accessibility features, such as <code translate="no" class="notranslate text-nowrap">aria-live</code> regions, roles, aria\nlabeling, shortcut keys and full keyboard navigation to work with most screen readers.</p>\n<p>Keyboard navigation:</p>\n<ul>\n<li><kbd class="notranslate" translate="no">ArrowLeft</kbd> moves to the previous day (or next day in RTL mode)</li>\n<li><kbd class="notranslate" translate="no">ArrowRight</kbd> moves to the next day (or previous day in RTL mode)</li>\n<li><kbd class="notranslate" translate="no">ArrowUp</kbd> moves to the same day in the previous week</li>\n<li><kbd class="notranslate" translate="no">ArrowDown</kbd> moves to the same day in the next week</li>\n<li><kbd class="notranslate" translate="no">PageUp</kbd> moves to the same day in the previous month</li>\n<li><kbd class="notranslate" translate="no">PageDown</kbd> moves to the same day in the next month</li>\n<li><kbd class="notranslate" translate="no">Alt</kbd>+<kbd class="notranslate" translate="no">PageUp</kbd> moves to the same day and month in the previous year</li>\n<li><kbd class="notranslate" translate="no">Alt</kbd>+<kbd class="notranslate" translate="no">PageDown</kbd> moves to the same day and month in the next year</li>\n<li><kbd class="notranslate" translate="no">Home</kbd> moves to today&#39;s date</li>\n<li><kbd class="notranslate" translate="no">End</kbd> moves to the current selected date, or today if no selected date</li>\n<li><kbd class="notranslate" translate="no">Enter</kbd> or <kbd class="notranslate" translate="no">Space</kbd> selects the currently highlighted (focused) day</li>\n</ul>\n<p>Several of the <code translate="no" class="notranslate text-nowrap">label-*</code> props are not visible on screen, but are used to label various elements\nwithin the calendar for screen reader users. e.g. the <code translate="no" class="notranslate text-nowrap">label-today</code> prop is added to the cell that\ncontains todays date: <code translate="no" class="notranslate text-nowrap">&#39;January 28, 2020 (Today)&#39;</code>, while the <code translate="no" class="notranslate text-nowrap">label-selected</code> prop is added to the\ncell that contains the selected date <code translate="no" class="notranslate text-nowrap">&#39;January 28, 2020 (Selected date)&#39;</code> as well as added to the\nselected date header as <code translate="no" class="notranslate text-nowrap">sr-only</code> text.</p>\n<p>When internationalizing the datepicker, it is important to also update the <code translate="no" class="notranslate text-nowrap">label-*</code> props with\nappropriate translated strings, so that international screen reader users will hear the correct\nprompts and descriptions.</p>\n<p>The features and styling of <code translate="no" class="notranslate text-nowrap">&lt;b-calendar&gt;</code> are intentionally kept minimalistic in order to provide\nthe best possible accessibility to <em>all</em> users.</p>\n<h2 id="implementation-notes" class="bv-no-focus-ring"><span class="bd-content-title">Implementation notes<a class="anchorjs-link" href="#implementation-notes" aria-labelledby="implementation-notes"></a></span></h2>\n<p><code translate="no" class="notranslate text-nowrap">&lt;b-calendar&gt;</code> uses Bootstrap&#39;s margin, padding, border, and flex utility classes, along with button\n(<code translate="no" class="notranslate text-nowrap">btn-*</code>) classes and the <code translate="no" class="notranslate text-nowrap">form-control</code> class. BootstrapVue&#39;s custom SCSS/CSS is also required for\nproper styling.</p>\n<p>Accessibility-wise, we chose <em>not</em> to use the ARIA role <code translate="no" class="notranslate text-nowrap">grid</code> for the calendar to minimize\nverbosity and to provide consistency across various screen readers (NVDA, when encountering role\n<code translate="no" class="notranslate text-nowrap">grid</code>, reads the focused cell as being &quot;selected&quot; which can be misleading to the user).</p>\n<h2 id="see-also" class="bv-no-focus-ring"><span class="bd-content-title">See also<a class="anchorjs-link" href="#see-also" aria-labelledby="see-also"></a></span></h2>\n<ul>\n<li><a href="/docs/components/form-datepicker" class="font-weight-bold"><code translate="no" class="notranslate text-nowrap">&lt;b-form-datepicker&gt;</code> Date picker custom form input</a></li>\n</ul>\n'}}]);